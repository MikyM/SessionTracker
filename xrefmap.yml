### YamlMime:XRefMap
sorted: true
references:
- uid: SessionTracker
  name: SessionTracker
  href: api/SessionTracker.html
  commentId: N:SessionTracker
  fullName: SessionTracker
  nameWithType: SessionTracker
- uid: SessionTracker.Abstractions
  name: SessionTracker.Abstractions
  href: api/SessionTracker.Abstractions.html
  commentId: N:SessionTracker.Abstractions
  fullName: SessionTracker.Abstractions
  nameWithType: SessionTracker.Abstractions
- uid: SessionTracker.Abstractions.ILockedSession`1
  name: ILockedSession<TSession>
  href: api/SessionTracker.Abstractions.ILockedSession-1.html
  commentId: T:SessionTracker.Abstractions.ILockedSession`1
  name.vb: ILockedSession(Of TSession)
  fullName: SessionTracker.Abstractions.ILockedSession<TSession>
  fullName.vb: SessionTracker.Abstractions.ILockedSession(Of TSession)
  nameWithType: ILockedSession<TSession>
  nameWithType.vb: ILockedSession(Of TSession)
- uid: SessionTracker.Abstractions.ILockedSession`1.Lock
  name: Lock
  href: api/SessionTracker.Abstractions.ILockedSession-1.html#SessionTracker_Abstractions_ILockedSession_1_Lock
  commentId: P:SessionTracker.Abstractions.ILockedSession`1.Lock
  fullName: SessionTracker.Abstractions.ILockedSession<TSession>.Lock
  fullName.vb: SessionTracker.Abstractions.ILockedSession(Of TSession).Lock
  nameWithType: ILockedSession<TSession>.Lock
  nameWithType.vb: ILockedSession(Of TSession).Lock
- uid: SessionTracker.Abstractions.ILockedSession`1.Lock*
  name: Lock
  href: api/SessionTracker.Abstractions.ILockedSession-1.html#SessionTracker_Abstractions_ILockedSession_1_Lock_
  commentId: Overload:SessionTracker.Abstractions.ILockedSession`1.Lock
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ILockedSession<TSession>.Lock
  fullName.vb: SessionTracker.Abstractions.ILockedSession(Of TSession).Lock
  nameWithType: ILockedSession<TSession>.Lock
  nameWithType.vb: ILockedSession(Of TSession).Lock
- uid: SessionTracker.Abstractions.ILockedSession`1.Session
  name: Session
  href: api/SessionTracker.Abstractions.ILockedSession-1.html#SessionTracker_Abstractions_ILockedSession_1_Session
  commentId: P:SessionTracker.Abstractions.ILockedSession`1.Session
  fullName: SessionTracker.Abstractions.ILockedSession<TSession>.Session
  fullName.vb: SessionTracker.Abstractions.ILockedSession(Of TSession).Session
  nameWithType: ILockedSession<TSession>.Session
  nameWithType.vb: ILockedSession(Of TSession).Session
- uid: SessionTracker.Abstractions.ILockedSession`1.Session*
  name: Session
  href: api/SessionTracker.Abstractions.ILockedSession-1.html#SessionTracker_Abstractions_ILockedSession_1_Session_
  commentId: Overload:SessionTracker.Abstractions.ILockedSession`1.Session
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ILockedSession<TSession>.Session
  fullName.vb: SessionTracker.Abstractions.ILockedSession(Of TSession).Session
  nameWithType: ILockedSession<TSession>.Session
  nameWithType.vb: ILockedSession(Of TSession).Session
- uid: SessionTracker.Abstractions.ISession
  name: ISession
  href: api/SessionTracker.Abstractions.ISession.html
  commentId: T:SessionTracker.Abstractions.ISession
  fullName: SessionTracker.Abstractions.ISession
  nameWithType: ISession
- uid: SessionTracker.Abstractions.ISession.EvictedProviderKey
  name: EvictedProviderKey
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_EvictedProviderKey
  commentId: P:SessionTracker.Abstractions.ISession.EvictedProviderKey
  fullName: SessionTracker.Abstractions.ISession.EvictedProviderKey
  nameWithType: ISession.EvictedProviderKey
- uid: SessionTracker.Abstractions.ISession.EvictedProviderKey*
  name: EvictedProviderKey
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_EvictedProviderKey_
  commentId: Overload:SessionTracker.Abstractions.ISession.EvictedProviderKey
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISession.EvictedProviderKey
  nameWithType: ISession.EvictedProviderKey
- uid: SessionTracker.Abstractions.ISession.Key
  name: Key
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_Key
  commentId: P:SessionTracker.Abstractions.ISession.Key
  fullName: SessionTracker.Abstractions.ISession.Key
  nameWithType: ISession.Key
- uid: SessionTracker.Abstractions.ISession.Key*
  name: Key
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_Key_
  commentId: Overload:SessionTracker.Abstractions.ISession.Key
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISession.Key
  nameWithType: ISession.Key
- uid: SessionTracker.Abstractions.ISession.ProviderKey
  name: ProviderKey
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_ProviderKey
  commentId: P:SessionTracker.Abstractions.ISession.ProviderKey
  fullName: SessionTracker.Abstractions.ISession.ProviderKey
  nameWithType: ISession.ProviderKey
- uid: SessionTracker.Abstractions.ISession.ProviderKey*
  name: ProviderKey
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_ProviderKey_
  commentId: Overload:SessionTracker.Abstractions.ISession.ProviderKey
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISession.ProviderKey
  nameWithType: ISession.ProviderKey
- uid: SessionTracker.Abstractions.ISession.SetProviderKeys(System.String,System.String)
  name: SetProviderKeys(String, String)
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_SetProviderKeys_System_String_System_String_
  commentId: M:SessionTracker.Abstractions.ISession.SetProviderKeys(System.String,System.String)
  fullName: SessionTracker.Abstractions.ISession.SetProviderKeys(System.String, System.String)
  nameWithType: ISession.SetProviderKeys(String, String)
- uid: SessionTracker.Abstractions.ISession.SetProviderKeys*
  name: SetProviderKeys
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_SetProviderKeys_
  commentId: Overload:SessionTracker.Abstractions.ISession.SetProviderKeys
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISession.SetProviderKeys
  nameWithType: ISession.SetProviderKeys
- uid: SessionTracker.Abstractions.ISession.StartedAt
  name: StartedAt
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_StartedAt
  commentId: P:SessionTracker.Abstractions.ISession.StartedAt
  fullName: SessionTracker.Abstractions.ISession.StartedAt
  nameWithType: ISession.StartedAt
- uid: SessionTracker.Abstractions.ISession.StartedAt*
  name: StartedAt
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_StartedAt_
  commentId: Overload:SessionTracker.Abstractions.ISession.StartedAt
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISession.StartedAt
  nameWithType: ISession.StartedAt
- uid: SessionTracker.Abstractions.ISession.Version
  name: Version
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_Version
  commentId: P:SessionTracker.Abstractions.ISession.Version
  fullName: SessionTracker.Abstractions.ISession.Version
  nameWithType: ISession.Version
- uid: SessionTracker.Abstractions.ISession.Version*
  name: Version
  href: api/SessionTracker.Abstractions.ISession.html#SessionTracker_Abstractions_ISession_Version_
  commentId: Overload:SessionTracker.Abstractions.ISession.Version
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISession.Version
  nameWithType: ISession.Version
- uid: SessionTracker.Abstractions.ISessionDataProvider
  name: ISessionDataProvider
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html
  commentId: T:SessionTracker.Abstractions.ISessionDataProvider
  fullName: SessionTracker.Abstractions.ISessionDataProvider
  nameWithType: ISessionDataProvider
- uid: SessionTracker.Abstractions.ISessionDataProvider.AddAsync*
  name: AddAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_AddAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.AddAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.AddAsync
  nameWithType: ISessionDataProvider.AddAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.AddAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name: AddAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_AddAsync__1___0_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.AddAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: AddAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.AddAsync<TSession>(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.AddAsync(Of TSession)(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: ISessionDataProvider.AddAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  nameWithType.vb: ISessionDataProvider.AddAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.EvictAndGetAsync*
  name: EvictAndGetAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_EvictAndGetAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.EvictAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.EvictAndGetAsync
  nameWithType: ISessionDataProvider.EvictAndGetAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.EvictAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: EvictAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_EvictAndGetAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.EvictAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: EvictAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.EvictAndGetAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.EvictAndGetAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: ISessionDataProvider.EvictAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: ISessionDataProvider.EvictAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.EvictAsync*
  name: EvictAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_EvictAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.EvictAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.EvictAsync
  nameWithType: ISessionDataProvider.EvictAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.EvictAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: EvictAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_EvictAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.EvictAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: EvictAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.EvictAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.EvictAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: ISessionDataProvider.EvictAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: ISessionDataProvider.EvictAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.GetAsync*
  name: GetAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_GetAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.GetAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.GetAsync
  nameWithType: ISessionDataProvider.GetAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.GetAsync``1(System.String,CancellationToken)
  name: GetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_GetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.GetAsync``1(System.String,CancellationToken)
  name.vb: GetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.GetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.GetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionDataProvider.GetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionDataProvider.GetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.GetEvictedAsync*
  name: GetEvictedAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_GetEvictedAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.GetEvictedAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.GetEvictedAsync
  nameWithType: ISessionDataProvider.GetEvictedAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.GetEvictedAsync``1(System.String,CancellationToken)
  name: GetEvictedAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_GetEvictedAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.GetEvictedAsync``1(System.String,CancellationToken)
  name.vb: GetEvictedAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.GetEvictedAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.GetEvictedAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionDataProvider.GetEvictedAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionDataProvider.GetEvictedAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.RefreshAsync*
  name: RefreshAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_RefreshAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.RefreshAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.RefreshAsync
  nameWithType: ISessionDataProvider.RefreshAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.RefreshAsync``1(System.String,CancellationToken)
  name: RefreshAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_RefreshAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.RefreshAsync``1(System.String,CancellationToken)
  name.vb: RefreshAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.RefreshAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.RefreshAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionDataProvider.RefreshAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionDataProvider.RefreshAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.RestoreAndGetAsync*
  name: RestoreAndGetAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_RestoreAndGetAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.RestoreAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.RestoreAndGetAsync
  nameWithType: ISessionDataProvider.RestoreAndGetAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.RestoreAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: RestoreAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_RestoreAndGetAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.RestoreAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: RestoreAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.RestoreAndGetAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.RestoreAndGetAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: ISessionDataProvider.RestoreAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: ISessionDataProvider.RestoreAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.RestoreAsync*
  name: RestoreAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_RestoreAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.RestoreAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.RestoreAsync
  nameWithType: ISessionDataProvider.RestoreAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.RestoreAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: RestoreAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_RestoreAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.RestoreAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: RestoreAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.RestoreAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.RestoreAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: ISessionDataProvider.RestoreAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: ISessionDataProvider.RestoreAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.UpdateAndGetAsync*
  name: UpdateAndGetAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_UpdateAndGetAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.UpdateAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.UpdateAndGetAsync
  nameWithType: ISessionDataProvider.UpdateAndGetAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.UpdateAndGetAsync``1(``0,CancellationToken)
  name: UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_UpdateAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.UpdateAndGetAsync``1(``0,CancellationToken)
  name.vb: UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionDataProvider.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionDataProvider.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionDataProvider.UpdateAsync*
  name: UpdateAsync
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_UpdateAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionDataProvider.UpdateAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionDataProvider.UpdateAsync
  nameWithType: ISessionDataProvider.UpdateAsync
- uid: SessionTracker.Abstractions.ISessionDataProvider.UpdateAsync``1(``0,CancellationToken)
  name: UpdateAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionDataProvider.html#SessionTracker_Abstractions_ISessionDataProvider_UpdateAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionDataProvider.UpdateAsync``1(``0,CancellationToken)
  name.vb: UpdateAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionDataProvider.UpdateAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionDataProvider.UpdateAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionDataProvider.UpdateAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionDataProvider.UpdateAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionLock
  name: ISessionLock
  href: api/SessionTracker.Abstractions.ISessionLock.html
  commentId: T:SessionTracker.Abstractions.ISessionLock
  fullName: SessionTracker.Abstractions.ISessionLock
  nameWithType: ISessionLock
- uid: SessionTracker.Abstractions.ISessionLock.ExpiresAt
  name: ExpiresAt
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_ExpiresAt
  commentId: P:SessionTracker.Abstractions.ISessionLock.ExpiresAt
  fullName: SessionTracker.Abstractions.ISessionLock.ExpiresAt
  nameWithType: ISessionLock.ExpiresAt
- uid: SessionTracker.Abstractions.ISessionLock.ExpiresAt*
  name: ExpiresAt
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_ExpiresAt_
  commentId: Overload:SessionTracker.Abstractions.ISessionLock.ExpiresAt
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionLock.ExpiresAt
  nameWithType: ISessionLock.ExpiresAt
- uid: SessionTracker.Abstractions.ISessionLock.Id
  name: Id
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_Id
  commentId: P:SessionTracker.Abstractions.ISessionLock.Id
  fullName: SessionTracker.Abstractions.ISessionLock.Id
  nameWithType: ISessionLock.Id
- uid: SessionTracker.Abstractions.ISessionLock.Id*
  name: Id
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_Id_
  commentId: Overload:SessionTracker.Abstractions.ISessionLock.Id
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionLock.Id
  nameWithType: ISessionLock.Id
- uid: SessionTracker.Abstractions.ISessionLock.IsAcquired
  name: IsAcquired
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_IsAcquired
  commentId: P:SessionTracker.Abstractions.ISessionLock.IsAcquired
  fullName: SessionTracker.Abstractions.ISessionLock.IsAcquired
  nameWithType: ISessionLock.IsAcquired
- uid: SessionTracker.Abstractions.ISessionLock.IsAcquired*
  name: IsAcquired
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_IsAcquired_
  commentId: Overload:SessionTracker.Abstractions.ISessionLock.IsAcquired
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionLock.IsAcquired
  nameWithType: ISessionLock.IsAcquired
- uid: SessionTracker.Abstractions.ISessionLock.Resource
  name: Resource
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_Resource
  commentId: P:SessionTracker.Abstractions.ISessionLock.Resource
  fullName: SessionTracker.Abstractions.ISessionLock.Resource
  nameWithType: ISessionLock.Resource
- uid: SessionTracker.Abstractions.ISessionLock.Resource*
  name: Resource
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_Resource_
  commentId: Overload:SessionTracker.Abstractions.ISessionLock.Resource
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionLock.Resource
  nameWithType: ISessionLock.Resource
- uid: SessionTracker.Abstractions.ISessionLock.Status
  name: Status
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_Status
  commentId: P:SessionTracker.Abstractions.ISessionLock.Status
  fullName: SessionTracker.Abstractions.ISessionLock.Status
  nameWithType: ISessionLock.Status
- uid: SessionTracker.Abstractions.ISessionLock.Status*
  name: Status
  href: api/SessionTracker.Abstractions.ISessionLock.html#SessionTracker_Abstractions_ISessionLock_Status_
  commentId: Overload:SessionTracker.Abstractions.ISessionLock.Status
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionLock.Status
  nameWithType: ISessionLock.Status
- uid: SessionTracker.Abstractions.ISessionLockProvider
  name: ISessionLockProvider
  href: api/SessionTracker.Abstractions.ISessionLockProvider.html
  commentId: T:SessionTracker.Abstractions.ISessionLockProvider
  fullName: SessionTracker.Abstractions.ISessionLockProvider
  nameWithType: ISessionLockProvider
- uid: SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync*
  name: AcquireAsync
  href: api/SessionTracker.Abstractions.ISessionLockProvider.html#SessionTracker_Abstractions_ISessionLockProvider_AcquireAsync_
  commentId: Overload:SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync
  nameWithType: ISessionLockProvider.AcquireAsync
- uid: SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync``1(System.String,TimeSpan,CancellationToken)
  name: AcquireAsync<TSession>(String, TimeSpan, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionLockProvider.html#SessionTracker_Abstractions_ISessionLockProvider_AcquireAsync__1_System_String_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync``1(System.String,TimeSpan,CancellationToken)
  name.vb: AcquireAsync(Of TSession)(String, TimeSpan, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync<TSession>(System.String, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync(Of TSession)(System.String, TimeSpan, CancellationToken)
  nameWithType: ISessionLockProvider.AcquireAsync<TSession>(String, TimeSpan, CancellationToken)
  nameWithType.vb: ISessionLockProvider.AcquireAsync(Of TSession)(String, TimeSpan, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: AcquireAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.Abstractions.ISessionLockProvider.html#SessionTracker_Abstractions_ISessionLockProvider_AcquireAsync__1_System_String_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: AcquireAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync<TSession>(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.Abstractions.ISessionLockProvider.AcquireAsync(Of TSession)(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: ISessionLockProvider.AcquireAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: ISessionLockProvider.AcquireAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.Abstractions.ISessionProviderKey
  name: ISessionProviderKey
  href: api/SessionTracker.Abstractions.ISessionProviderKey.html
  commentId: T:SessionTracker.Abstractions.ISessionProviderKey
  fullName: SessionTracker.Abstractions.ISessionProviderKey
  nameWithType: ISessionProviderKey
- uid: SessionTracker.Abstractions.ISessionProviderKey.Id
  name: Id
  href: api/SessionTracker.Abstractions.ISessionProviderKey.html#SessionTracker_Abstractions_ISessionProviderKey_Id
  commentId: P:SessionTracker.Abstractions.ISessionProviderKey.Id
  fullName: SessionTracker.Abstractions.ISessionProviderKey.Id
  nameWithType: ISessionProviderKey.Id
- uid: SessionTracker.Abstractions.ISessionProviderKey.Id*
  name: Id
  href: api/SessionTracker.Abstractions.ISessionProviderKey.html#SessionTracker_Abstractions_ISessionProviderKey_Id_
  commentId: Overload:SessionTracker.Abstractions.ISessionProviderKey.Id
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionProviderKey.Id
  nameWithType: ISessionProviderKey.Id
- uid: SessionTracker.Abstractions.ISessionProviderKey.IsEvicted
  name: IsEvicted
  href: api/SessionTracker.Abstractions.ISessionProviderKey.html#SessionTracker_Abstractions_ISessionProviderKey_IsEvicted
  commentId: P:SessionTracker.Abstractions.ISessionProviderKey.IsEvicted
  fullName: SessionTracker.Abstractions.ISessionProviderKey.IsEvicted
  nameWithType: ISessionProviderKey.IsEvicted
- uid: SessionTracker.Abstractions.ISessionProviderKey.IsEvicted*
  name: IsEvicted
  href: api/SessionTracker.Abstractions.ISessionProviderKey.html#SessionTracker_Abstractions_ISessionProviderKey_IsEvicted_
  commentId: Overload:SessionTracker.Abstractions.ISessionProviderKey.IsEvicted
  isSpec: "True"
  fullName: SessionTracker.Abstractions.ISessionProviderKey.IsEvicted
  nameWithType: ISessionProviderKey.IsEvicted
- uid: SessionTracker.DistributedLock
  name: SessionTracker.DistributedLock
  href: api/SessionTracker.DistributedLock.html
  commentId: N:SessionTracker.DistributedLock
  fullName: SessionTracker.DistributedLock
  nameWithType: SessionTracker.DistributedLock
- uid: SessionTracker.DistributedLock.DistributedLockNameCreator
  name: DistributedLockNameCreator
  href: api/SessionTracker.DistributedLock.DistributedLockNameCreator.html
  commentId: T:SessionTracker.DistributedLock.DistributedLockNameCreator
  fullName: SessionTracker.DistributedLock.DistributedLockNameCreator
  nameWithType: DistributedLockNameCreator
- uid: SessionTracker.DistributedLock.DistributedLockNameCreator.#ctor(IOptions{SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings})
  name: DistributedLockNameCreator(IOptions<DistributedLockSessionTrackerSettings>)
  href: api/SessionTracker.DistributedLock.DistributedLockNameCreator.html#SessionTracker_DistributedLock_DistributedLockNameCreator__ctor_IOptions_SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings__
  commentId: M:SessionTracker.DistributedLock.DistributedLockNameCreator.#ctor(IOptions{SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings})
  name.vb: DistributedLockNameCreator(IOptions(Of DistributedLockSessionTrackerSettings))
  fullName: SessionTracker.DistributedLock.DistributedLockNameCreator.DistributedLockNameCreator(IOptions<SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings>)
  fullName.vb: SessionTracker.DistributedLock.DistributedLockNameCreator.DistributedLockNameCreator(IOptions(Of SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings))
  nameWithType: DistributedLockNameCreator.DistributedLockNameCreator(IOptions<DistributedLockSessionTrackerSettings>)
  nameWithType.vb: DistributedLockNameCreator.DistributedLockNameCreator(IOptions(Of DistributedLockSessionTrackerSettings))
- uid: SessionTracker.DistributedLock.DistributedLockNameCreator.#ctor*
  name: DistributedLockNameCreator
  href: api/SessionTracker.DistributedLock.DistributedLockNameCreator.html#SessionTracker_DistributedLock_DistributedLockNameCreator__ctor_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockNameCreator.#ctor
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockNameCreator.DistributedLockNameCreator
  nameWithType: DistributedLockNameCreator.DistributedLockNameCreator
- uid: SessionTracker.DistributedLock.DistributedLockNameCreator.CreateName*
  name: CreateName
  href: api/SessionTracker.DistributedLock.DistributedLockNameCreator.html#SessionTracker_DistributedLock_DistributedLockNameCreator_CreateName_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockNameCreator.CreateName
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockNameCreator.CreateName
  nameWithType: DistributedLockNameCreator.CreateName
- uid: SessionTracker.DistributedLock.DistributedLockNameCreator.CreateName``1(System.String)
  name: CreateName<TSession>(String)
  href: api/SessionTracker.DistributedLock.DistributedLockNameCreator.html#SessionTracker_DistributedLock_DistributedLockNameCreator_CreateName__1_System_String_
  commentId: M:SessionTracker.DistributedLock.DistributedLockNameCreator.CreateName``1(System.String)
  name.vb: CreateName(Of TSession)(String)
  fullName: SessionTracker.DistributedLock.DistributedLockNameCreator.CreateName<TSession>(System.String)
  fullName.vb: SessionTracker.DistributedLock.DistributedLockNameCreator.CreateName(Of TSession)(System.String)
  nameWithType: DistributedLockNameCreator.CreateName<TSession>(String)
  nameWithType.vb: DistributedLockNameCreator.CreateName(Of TSession)(String)
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock
  name: DistributedLockSessionLock
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html
  commentId: T:SessionTracker.DistributedLock.DistributedLockSessionLock
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock
  nameWithType: DistributedLockSessionLock
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.Dispose
  name: Dispose()
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_Dispose
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionLock.Dispose
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.Dispose()
  nameWithType: DistributedLockSessionLock.Dispose()
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.Dispose*
  name: Dispose
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_Dispose_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLock.Dispose
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.Dispose
  nameWithType: DistributedLockSessionLock.Dispose
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.DisposeAsync
  name: DisposeAsync()
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_DisposeAsync
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionLock.DisposeAsync
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.DisposeAsync()
  nameWithType: DistributedLockSessionLock.DisposeAsync()
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.DisposeAsync*
  name: DisposeAsync
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_DisposeAsync_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLock.DisposeAsync
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.DisposeAsync
  nameWithType: DistributedLockSessionLock.DisposeAsync
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.ExpiresAt
  name: ExpiresAt
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_ExpiresAt
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionLock.ExpiresAt
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.ExpiresAt
  nameWithType: DistributedLockSessionLock.ExpiresAt
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.ExpiresAt*
  name: ExpiresAt
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_ExpiresAt_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLock.ExpiresAt
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.ExpiresAt
  nameWithType: DistributedLockSessionLock.ExpiresAt
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.HandleLostToken
  name: HandleLostToken
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_HandleLostToken
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionLock.HandleLostToken
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.HandleLostToken
  nameWithType: DistributedLockSessionLock.HandleLostToken
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.HandleLostToken*
  name: HandleLostToken
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_HandleLostToken_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLock.HandleLostToken
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.HandleLostToken
  nameWithType: DistributedLockSessionLock.HandleLostToken
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.Id
  name: Id
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_Id
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionLock.Id
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.Id
  nameWithType: DistributedLockSessionLock.Id
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.Id*
  name: Id
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_Id_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLock.Id
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.Id
  nameWithType: DistributedLockSessionLock.Id
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.IsAcquired
  name: IsAcquired
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_IsAcquired
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionLock.IsAcquired
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.IsAcquired
  nameWithType: DistributedLockSessionLock.IsAcquired
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.IsAcquired*
  name: IsAcquired
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_IsAcquired_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLock.IsAcquired
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.IsAcquired
  nameWithType: DistributedLockSessionLock.IsAcquired
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.Resource
  name: Resource
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_Resource
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionLock.Resource
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.Resource
  nameWithType: DistributedLockSessionLock.Resource
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.Resource*
  name: Resource
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_Resource_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLock.Resource
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.Resource
  nameWithType: DistributedLockSessionLock.Resource
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.Status
  name: Status
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_Status
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionLock.Status
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.Status
  nameWithType: DistributedLockSessionLock.Status
- uid: SessionTracker.DistributedLock.DistributedLockSessionLock.Status*
  name: Status
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLock.html#SessionTracker_DistributedLock_DistributedLockSessionLock_Status_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLock.Status
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLock.Status
  nameWithType: DistributedLockSessionLock.Status
- uid: SessionTracker.DistributedLock.DistributedLockSessionLockProvider
  name: DistributedLockSessionLockProvider
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLockProvider.html
  commentId: T:SessionTracker.DistributedLock.DistributedLockSessionLockProvider
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLockProvider
  nameWithType: DistributedLockSessionLockProvider
- uid: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.#ctor(IDistributedLockProvider,ILogger{SessionTracker.DistributedLock.DistributedLockSessionLockProvider},SessionTracker.DistributedLock.DistributedLockNameCreator,TimeProvider)
  name: DistributedLockSessionLockProvider(IDistributedLockProvider, ILogger<DistributedLockSessionLockProvider>, DistributedLockNameCreator, TimeProvider)
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLockProvider.html#SessionTracker_DistributedLock_DistributedLockSessionLockProvider__ctor_IDistributedLockProvider_ILogger_SessionTracker_DistributedLock_DistributedLockSessionLockProvider__SessionTracker_DistributedLock_DistributedLockNameCreator_TimeProvider_
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionLockProvider.#ctor(IDistributedLockProvider,ILogger{SessionTracker.DistributedLock.DistributedLockSessionLockProvider},SessionTracker.DistributedLock.DistributedLockNameCreator,TimeProvider)
  name.vb: DistributedLockSessionLockProvider(IDistributedLockProvider, ILogger(Of DistributedLockSessionLockProvider), DistributedLockNameCreator, TimeProvider)
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.DistributedLockSessionLockProvider(IDistributedLockProvider, ILogger<SessionTracker.DistributedLock.DistributedLockSessionLockProvider>, SessionTracker.DistributedLock.DistributedLockNameCreator, TimeProvider)
  fullName.vb: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.DistributedLockSessionLockProvider(IDistributedLockProvider, ILogger(Of SessionTracker.DistributedLock.DistributedLockSessionLockProvider), SessionTracker.DistributedLock.DistributedLockNameCreator, TimeProvider)
  nameWithType: DistributedLockSessionLockProvider.DistributedLockSessionLockProvider(IDistributedLockProvider, ILogger<DistributedLockSessionLockProvider>, DistributedLockNameCreator, TimeProvider)
  nameWithType.vb: DistributedLockSessionLockProvider.DistributedLockSessionLockProvider(IDistributedLockProvider, ILogger(Of DistributedLockSessionLockProvider), DistributedLockNameCreator, TimeProvider)
- uid: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.#ctor*
  name: DistributedLockSessionLockProvider
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLockProvider.html#SessionTracker_DistributedLock_DistributedLockSessionLockProvider__ctor_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLockProvider.#ctor
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.DistributedLockSessionLockProvider
  nameWithType: DistributedLockSessionLockProvider.DistributedLockSessionLockProvider
- uid: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync*
  name: AcquireAsync
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLockProvider.html#SessionTracker_DistributedLock_DistributedLockSessionLockProvider_AcquireAsync_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync
  nameWithType: DistributedLockSessionLockProvider.AcquireAsync
- uid: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync``1(System.String,TimeSpan,CancellationToken)
  name: AcquireAsync<TSession>(String, TimeSpan, CancellationToken)
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLockProvider.html#SessionTracker_DistributedLock_DistributedLockSessionLockProvider_AcquireAsync__1_System_String_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync``1(System.String,TimeSpan,CancellationToken)
  name.vb: AcquireAsync(Of TSession)(String, TimeSpan, CancellationToken)
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync<TSession>(System.String, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync(Of TSession)(System.String, TimeSpan, CancellationToken)
  nameWithType: DistributedLockSessionLockProvider.AcquireAsync<TSession>(String, TimeSpan, CancellationToken)
  nameWithType.vb: DistributedLockSessionLockProvider.AcquireAsync(Of TSession)(String, TimeSpan, CancellationToken)
- uid: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: AcquireAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.DistributedLock.DistributedLockSessionLockProvider.html#SessionTracker_DistributedLock_DistributedLockSessionLockProvider_AcquireAsync__1_System_String_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: AcquireAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync<TSession>(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.DistributedLock.DistributedLockSessionLockProvider.AcquireAsync(Of TSession)(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: DistributedLockSessionLockProvider.AcquireAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: DistributedLockSessionLockProvider.AcquireAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder
  name: DistributedLockSessionTrackerBuilder
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.html
  commentId: T:SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder
  nameWithType: DistributedLockSessionTrackerBuilder
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.#ctor(SessionTracker.SessionTrackerBuilder)
  name: DistributedLockSessionTrackerBuilder(SessionTrackerBuilder)
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerBuilder__ctor_SessionTracker_SessionTrackerBuilder_
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.#ctor(SessionTracker.SessionTrackerBuilder)
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.DistributedLockSessionTrackerBuilder(SessionTracker.SessionTrackerBuilder)
  nameWithType: DistributedLockSessionTrackerBuilder.DistributedLockSessionTrackerBuilder(SessionTrackerBuilder)
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.#ctor*
  name: DistributedLockSessionTrackerBuilder
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerBuilder__ctor_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.#ctor
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.DistributedLockSessionTrackerBuilder
  nameWithType: DistributedLockSessionTrackerBuilder.DistributedLockSessionTrackerBuilder
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.Complete
  name: Complete()
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerBuilder_Complete
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.Complete
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.Complete()
  nameWithType: DistributedLockSessionTrackerBuilder.Complete()
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.Complete*
  name: Complete
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerBuilder_Complete_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.Complete
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.Complete
  nameWithType: DistributedLockSessionTrackerBuilder.Complete
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.SessionTrackerBuilder
  name: SessionTrackerBuilder
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerBuilder_SessionTrackerBuilder
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.SessionTrackerBuilder
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.SessionTrackerBuilder
  nameWithType: DistributedLockSessionTrackerBuilder.SessionTrackerBuilder
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.SessionTrackerBuilder*
  name: SessionTrackerBuilder
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerBuilder_SessionTrackerBuilder_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.SessionTrackerBuilder
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerBuilder.SessionTrackerBuilder
  nameWithType: DistributedLockSessionTrackerBuilder.SessionTrackerBuilder
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings
  name: DistributedLockSessionTrackerSettings
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html
  commentId: T:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings
  nameWithType: DistributedLockSessionTrackerSettings
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionKeyPrefix
  name: SessionKeyPrefix
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings_SessionKeyPrefix
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionKeyPrefix
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionKeyPrefix
  nameWithType: DistributedLockSessionTrackerSettings.SessionKeyPrefix
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionKeyPrefix*
  name: SessionKeyPrefix
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings_SessionKeyPrefix_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionKeyPrefix
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionKeyPrefix
  nameWithType: DistributedLockSessionTrackerSettings.SessionKeyPrefix
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionLockPrefix
  name: SessionLockPrefix
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings_SessionLockPrefix
  commentId: P:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionLockPrefix
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionLockPrefix
  nameWithType: DistributedLockSessionTrackerSettings.SessionLockPrefix
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionLockPrefix*
  name: SessionLockPrefix
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings_SessionLockPrefix_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionLockPrefix
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SessionLockPrefix
  nameWithType: DistributedLockSessionTrackerSettings.SessionLockPrefix
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionKeyPrefix(System.String)
  name: SetSessionKeyPrefix(String)
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings_SetSessionKeyPrefix_System_String_
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionKeyPrefix(System.String)
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionKeyPrefix(System.String)
  nameWithType: DistributedLockSessionTrackerSettings.SetSessionKeyPrefix(String)
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionKeyPrefix*
  name: SetSessionKeyPrefix
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings_SetSessionKeyPrefix_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionKeyPrefix
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionKeyPrefix
  nameWithType: DistributedLockSessionTrackerSettings.SetSessionKeyPrefix
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionLockPrefix(System.String)
  name: SetSessionLockPrefix(String)
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings_SetSessionLockPrefix_System_String_
  commentId: M:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionLockPrefix(System.String)
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionLockPrefix(System.String)
  nameWithType: DistributedLockSessionTrackerSettings.SetSessionLockPrefix(String)
- uid: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionLockPrefix*
  name: SetSessionLockPrefix
  href: api/SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.html#SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings_SetSessionLockPrefix_
  commentId: Overload:SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionLockPrefix
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings.SetSessionLockPrefix
  nameWithType: DistributedLockSessionTrackerSettings.SetSessionLockPrefix
- uid: SessionTracker.DistributedLock.SessionTrackerBuilderExtensions
  name: SessionTrackerBuilderExtensions
  href: api/SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.html
  commentId: T:SessionTracker.DistributedLock.SessionTrackerBuilderExtensions
  fullName: SessionTracker.DistributedLock.SessionTrackerBuilderExtensions
  nameWithType: SessionTrackerBuilderExtensions
- uid: SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.AddDistributedLock(SessionTracker.SessionTrackerBuilder,Action{SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings})
  name: AddDistributedLock(SessionTrackerBuilder, Action<DistributedLockSessionTrackerSettings>)
  href: api/SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.html#SessionTracker_DistributedLock_SessionTrackerBuilderExtensions_AddDistributedLock_SessionTracker_SessionTrackerBuilder_Action_SessionTracker_DistributedLock_DistributedLockSessionTrackerSettings__
  commentId: M:SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.AddDistributedLock(SessionTracker.SessionTrackerBuilder,Action{SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings})
  name.vb: AddDistributedLock(SessionTrackerBuilder, Action(Of DistributedLockSessionTrackerSettings))
  fullName: SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.AddDistributedLock(SessionTracker.SessionTrackerBuilder, Action<SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings>)
  fullName.vb: SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.AddDistributedLock(SessionTracker.SessionTrackerBuilder, Action(Of SessionTracker.DistributedLock.DistributedLockSessionTrackerSettings))
  nameWithType: SessionTrackerBuilderExtensions.AddDistributedLock(SessionTrackerBuilder, Action<DistributedLockSessionTrackerSettings>)
  nameWithType.vb: SessionTrackerBuilderExtensions.AddDistributedLock(SessionTrackerBuilder, Action(Of DistributedLockSessionTrackerSettings))
- uid: SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.AddDistributedLock*
  name: AddDistributedLock
  href: api/SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.html#SessionTracker_DistributedLock_SessionTrackerBuilderExtensions_AddDistributedLock_
  commentId: Overload:SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.AddDistributedLock
  isSpec: "True"
  fullName: SessionTracker.DistributedLock.SessionTrackerBuilderExtensions.AddDistributedLock
  nameWithType: SessionTrackerBuilderExtensions.AddDistributedLock
- uid: SessionTracker.InMemory
  name: SessionTracker.InMemory
  href: api/SessionTracker.InMemory.html
  commentId: N:SessionTracker.InMemory
  fullName: SessionTracker.InMemory
  nameWithType: SessionTracker.InMemory
- uid: SessionTracker.InMemory.Extensions
  name: SessionTracker.InMemory.Extensions
  href: api/SessionTracker.InMemory.Extensions.html
  commentId: N:SessionTracker.InMemory.Extensions
  fullName: SessionTracker.InMemory.Extensions
  nameWithType: SessionTracker.InMemory.Extensions
- uid: SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions
  name: SessionEntryOptionsExtensions
  href: api/SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.html
  commentId: T:SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions
  fullName: SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions
  nameWithType: SessionEntryOptionsExtensions
- uid: SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.ToMemoryCacheEntryOptions(SessionTracker.SessionEntryOptions)
  name: ToMemoryCacheEntryOptions(SessionEntryOptions)
  href: api/SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.html#SessionTracker_InMemory_Extensions_SessionEntryOptionsExtensions_ToMemoryCacheEntryOptions_SessionTracker_SessionEntryOptions_
  commentId: M:SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.ToMemoryCacheEntryOptions(SessionTracker.SessionEntryOptions)
  fullName: SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.ToMemoryCacheEntryOptions(SessionTracker.SessionEntryOptions)
  nameWithType: SessionEntryOptionsExtensions.ToMemoryCacheEntryOptions(SessionEntryOptions)
- uid: SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.ToMemoryCacheEntryOptions*
  name: ToMemoryCacheEntryOptions
  href: api/SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.html#SessionTracker_InMemory_Extensions_SessionEntryOptionsExtensions_ToMemoryCacheEntryOptions_
  commentId: Overload:SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.ToMemoryCacheEntryOptions
  isSpec: "True"
  fullName: SessionTracker.InMemory.Extensions.SessionEntryOptionsExtensions.ToMemoryCacheEntryOptions
  nameWithType: SessionEntryOptionsExtensions.ToMemoryCacheEntryOptions
- uid: SessionTracker.InMemory.InMemorySessionDataProvider
  name: InMemorySessionDataProvider
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html
  commentId: T:SessionTracker.InMemory.InMemorySessionDataProvider
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider
  nameWithType: InMemorySessionDataProvider
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.#ctor(SessionTracker.InMemory.MemoryCacheQueue,SessionTracker.InMemory.InMemorySessionTrackerKeyCreator)
  name: InMemorySessionDataProvider(MemoryCacheQueue, InMemorySessionTrackerKeyCreator)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider__ctor_SessionTracker_InMemory_MemoryCacheQueue_SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.#ctor(SessionTracker.InMemory.MemoryCacheQueue,SessionTracker.InMemory.InMemorySessionTrackerKeyCreator)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.InMemorySessionDataProvider(SessionTracker.InMemory.MemoryCacheQueue, SessionTracker.InMemory.InMemorySessionTrackerKeyCreator)
  nameWithType: InMemorySessionDataProvider.InMemorySessionDataProvider(MemoryCacheQueue, InMemorySessionTrackerKeyCreator)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.#ctor*
  name: InMemorySessionDataProvider
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider__ctor_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.#ctor
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.InMemorySessionDataProvider
  nameWithType: InMemorySessionDataProvider.InMemorySessionDataProvider
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.AddAsync*
  name: AddAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_AddAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.AddAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.AddAsync
  nameWithType: InMemorySessionDataProvider.AddAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.AddAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name: AddAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_AddAsync__1___0_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.AddAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: AddAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.AddAsync<TSession>(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.AddAsync(Of TSession)(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: InMemorySessionDataProvider.AddAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.AddAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAndGetAsync*
  name: EvictAndGetAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_EvictAndGetAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.EvictAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAndGetAsync
  nameWithType: InMemorySessionDataProvider.EvictAndGetAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: EvictAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_EvictAndGetAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.EvictAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: EvictAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAndGetAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAndGetAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: InMemorySessionDataProvider.EvictAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.EvictAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAsync*
  name: EvictAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_EvictAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.EvictAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAsync
  nameWithType: InMemorySessionDataProvider.EvictAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: EvictAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_EvictAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.EvictAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: EvictAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.EvictAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: InMemorySessionDataProvider.EvictAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.EvictAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.GetAsync*
  name: GetAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_GetAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.GetAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.GetAsync
  nameWithType: InMemorySessionDataProvider.GetAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.GetAsync``1(System.String,CancellationToken)
  name: GetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_GetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.GetAsync``1(System.String,CancellationToken)
  name.vb: GetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.GetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.GetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: InMemorySessionDataProvider.GetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.GetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.GetEvictedAsync*
  name: GetEvictedAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_GetEvictedAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.GetEvictedAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.GetEvictedAsync
  nameWithType: InMemorySessionDataProvider.GetEvictedAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.GetEvictedAsync``1(System.String,CancellationToken)
  name: GetEvictedAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_GetEvictedAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.GetEvictedAsync``1(System.String,CancellationToken)
  name.vb: GetEvictedAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.GetEvictedAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.GetEvictedAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: InMemorySessionDataProvider.GetEvictedAsync<TSession>(String, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.GetEvictedAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.RefreshAsync*
  name: RefreshAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_RefreshAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.RefreshAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.RefreshAsync
  nameWithType: InMemorySessionDataProvider.RefreshAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.RefreshAsync``1(System.String,CancellationToken)
  name: RefreshAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_RefreshAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.RefreshAsync``1(System.String,CancellationToken)
  name.vb: RefreshAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.RefreshAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.RefreshAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: InMemorySessionDataProvider.RefreshAsync<TSession>(String, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.RefreshAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAndGetAsync*
  name: RestoreAndGetAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_RestoreAndGetAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAndGetAsync
  nameWithType: InMemorySessionDataProvider.RestoreAndGetAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: RestoreAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_RestoreAndGetAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: RestoreAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAndGetAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAndGetAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: InMemorySessionDataProvider.RestoreAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.RestoreAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAsync*
  name: RestoreAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_RestoreAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAsync
  nameWithType: InMemorySessionDataProvider.RestoreAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: RestoreAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_RestoreAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: RestoreAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.RestoreAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: InMemorySessionDataProvider.RestoreAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.RestoreAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAndGetAsync*
  name: UpdateAndGetAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_UpdateAndGetAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAndGetAsync
  nameWithType: InMemorySessionDataProvider.UpdateAndGetAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAndGetAsync``1(``0,CancellationToken)
  name: UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_UpdateAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAndGetAsync``1(``0,CancellationToken)
  name.vb: UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: InMemorySessionDataProvider.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAsync*
  name: UpdateAsync
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_UpdateAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAsync
  nameWithType: InMemorySessionDataProvider.UpdateAsync
- uid: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAsync``1(``0,CancellationToken)
  name: UpdateAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionDataProvider.html#SessionTracker_InMemory_InMemorySessionDataProvider_UpdateAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAsync``1(``0,CancellationToken)
  name.vb: UpdateAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionDataProvider.UpdateAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: InMemorySessionDataProvider.UpdateAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: InMemorySessionDataProvider.UpdateAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionLock
  name: InMemorySessionLock
  href: api/SessionTracker.InMemory.InMemorySessionLock.html
  commentId: T:SessionTracker.InMemory.InMemorySessionLock
  fullName: SessionTracker.InMemory.InMemorySessionLock
  nameWithType: InMemorySessionLock
- uid: SessionTracker.InMemory.InMemorySessionLock.Dispose
  name: Dispose()
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Dispose
  commentId: M:SessionTracker.InMemory.InMemorySessionLock.Dispose
  fullName: SessionTracker.InMemory.InMemorySessionLock.Dispose()
  nameWithType: InMemorySessionLock.Dispose()
- uid: SessionTracker.InMemory.InMemorySessionLock.Dispose*
  name: Dispose
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Dispose_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.Dispose
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.Dispose
  nameWithType: InMemorySessionLock.Dispose
- uid: SessionTracker.InMemory.InMemorySessionLock.DisposeAsync
  name: DisposeAsync()
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_DisposeAsync
  commentId: M:SessionTracker.InMemory.InMemorySessionLock.DisposeAsync
  fullName: SessionTracker.InMemory.InMemorySessionLock.DisposeAsync()
  nameWithType: InMemorySessionLock.DisposeAsync()
- uid: SessionTracker.InMemory.InMemorySessionLock.DisposeAsync*
  name: DisposeAsync
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_DisposeAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.DisposeAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.DisposeAsync
  nameWithType: InMemorySessionLock.DisposeAsync
- uid: SessionTracker.InMemory.InMemorySessionLock.Equals(SessionTracker.InMemory.InMemorySessionLock)
  name: Equals(InMemorySessionLock)
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Equals_SessionTracker_InMemory_InMemorySessionLock_
  commentId: M:SessionTracker.InMemory.InMemorySessionLock.Equals(SessionTracker.InMemory.InMemorySessionLock)
  fullName: SessionTracker.InMemory.InMemorySessionLock.Equals(SessionTracker.InMemory.InMemorySessionLock)
  nameWithType: InMemorySessionLock.Equals(InMemorySessionLock)
- uid: SessionTracker.InMemory.InMemorySessionLock.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Equals_System_Nullable_System_Object__
  commentId: M:SessionTracker.InMemory.InMemorySessionLock.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: SessionTracker.InMemory.InMemorySessionLock.Equals(System.Nullable<System.Object>)
  fullName.vb: SessionTracker.InMemory.InMemorySessionLock.Equals(System.Nullable(Of System.Object))
  nameWithType: InMemorySessionLock.Equals(Nullable<Object>)
  nameWithType.vb: InMemorySessionLock.Equals(Nullable(Of Object))
- uid: SessionTracker.InMemory.InMemorySessionLock.Equals*
  name: Equals
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Equals_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.Equals
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.Equals
  nameWithType: InMemorySessionLock.Equals
- uid: SessionTracker.InMemory.InMemorySessionLock.ExpiresAt
  name: ExpiresAt
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_ExpiresAt
  commentId: P:SessionTracker.InMemory.InMemorySessionLock.ExpiresAt
  fullName: SessionTracker.InMemory.InMemorySessionLock.ExpiresAt
  nameWithType: InMemorySessionLock.ExpiresAt
- uid: SessionTracker.InMemory.InMemorySessionLock.ExpiresAt*
  name: ExpiresAt
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_ExpiresAt_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.ExpiresAt
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.ExpiresAt
  nameWithType: InMemorySessionLock.ExpiresAt
- uid: SessionTracker.InMemory.InMemorySessionLock.GetHashCode
  name: GetHashCode()
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_GetHashCode
  commentId: M:SessionTracker.InMemory.InMemorySessionLock.GetHashCode
  fullName: SessionTracker.InMemory.InMemorySessionLock.GetHashCode()
  nameWithType: InMemorySessionLock.GetHashCode()
- uid: SessionTracker.InMemory.InMemorySessionLock.GetHashCode*
  name: GetHashCode
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_GetHashCode_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.GetHashCode
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.GetHashCode
  nameWithType: InMemorySessionLock.GetHashCode
- uid: SessionTracker.InMemory.InMemorySessionLock.Id
  name: Id
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Id
  commentId: P:SessionTracker.InMemory.InMemorySessionLock.Id
  fullName: SessionTracker.InMemory.InMemorySessionLock.Id
  nameWithType: InMemorySessionLock.Id
- uid: SessionTracker.InMemory.InMemorySessionLock.Id*
  name: Id
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Id_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.Id
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.Id
  nameWithType: InMemorySessionLock.Id
- uid: SessionTracker.InMemory.InMemorySessionLock.IsAcquired
  name: IsAcquired
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_IsAcquired
  commentId: P:SessionTracker.InMemory.InMemorySessionLock.IsAcquired
  fullName: SessionTracker.InMemory.InMemorySessionLock.IsAcquired
  nameWithType: InMemorySessionLock.IsAcquired
- uid: SessionTracker.InMemory.InMemorySessionLock.IsAcquired*
  name: IsAcquired
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_IsAcquired_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.IsAcquired
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.IsAcquired
  nameWithType: InMemorySessionLock.IsAcquired
- uid: SessionTracker.InMemory.InMemorySessionLock.Resource
  name: Resource
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Resource
  commentId: P:SessionTracker.InMemory.InMemorySessionLock.Resource
  fullName: SessionTracker.InMemory.InMemorySessionLock.Resource
  nameWithType: InMemorySessionLock.Resource
- uid: SessionTracker.InMemory.InMemorySessionLock.Resource*
  name: Resource
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Resource_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.Resource
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.Resource
  nameWithType: InMemorySessionLock.Resource
- uid: SessionTracker.InMemory.InMemorySessionLock.Status
  name: Status
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Status
  commentId: P:SessionTracker.InMemory.InMemorySessionLock.Status
  fullName: SessionTracker.InMemory.InMemorySessionLock.Status
  nameWithType: InMemorySessionLock.Status
- uid: SessionTracker.InMemory.InMemorySessionLock.Status*
  name: Status
  href: api/SessionTracker.InMemory.InMemorySessionLock.html#SessionTracker_InMemory_InMemorySessionLock_Status_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLock.Status
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLock.Status
  nameWithType: InMemorySessionLock.Status
- uid: SessionTracker.InMemory.InMemorySessionLockProvider
  name: InMemorySessionLockProvider
  href: api/SessionTracker.InMemory.InMemorySessionLockProvider.html
  commentId: T:SessionTracker.InMemory.InMemorySessionLockProvider
  fullName: SessionTracker.InMemory.InMemorySessionLockProvider
  nameWithType: InMemorySessionLockProvider
- uid: SessionTracker.InMemory.InMemorySessionLockProvider.#ctor(SessionTracker.InMemory.MemoryCacheQueue,SessionTracker.InMemory.InMemorySessionTrackerKeyCreator,ILogger{SessionTracker.InMemory.InMemorySessionLockProvider},TimeProvider)
  name: InMemorySessionLockProvider(MemoryCacheQueue, InMemorySessionTrackerKeyCreator, ILogger<InMemorySessionLockProvider>, TimeProvider)
  href: api/SessionTracker.InMemory.InMemorySessionLockProvider.html#SessionTracker_InMemory_InMemorySessionLockProvider__ctor_SessionTracker_InMemory_MemoryCacheQueue_SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_ILogger_SessionTracker_InMemory_InMemorySessionLockProvider__TimeProvider_
  commentId: M:SessionTracker.InMemory.InMemorySessionLockProvider.#ctor(SessionTracker.InMemory.MemoryCacheQueue,SessionTracker.InMemory.InMemorySessionTrackerKeyCreator,ILogger{SessionTracker.InMemory.InMemorySessionLockProvider},TimeProvider)
  name.vb: InMemorySessionLockProvider(MemoryCacheQueue, InMemorySessionTrackerKeyCreator, ILogger(Of InMemorySessionLockProvider), TimeProvider)
  fullName: SessionTracker.InMemory.InMemorySessionLockProvider.InMemorySessionLockProvider(SessionTracker.InMemory.MemoryCacheQueue, SessionTracker.InMemory.InMemorySessionTrackerKeyCreator, ILogger<SessionTracker.InMemory.InMemorySessionLockProvider>, TimeProvider)
  fullName.vb: SessionTracker.InMemory.InMemorySessionLockProvider.InMemorySessionLockProvider(SessionTracker.InMemory.MemoryCacheQueue, SessionTracker.InMemory.InMemorySessionTrackerKeyCreator, ILogger(Of SessionTracker.InMemory.InMemorySessionLockProvider), TimeProvider)
  nameWithType: InMemorySessionLockProvider.InMemorySessionLockProvider(MemoryCacheQueue, InMemorySessionTrackerKeyCreator, ILogger<InMemorySessionLockProvider>, TimeProvider)
  nameWithType.vb: InMemorySessionLockProvider.InMemorySessionLockProvider(MemoryCacheQueue, InMemorySessionTrackerKeyCreator, ILogger(Of InMemorySessionLockProvider), TimeProvider)
- uid: SessionTracker.InMemory.InMemorySessionLockProvider.#ctor*
  name: InMemorySessionLockProvider
  href: api/SessionTracker.InMemory.InMemorySessionLockProvider.html#SessionTracker_InMemory_InMemorySessionLockProvider__ctor_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLockProvider.#ctor
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLockProvider.InMemorySessionLockProvider
  nameWithType: InMemorySessionLockProvider.InMemorySessionLockProvider
- uid: SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync*
  name: AcquireAsync
  href: api/SessionTracker.InMemory.InMemorySessionLockProvider.html#SessionTracker_InMemory_InMemorySessionLockProvider_AcquireAsync_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync
  nameWithType: InMemorySessionLockProvider.AcquireAsync
- uid: SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync``1(System.String,TimeSpan,CancellationToken)
  name: AcquireAsync<TSession>(String, TimeSpan, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionLockProvider.html#SessionTracker_InMemory_InMemorySessionLockProvider_AcquireAsync__1_System_String_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync``1(System.String,TimeSpan,CancellationToken)
  name.vb: AcquireAsync(Of TSession)(String, TimeSpan, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync<TSession>(System.String, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync(Of TSession)(System.String, TimeSpan, CancellationToken)
  nameWithType: InMemorySessionLockProvider.AcquireAsync<TSession>(String, TimeSpan, CancellationToken)
  nameWithType.vb: InMemorySessionLockProvider.AcquireAsync(Of TSession)(String, TimeSpan, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: AcquireAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.InMemory.InMemorySessionLockProvider.html#SessionTracker_InMemory_InMemorySessionLockProvider_AcquireAsync__1_System_String_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: AcquireAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync<TSession>(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.InMemory.InMemorySessionLockProvider.AcquireAsync(Of TSession)(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: InMemorySessionLockProvider.AcquireAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: InMemorySessionLockProvider.AcquireAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.InMemory.InMemorySessionTrackerBuilder
  name: InMemorySessionTrackerBuilder
  href: api/SessionTracker.InMemory.InMemorySessionTrackerBuilder.html
  commentId: T:SessionTracker.InMemory.InMemorySessionTrackerBuilder
  fullName: SessionTracker.InMemory.InMemorySessionTrackerBuilder
  nameWithType: InMemorySessionTrackerBuilder
- uid: SessionTracker.InMemory.InMemorySessionTrackerBuilder.#ctor(SessionTracker.SessionTrackerBuilder)
  name: InMemorySessionTrackerBuilder(SessionTrackerBuilder)
  href: api/SessionTracker.InMemory.InMemorySessionTrackerBuilder.html#SessionTracker_InMemory_InMemorySessionTrackerBuilder__ctor_SessionTracker_SessionTrackerBuilder_
  commentId: M:SessionTracker.InMemory.InMemorySessionTrackerBuilder.#ctor(SessionTracker.SessionTrackerBuilder)
  fullName: SessionTracker.InMemory.InMemorySessionTrackerBuilder.InMemorySessionTrackerBuilder(SessionTracker.SessionTrackerBuilder)
  nameWithType: InMemorySessionTrackerBuilder.InMemorySessionTrackerBuilder(SessionTrackerBuilder)
- uid: SessionTracker.InMemory.InMemorySessionTrackerBuilder.#ctor*
  name: InMemorySessionTrackerBuilder
  href: api/SessionTracker.InMemory.InMemorySessionTrackerBuilder.html#SessionTracker_InMemory_InMemorySessionTrackerBuilder__ctor_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerBuilder.#ctor
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerBuilder.InMemorySessionTrackerBuilder
  nameWithType: InMemorySessionTrackerBuilder.InMemorySessionTrackerBuilder
- uid: SessionTracker.InMemory.InMemorySessionTrackerBuilder.Complete
  name: Complete()
  href: api/SessionTracker.InMemory.InMemorySessionTrackerBuilder.html#SessionTracker_InMemory_InMemorySessionTrackerBuilder_Complete
  commentId: M:SessionTracker.InMemory.InMemorySessionTrackerBuilder.Complete
  fullName: SessionTracker.InMemory.InMemorySessionTrackerBuilder.Complete()
  nameWithType: InMemorySessionTrackerBuilder.Complete()
- uid: SessionTracker.InMemory.InMemorySessionTrackerBuilder.Complete*
  name: Complete
  href: api/SessionTracker.InMemory.InMemorySessionTrackerBuilder.html#SessionTracker_InMemory_InMemorySessionTrackerBuilder_Complete_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerBuilder.Complete
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerBuilder.Complete
  nameWithType: InMemorySessionTrackerBuilder.Complete
- uid: SessionTracker.InMemory.InMemorySessionTrackerBuilder.SessionTrackerBuilder
  name: SessionTrackerBuilder
  href: api/SessionTracker.InMemory.InMemorySessionTrackerBuilder.html#SessionTracker_InMemory_InMemorySessionTrackerBuilder_SessionTrackerBuilder
  commentId: P:SessionTracker.InMemory.InMemorySessionTrackerBuilder.SessionTrackerBuilder
  fullName: SessionTracker.InMemory.InMemorySessionTrackerBuilder.SessionTrackerBuilder
  nameWithType: InMemorySessionTrackerBuilder.SessionTrackerBuilder
- uid: SessionTracker.InMemory.InMemorySessionTrackerBuilder.SessionTrackerBuilder*
  name: SessionTrackerBuilder
  href: api/SessionTracker.InMemory.InMemorySessionTrackerBuilder.html#SessionTracker_InMemory_InMemorySessionTrackerBuilder_SessionTrackerBuilder_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerBuilder.SessionTrackerBuilder
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerBuilder.SessionTrackerBuilder
  nameWithType: InMemorySessionTrackerBuilder.SessionTrackerBuilder
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator
  name: InMemorySessionTrackerKeyCreator
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html
  commentId: T:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator
  nameWithType: InMemorySessionTrackerKeyCreator
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.#ctor(IOptions{SessionTracker.InMemory.InMemorySessionTrackerSettings})
  name: InMemorySessionTrackerKeyCreator(IOptions<InMemorySessionTrackerSettings>)
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator__ctor_IOptions_SessionTracker_InMemory_InMemorySessionTrackerSettings__
  commentId: M:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.#ctor(IOptions{SessionTracker.InMemory.InMemorySessionTrackerSettings})
  name.vb: InMemorySessionTrackerKeyCreator(IOptions(Of InMemorySessionTrackerSettings))
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.InMemorySessionTrackerKeyCreator(IOptions<SessionTracker.InMemory.InMemorySessionTrackerSettings>)
  fullName.vb: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.InMemorySessionTrackerKeyCreator(IOptions(Of SessionTracker.InMemory.InMemorySessionTrackerSettings))
  nameWithType: InMemorySessionTrackerKeyCreator.InMemorySessionTrackerKeyCreator(IOptions<InMemorySessionTrackerSettings>)
  nameWithType.vb: InMemorySessionTrackerKeyCreator.InMemorySessionTrackerKeyCreator(IOptions(Of InMemorySessionTrackerSettings))
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.#ctor*
  name: InMemorySessionTrackerKeyCreator
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator__ctor_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.#ctor
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.InMemorySessionTrackerKeyCreator
  nameWithType: InMemorySessionTrackerKeyCreator.InMemorySessionTrackerKeyCreator
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateEvictedKey*
  name: CreateEvictedKey
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_CreateEvictedKey_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateEvictedKey
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateEvictedKey
  nameWithType: InMemorySessionTrackerKeyCreator.CreateEvictedKey
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateEvictedKey``1(System.String)
  name: CreateEvictedKey<TSession>(String)
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_CreateEvictedKey__1_System_String_
  commentId: M:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateEvictedKey``1(System.String)
  name.vb: CreateEvictedKey(Of TSession)(String)
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateEvictedKey<TSession>(System.String)
  fullName.vb: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateEvictedKey(Of TSession)(System.String)
  nameWithType: InMemorySessionTrackerKeyCreator.CreateEvictedKey<TSession>(String)
  nameWithType.vb: InMemorySessionTrackerKeyCreator.CreateEvictedKey(Of TSession)(String)
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKey*
  name: CreateKey
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_CreateKey_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKey
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKey
  nameWithType: InMemorySessionTrackerKeyCreator.CreateKey
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKey``1(System.String)
  name: CreateKey<TSession>(String)
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_CreateKey__1_System_String_
  commentId: M:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKey``1(System.String)
  name.vb: CreateKey(Of TSession)(String)
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKey<TSession>(System.String)
  fullName.vb: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKey(Of TSession)(System.String)
  nameWithType: InMemorySessionTrackerKeyCreator.CreateKey<TSession>(String)
  nameWithType.vb: InMemorySessionTrackerKeyCreator.CreateKey(Of TSession)(String)
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKeys*
  name: CreateKeys
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_CreateKeys_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKeys
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKeys
  nameWithType: InMemorySessionTrackerKeyCreator.CreateKeys
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKeys``1(System.String)
  name: CreateKeys<TSession>(String)
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_CreateKeys__1_System_String_
  commentId: M:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKeys``1(System.String)
  name.vb: CreateKeys(Of TSession)(String)
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKeys<TSession>(System.String)
  fullName.vb: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateKeys(Of TSession)(System.String)
  nameWithType: InMemorySessionTrackerKeyCreator.CreateKeys<TSession>(String)
  nameWithType.vb: InMemorySessionTrackerKeyCreator.CreateKeys(Of TSession)(String)
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateLockKey*
  name: CreateLockKey
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_CreateLockKey_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateLockKey
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateLockKey
  nameWithType: InMemorySessionTrackerKeyCreator.CreateLockKey
- uid: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateLockKey``1(System.String)
  name: CreateLockKey<TSession>(String)
  href: api/SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.html#SessionTracker_InMemory_InMemorySessionTrackerKeyCreator_CreateLockKey__1_System_String_
  commentId: M:SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateLockKey``1(System.String)
  name.vb: CreateLockKey(Of TSession)(String)
  fullName: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateLockKey<TSession>(System.String)
  fullName.vb: SessionTracker.InMemory.InMemorySessionTrackerKeyCreator.CreateLockKey(Of TSession)(System.String)
  nameWithType: InMemorySessionTrackerKeyCreator.CreateLockKey<TSession>(String)
  nameWithType.vb: InMemorySessionTrackerKeyCreator.CreateLockKey(Of TSession)(String)
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings
  name: InMemorySessionTrackerSettings
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html
  commentId: T:SessionTracker.InMemory.InMemorySessionTrackerSettings
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings
  nameWithType: InMemorySessionTrackerSettings
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings.MemoryCacheOptions
  name: MemoryCacheOptions
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html#SessionTracker_InMemory_InMemorySessionTrackerSettings_MemoryCacheOptions
  commentId: P:SessionTracker.InMemory.InMemorySessionTrackerSettings.MemoryCacheOptions
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings.MemoryCacheOptions
  nameWithType: InMemorySessionTrackerSettings.MemoryCacheOptions
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings.MemoryCacheOptions*
  name: MemoryCacheOptions
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html#SessionTracker_InMemory_InMemorySessionTrackerSettings_MemoryCacheOptions_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerSettings.MemoryCacheOptions
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings.MemoryCacheOptions
  nameWithType: InMemorySessionTrackerSettings.MemoryCacheOptions
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionKeyPrefix
  name: SessionKeyPrefix
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html#SessionTracker_InMemory_InMemorySessionTrackerSettings_SessionKeyPrefix
  commentId: P:SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionKeyPrefix
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionKeyPrefix
  nameWithType: InMemorySessionTrackerSettings.SessionKeyPrefix
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionKeyPrefix*
  name: SessionKeyPrefix
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html#SessionTracker_InMemory_InMemorySessionTrackerSettings_SessionKeyPrefix_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionKeyPrefix
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionKeyPrefix
  nameWithType: InMemorySessionTrackerSettings.SessionKeyPrefix
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionLockPrefix
  name: SessionLockPrefix
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html#SessionTracker_InMemory_InMemorySessionTrackerSettings_SessionLockPrefix
  commentId: P:SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionLockPrefix
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionLockPrefix
  nameWithType: InMemorySessionTrackerSettings.SessionLockPrefix
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionLockPrefix*
  name: SessionLockPrefix
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html#SessionTracker_InMemory_InMemorySessionTrackerSettings_SessionLockPrefix_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionLockPrefix
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings.SessionLockPrefix
  nameWithType: InMemorySessionTrackerSettings.SessionLockPrefix
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings.ShouldRegisterMemoryCache
  name: ShouldRegisterMemoryCache
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html#SessionTracker_InMemory_InMemorySessionTrackerSettings_ShouldRegisterMemoryCache
  commentId: P:SessionTracker.InMemory.InMemorySessionTrackerSettings.ShouldRegisterMemoryCache
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings.ShouldRegisterMemoryCache
  nameWithType: InMemorySessionTrackerSettings.ShouldRegisterMemoryCache
- uid: SessionTracker.InMemory.InMemorySessionTrackerSettings.ShouldRegisterMemoryCache*
  name: ShouldRegisterMemoryCache
  href: api/SessionTracker.InMemory.InMemorySessionTrackerSettings.html#SessionTracker_InMemory_InMemorySessionTrackerSettings_ShouldRegisterMemoryCache_
  commentId: Overload:SessionTracker.InMemory.InMemorySessionTrackerSettings.ShouldRegisterMemoryCache
  isSpec: "True"
  fullName: SessionTracker.InMemory.InMemorySessionTrackerSettings.ShouldRegisterMemoryCache
  nameWithType: InMemorySessionTrackerSettings.ShouldRegisterMemoryCache
- uid: SessionTracker.InMemory.MemoryCacheQueue
  name: MemoryCacheQueue
  href: api/SessionTracker.InMemory.MemoryCacheQueue.html
  commentId: T:SessionTracker.InMemory.MemoryCacheQueue
  fullName: SessionTracker.InMemory.MemoryCacheQueue
  nameWithType: MemoryCacheQueue
- uid: SessionTracker.InMemory.MemoryCacheQueue.#ctor(IMemoryCache)
  name: MemoryCacheQueue(IMemoryCache)
  href: api/SessionTracker.InMemory.MemoryCacheQueue.html#SessionTracker_InMemory_MemoryCacheQueue__ctor_IMemoryCache_
  commentId: M:SessionTracker.InMemory.MemoryCacheQueue.#ctor(IMemoryCache)
  fullName: SessionTracker.InMemory.MemoryCacheQueue.MemoryCacheQueue(IMemoryCache)
  nameWithType: MemoryCacheQueue.MemoryCacheQueue(IMemoryCache)
- uid: SessionTracker.InMemory.MemoryCacheQueue.#ctor*
  name: MemoryCacheQueue
  href: api/SessionTracker.InMemory.MemoryCacheQueue.html#SessionTracker_InMemory_MemoryCacheQueue__ctor_
  commentId: Overload:SessionTracker.InMemory.MemoryCacheQueue.#ctor
  isSpec: "True"
  fullName: SessionTracker.InMemory.MemoryCacheQueue.MemoryCacheQueue
  nameWithType: MemoryCacheQueue.MemoryCacheQueue
- uid: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Action{IMemoryCache})
  name: EnqueueAsync(Action<IMemoryCache>)
  href: api/SessionTracker.InMemory.MemoryCacheQueue.html#SessionTracker_InMemory_MemoryCacheQueue_EnqueueAsync_Action_IMemoryCache__
  commentId: M:SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Action{IMemoryCache})
  name.vb: EnqueueAsync(Action(Of IMemoryCache))
  fullName: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Action<IMemoryCache>)
  fullName.vb: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Action(Of IMemoryCache))
  nameWithType: MemoryCacheQueue.EnqueueAsync(Action<IMemoryCache>)
  nameWithType.vb: MemoryCacheQueue.EnqueueAsync(Action(Of IMemoryCache))
- uid: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Func{IMemoryCache,Task})
  name: EnqueueAsync(Func<IMemoryCache, Task>)
  href: api/SessionTracker.InMemory.MemoryCacheQueue.html#SessionTracker_InMemory_MemoryCacheQueue_EnqueueAsync_Func_IMemoryCache_Task__
  commentId: M:SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Func{IMemoryCache,Task})
  name.vb: EnqueueAsync(Func(Of IMemoryCache, Task))
  fullName: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Func<IMemoryCache, Task>)
  fullName.vb: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Func(Of IMemoryCache, Task))
  nameWithType: MemoryCacheQueue.EnqueueAsync(Func<IMemoryCache, Task>)
  nameWithType.vb: MemoryCacheQueue.EnqueueAsync(Func(Of IMemoryCache, Task))
- uid: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync*
  name: EnqueueAsync
  href: api/SessionTracker.InMemory.MemoryCacheQueue.html#SessionTracker_InMemory_MemoryCacheQueue_EnqueueAsync_
  commentId: Overload:SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync
  isSpec: "True"
  fullName: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync
  nameWithType: MemoryCacheQueue.EnqueueAsync
- uid: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync``1(Func{IMemoryCache,``0})
  name: EnqueueAsync<T>(Func<IMemoryCache, T>)
  href: api/SessionTracker.InMemory.MemoryCacheQueue.html#SessionTracker_InMemory_MemoryCacheQueue_EnqueueAsync__1_Func_IMemoryCache___0__
  commentId: M:SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync``1(Func{IMemoryCache,``0})
  name.vb: EnqueueAsync(Of T)(Func(Of IMemoryCache, T))
  fullName: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync<T>(Func<IMemoryCache, T>)
  fullName.vb: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Of T)(Func(Of IMemoryCache, T))
  nameWithType: MemoryCacheQueue.EnqueueAsync<T>(Func<IMemoryCache, T>)
  nameWithType.vb: MemoryCacheQueue.EnqueueAsync(Of T)(Func(Of IMemoryCache, T))
- uid: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync``1(Func{IMemoryCache,Task{``0}})
  name: EnqueueAsync<T>(Func<IMemoryCache, Task<T>>)
  href: api/SessionTracker.InMemory.MemoryCacheQueue.html#SessionTracker_InMemory_MemoryCacheQueue_EnqueueAsync__1_Func_IMemoryCache_Task___0___
  commentId: M:SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync``1(Func{IMemoryCache,Task{``0}})
  name.vb: EnqueueAsync(Of T)(Func(Of IMemoryCache, Task(Of T)))
  fullName: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync<T>(Func<IMemoryCache, Task<T>>)
  fullName.vb: SessionTracker.InMemory.MemoryCacheQueue.EnqueueAsync(Of T)(Func(Of IMemoryCache, Task(Of T)))
  nameWithType: MemoryCacheQueue.EnqueueAsync<T>(Func<IMemoryCache, Task<T>>)
  nameWithType.vb: MemoryCacheQueue.EnqueueAsync(Of T)(Func(Of IMemoryCache, Task(Of T)))
- uid: SessionTracker.InMemory.SessionTrackerBuilderExtensions
  name: SessionTrackerBuilderExtensions
  href: api/SessionTracker.InMemory.SessionTrackerBuilderExtensions.html
  commentId: T:SessionTracker.InMemory.SessionTrackerBuilderExtensions
  fullName: SessionTracker.InMemory.SessionTrackerBuilderExtensions
  nameWithType: SessionTrackerBuilderExtensions
- uid: SessionTracker.InMemory.SessionTrackerBuilderExtensions.AddInMemoryProviders(SessionTracker.SessionTrackerBuilder,Action{SessionTracker.InMemory.InMemorySessionTrackerSettings})
  name: AddInMemoryProviders(SessionTrackerBuilder, Action<InMemorySessionTrackerSettings>)
  href: api/SessionTracker.InMemory.SessionTrackerBuilderExtensions.html#SessionTracker_InMemory_SessionTrackerBuilderExtensions_AddInMemoryProviders_SessionTracker_SessionTrackerBuilder_Action_SessionTracker_InMemory_InMemorySessionTrackerSettings__
  commentId: M:SessionTracker.InMemory.SessionTrackerBuilderExtensions.AddInMemoryProviders(SessionTracker.SessionTrackerBuilder,Action{SessionTracker.InMemory.InMemorySessionTrackerSettings})
  name.vb: AddInMemoryProviders(SessionTrackerBuilder, Action(Of InMemorySessionTrackerSettings))
  fullName: SessionTracker.InMemory.SessionTrackerBuilderExtensions.AddInMemoryProviders(SessionTracker.SessionTrackerBuilder, Action<SessionTracker.InMemory.InMemorySessionTrackerSettings>)
  fullName.vb: SessionTracker.InMemory.SessionTrackerBuilderExtensions.AddInMemoryProviders(SessionTracker.SessionTrackerBuilder, Action(Of SessionTracker.InMemory.InMemorySessionTrackerSettings))
  nameWithType: SessionTrackerBuilderExtensions.AddInMemoryProviders(SessionTrackerBuilder, Action<InMemorySessionTrackerSettings>)
  nameWithType.vb: SessionTrackerBuilderExtensions.AddInMemoryProviders(SessionTrackerBuilder, Action(Of InMemorySessionTrackerSettings))
- uid: SessionTracker.InMemory.SessionTrackerBuilderExtensions.AddInMemoryProviders*
  name: AddInMemoryProviders
  href: api/SessionTracker.InMemory.SessionTrackerBuilderExtensions.html#SessionTracker_InMemory_SessionTrackerBuilderExtensions_AddInMemoryProviders_
  commentId: Overload:SessionTracker.InMemory.SessionTrackerBuilderExtensions.AddInMemoryProviders
  isSpec: "True"
  fullName: SessionTracker.InMemory.SessionTrackerBuilderExtensions.AddInMemoryProviders
  nameWithType: SessionTrackerBuilderExtensions.AddInMemoryProviders
- uid: SessionTracker.ISessionTracker
  name: ISessionTracker
  href: api/SessionTracker.ISessionTracker.html
  commentId: T:SessionTracker.ISessionTracker
  fullName: SessionTracker.ISessionTracker
  nameWithType: ISessionTracker
- uid: SessionTracker.ISessionTracker.FinishAndGetAsync*
  name: FinishAndGetAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_FinishAndGetAsync_
  commentId: Overload:SessionTracker.ISessionTracker.FinishAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.FinishAndGetAsync
  nameWithType: ISessionTracker.FinishAndGetAsync
- uid: SessionTracker.ISessionTracker.FinishAndGetAsync``1(``0,CancellationToken)
  name: FinishAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_FinishAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.FinishAndGetAsync``1(``0,CancellationToken)
  name.vb: FinishAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.ISessionTracker.FinishAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.FinishAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionTracker.FinishAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionTracker.FinishAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.ISessionTracker.FinishAndGetAsync``1(System.String,CancellationToken)
  name: FinishAndGetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_FinishAndGetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.FinishAndGetAsync``1(System.String,CancellationToken)
  name.vb: FinishAndGetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.ISessionTracker.FinishAndGetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.FinishAndGetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionTracker.FinishAndGetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionTracker.FinishAndGetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.ISessionTracker.FinishAsync*
  name: FinishAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_FinishAsync_
  commentId: Overload:SessionTracker.ISessionTracker.FinishAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.FinishAsync
  nameWithType: ISessionTracker.FinishAsync
- uid: SessionTracker.ISessionTracker.FinishAsync``1(``0,CancellationToken)
  name: FinishAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_FinishAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.FinishAsync``1(``0,CancellationToken)
  name.vb: FinishAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.ISessionTracker.FinishAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.FinishAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionTracker.FinishAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionTracker.FinishAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.ISessionTracker.FinishAsync``1(System.String,CancellationToken)
  name: FinishAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_FinishAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.FinishAsync``1(System.String,CancellationToken)
  name.vb: FinishAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.ISessionTracker.FinishAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.FinishAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionTracker.FinishAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionTracker.FinishAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.ISessionTracker.GetAsync*
  name: GetAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_GetAsync_
  commentId: Overload:SessionTracker.ISessionTracker.GetAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.GetAsync
  nameWithType: ISessionTracker.GetAsync
- uid: SessionTracker.ISessionTracker.GetAsync``1(System.String,CancellationToken)
  name: GetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_GetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.GetAsync``1(System.String,CancellationToken)
  name.vb: GetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.ISessionTracker.GetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.GetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionTracker.GetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionTracker.GetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.ISessionTracker.GetFinishedAsync*
  name: GetFinishedAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_GetFinishedAsync_
  commentId: Overload:SessionTracker.ISessionTracker.GetFinishedAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.GetFinishedAsync
  nameWithType: ISessionTracker.GetFinishedAsync
- uid: SessionTracker.ISessionTracker.GetFinishedAsync``1(System.String,CancellationToken)
  name: GetFinishedAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_GetFinishedAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.GetFinishedAsync``1(System.String,CancellationToken)
  name.vb: GetFinishedAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.ISessionTracker.GetFinishedAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.GetFinishedAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionTracker.GetFinishedAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionTracker.GetFinishedAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.ISessionTracker.GetLockedAsync*
  name: GetLockedAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_GetLockedAsync_
  commentId: Overload:SessionTracker.ISessionTracker.GetLockedAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.GetLockedAsync
  nameWithType: ISessionTracker.GetLockedAsync
- uid: SessionTracker.ISessionTracker.GetLockedAsync``1(System.String,System.Nullable{TimeSpan},CancellationToken)
  name: GetLockedAsync<TSession>(String, Nullable<TimeSpan>, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_GetLockedAsync__1_System_String_System_Nullable_TimeSpan__CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.GetLockedAsync``1(System.String,System.Nullable{TimeSpan},CancellationToken)
  name.vb: GetLockedAsync(Of TSession)(String, Nullable(Of TimeSpan), CancellationToken)
  fullName: SessionTracker.ISessionTracker.GetLockedAsync<TSession>(System.String, System.Nullable<TimeSpan>, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.GetLockedAsync(Of TSession)(System.String, System.Nullable(Of TimeSpan), CancellationToken)
  nameWithType: ISessionTracker.GetLockedAsync<TSession>(String, Nullable<TimeSpan>, CancellationToken)
  nameWithType.vb: ISessionTracker.GetLockedAsync(Of TSession)(String, Nullable(Of TimeSpan), CancellationToken)
- uid: SessionTracker.ISessionTracker.GetLockedAsync``1(System.String,TimeSpan,TimeSpan,CancellationToken)
  name: GetLockedAsync<TSession>(String, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_GetLockedAsync__1_System_String_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.GetLockedAsync``1(System.String,TimeSpan,TimeSpan,CancellationToken)
  name.vb: GetLockedAsync(Of TSession)(String, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.ISessionTracker.GetLockedAsync<TSession>(System.String, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.GetLockedAsync(Of TSession)(System.String, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: ISessionTracker.GetLockedAsync<TSession>(String, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: ISessionTracker.GetLockedAsync(Of TSession)(String, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.ISessionTracker.GetLockedAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: GetLockedAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_GetLockedAsync__1_System_String_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.GetLockedAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: GetLockedAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.ISessionTracker.GetLockedAsync<TSession>(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.GetLockedAsync(Of TSession)(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: ISessionTracker.GetLockedAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: ISessionTracker.GetLockedAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.ISessionTracker.LockAsync*
  name: LockAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_LockAsync_
  commentId: Overload:SessionTracker.ISessionTracker.LockAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.LockAsync
  nameWithType: ISessionTracker.LockAsync
- uid: SessionTracker.ISessionTracker.LockAsync``1(``0,System.Nullable{TimeSpan},CancellationToken)
  name: LockAsync<TSession>(TSession, Nullable<TimeSpan>, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_LockAsync__1___0_System_Nullable_TimeSpan__CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.LockAsync``1(``0,System.Nullable{TimeSpan},CancellationToken)
  name.vb: LockAsync(Of TSession)(TSession, Nullable(Of TimeSpan), CancellationToken)
  fullName: SessionTracker.ISessionTracker.LockAsync<TSession>(TSession, System.Nullable<TimeSpan>, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.LockAsync(Of TSession)(TSession, System.Nullable(Of TimeSpan), CancellationToken)
  nameWithType: ISessionTracker.LockAsync<TSession>(TSession, Nullable<TimeSpan>, CancellationToken)
  nameWithType.vb: ISessionTracker.LockAsync(Of TSession)(TSession, Nullable(Of TimeSpan), CancellationToken)
- uid: SessionTracker.ISessionTracker.LockAsync``1(``0,TimeSpan,TimeSpan,CancellationToken)
  name: LockAsync<TSession>(TSession, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_LockAsync__1___0_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.LockAsync``1(``0,TimeSpan,TimeSpan,CancellationToken)
  name.vb: LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.ISessionTracker.LockAsync<TSession>(TSession, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: ISessionTracker.LockAsync<TSession>(TSession, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: ISessionTracker.LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.ISessionTracker.LockAsync``1(``0,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: LockAsync<TSession>(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_LockAsync__1___0_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.LockAsync``1(``0,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.ISessionTracker.LockAsync<TSession>(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: ISessionTracker.LockAsync<TSession>(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: ISessionTracker.LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.ISessionTracker.LockAsync``1(System.String,System.Nullable{TimeSpan},CancellationToken)
  name: LockAsync<TSession>(String, Nullable<TimeSpan>, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_LockAsync__1_System_String_System_Nullable_TimeSpan__CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.LockAsync``1(System.String,System.Nullable{TimeSpan},CancellationToken)
  name.vb: LockAsync(Of TSession)(String, Nullable(Of TimeSpan), CancellationToken)
  fullName: SessionTracker.ISessionTracker.LockAsync<TSession>(System.String, System.Nullable<TimeSpan>, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.LockAsync(Of TSession)(System.String, System.Nullable(Of TimeSpan), CancellationToken)
  nameWithType: ISessionTracker.LockAsync<TSession>(String, Nullable<TimeSpan>, CancellationToken)
  nameWithType.vb: ISessionTracker.LockAsync(Of TSession)(String, Nullable(Of TimeSpan), CancellationToken)
- uid: SessionTracker.ISessionTracker.LockAsync``1(System.String,TimeSpan,TimeSpan,CancellationToken)
  name: LockAsync<TSession>(String, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_LockAsync__1_System_String_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.LockAsync``1(System.String,TimeSpan,TimeSpan,CancellationToken)
  name.vb: LockAsync(Of TSession)(String, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.ISessionTracker.LockAsync<TSession>(System.String, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.LockAsync(Of TSession)(System.String, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: ISessionTracker.LockAsync<TSession>(String, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: ISessionTracker.LockAsync(Of TSession)(String, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.ISessionTracker.LockAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: LockAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_LockAsync__1_System_String_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.LockAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: LockAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.ISessionTracker.LockAsync<TSession>(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.LockAsync(Of TSession)(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: ISessionTracker.LockAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: ISessionTracker.LockAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.ISessionTracker.RefreshAsync*
  name: RefreshAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_RefreshAsync_
  commentId: Overload:SessionTracker.ISessionTracker.RefreshAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.RefreshAsync
  nameWithType: ISessionTracker.RefreshAsync
- uid: SessionTracker.ISessionTracker.RefreshAsync``1(``0,CancellationToken)
  name: RefreshAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_RefreshAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.RefreshAsync``1(``0,CancellationToken)
  name.vb: RefreshAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.ISessionTracker.RefreshAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.RefreshAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionTracker.RefreshAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionTracker.RefreshAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.ISessionTracker.RefreshAsync``1(System.String,CancellationToken)
  name: RefreshAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_RefreshAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.RefreshAsync``1(System.String,CancellationToken)
  name.vb: RefreshAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.ISessionTracker.RefreshAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.RefreshAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionTracker.RefreshAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionTracker.RefreshAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.ISessionTracker.ResumeAndGetAsync*
  name: ResumeAndGetAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_ResumeAndGetAsync_
  commentId: Overload:SessionTracker.ISessionTracker.ResumeAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.ResumeAndGetAsync
  nameWithType: ISessionTracker.ResumeAndGetAsync
- uid: SessionTracker.ISessionTracker.ResumeAndGetAsync``1(``0,CancellationToken)
  name: ResumeAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_ResumeAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.ResumeAndGetAsync``1(``0,CancellationToken)
  name.vb: ResumeAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.ISessionTracker.ResumeAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.ResumeAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionTracker.ResumeAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionTracker.ResumeAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.ISessionTracker.ResumeAndGetAsync``1(System.String,CancellationToken)
  name: ResumeAndGetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_ResumeAndGetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.ResumeAndGetAsync``1(System.String,CancellationToken)
  name.vb: ResumeAndGetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.ISessionTracker.ResumeAndGetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.ResumeAndGetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionTracker.ResumeAndGetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionTracker.ResumeAndGetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.ISessionTracker.ResumeAsync*
  name: ResumeAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_ResumeAsync_
  commentId: Overload:SessionTracker.ISessionTracker.ResumeAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.ResumeAsync
  nameWithType: ISessionTracker.ResumeAsync
- uid: SessionTracker.ISessionTracker.ResumeAsync``1(``0,CancellationToken)
  name: ResumeAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_ResumeAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.ResumeAsync``1(``0,CancellationToken)
  name.vb: ResumeAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.ISessionTracker.ResumeAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.ResumeAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionTracker.ResumeAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionTracker.ResumeAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.ISessionTracker.ResumeAsync``1(System.String,CancellationToken)
  name: ResumeAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_ResumeAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.ResumeAsync``1(System.String,CancellationToken)
  name.vb: ResumeAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.ISessionTracker.ResumeAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.ResumeAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: ISessionTracker.ResumeAsync<TSession>(String, CancellationToken)
  nameWithType.vb: ISessionTracker.ResumeAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.ISessionTracker.StartAsync*
  name: StartAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_StartAsync_
  commentId: Overload:SessionTracker.ISessionTracker.StartAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.StartAsync
  nameWithType: ISessionTracker.StartAsync
- uid: SessionTracker.ISessionTracker.StartAsync``1(``0,CancellationToken)
  name: StartAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_StartAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.StartAsync``1(``0,CancellationToken)
  name.vb: StartAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.ISessionTracker.StartAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.StartAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionTracker.StartAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionTracker.StartAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.ISessionTracker.StartAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name: StartAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_StartAsync__1___0_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.StartAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: StartAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.ISessionTracker.StartAsync<TSession>(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.StartAsync(Of TSession)(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: ISessionTracker.StartAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  nameWithType.vb: ISessionTracker.StartAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.ISessionTracker.UpdateAndGetAsync*
  name: UpdateAndGetAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_UpdateAndGetAsync_
  commentId: Overload:SessionTracker.ISessionTracker.UpdateAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.UpdateAndGetAsync
  nameWithType: ISessionTracker.UpdateAndGetAsync
- uid: SessionTracker.ISessionTracker.UpdateAndGetAsync``1(``0,CancellationToken)
  name: UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_UpdateAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.UpdateAndGetAsync``1(``0,CancellationToken)
  name.vb: UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.ISessionTracker.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionTracker.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionTracker.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.ISessionTracker.UpdateAsync*
  name: UpdateAsync
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_UpdateAsync_
  commentId: Overload:SessionTracker.ISessionTracker.UpdateAsync
  isSpec: "True"
  fullName: SessionTracker.ISessionTracker.UpdateAsync
  nameWithType: ISessionTracker.UpdateAsync
- uid: SessionTracker.ISessionTracker.UpdateAsync``1(``0,CancellationToken)
  name: UpdateAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.ISessionTracker.html#SessionTracker_ISessionTracker_UpdateAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.ISessionTracker.UpdateAsync``1(``0,CancellationToken)
  name.vb: UpdateAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.ISessionTracker.UpdateAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.ISessionTracker.UpdateAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: ISessionTracker.UpdateAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: ISessionTracker.UpdateAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.LockedSession`1
  name: LockedSession<TSession>
  href: api/SessionTracker.LockedSession-1.html
  commentId: T:SessionTracker.LockedSession`1
  name.vb: LockedSession(Of TSession)
  fullName: SessionTracker.LockedSession<TSession>
  fullName.vb: SessionTracker.LockedSession(Of TSession)
  nameWithType: LockedSession<TSession>
  nameWithType.vb: LockedSession(Of TSession)
- uid: SessionTracker.LockedSession`1.Dispose
  name: Dispose()
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Dispose
  commentId: M:SessionTracker.LockedSession`1.Dispose
  fullName: SessionTracker.LockedSession<TSession>.Dispose()
  fullName.vb: SessionTracker.LockedSession(Of TSession).Dispose()
  nameWithType: LockedSession<TSession>.Dispose()
  nameWithType.vb: LockedSession(Of TSession).Dispose()
- uid: SessionTracker.LockedSession`1.Dispose*
  name: Dispose
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Dispose_
  commentId: Overload:SessionTracker.LockedSession`1.Dispose
  isSpec: "True"
  fullName: SessionTracker.LockedSession<TSession>.Dispose
  fullName.vb: SessionTracker.LockedSession(Of TSession).Dispose
  nameWithType: LockedSession<TSession>.Dispose
  nameWithType.vb: LockedSession(Of TSession).Dispose
- uid: SessionTracker.LockedSession`1.DisposeAsync
  name: DisposeAsync()
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_DisposeAsync
  commentId: M:SessionTracker.LockedSession`1.DisposeAsync
  fullName: SessionTracker.LockedSession<TSession>.DisposeAsync()
  fullName.vb: SessionTracker.LockedSession(Of TSession).DisposeAsync()
  nameWithType: LockedSession<TSession>.DisposeAsync()
  nameWithType.vb: LockedSession(Of TSession).DisposeAsync()
- uid: SessionTracker.LockedSession`1.DisposeAsync*
  name: DisposeAsync
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_DisposeAsync_
  commentId: Overload:SessionTracker.LockedSession`1.DisposeAsync
  isSpec: "True"
  fullName: SessionTracker.LockedSession<TSession>.DisposeAsync
  fullName.vb: SessionTracker.LockedSession(Of TSession).DisposeAsync
  nameWithType: LockedSession<TSession>.DisposeAsync
  nameWithType.vb: LockedSession(Of TSession).DisposeAsync
- uid: SessionTracker.LockedSession`1.Equals(SessionTracker.Abstractions.ILockedSession{`0})
  name: Equals(ILockedSession<TSession>)
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Equals_SessionTracker_Abstractions_ILockedSession__0__
  commentId: M:SessionTracker.LockedSession`1.Equals(SessionTracker.Abstractions.ILockedSession{`0})
  name.vb: Equals(ILockedSession(Of TSession))
  fullName: SessionTracker.LockedSession<TSession>.Equals(SessionTracker.Abstractions.ILockedSession<TSession>)
  fullName.vb: SessionTracker.LockedSession(Of TSession).Equals(SessionTracker.Abstractions.ILockedSession(Of TSession))
  nameWithType: LockedSession<TSession>.Equals(ILockedSession<TSession>)
  nameWithType.vb: LockedSession(Of TSession).Equals(ILockedSession(Of TSession))
- uid: SessionTracker.LockedSession`1.Equals(SessionTracker.LockedSession{`0})
  name: Equals(LockedSession<TSession>)
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Equals_SessionTracker_LockedSession__0__
  commentId: M:SessionTracker.LockedSession`1.Equals(SessionTracker.LockedSession{`0})
  name.vb: Equals(LockedSession(Of TSession))
  fullName: SessionTracker.LockedSession<TSession>.Equals(SessionTracker.LockedSession<TSession>)
  fullName.vb: SessionTracker.LockedSession(Of TSession).Equals(SessionTracker.LockedSession(Of TSession))
  nameWithType: LockedSession<TSession>.Equals(LockedSession<TSession>)
  nameWithType.vb: LockedSession(Of TSession).Equals(LockedSession(Of TSession))
- uid: SessionTracker.LockedSession`1.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Equals_System_Nullable_System_Object__
  commentId: M:SessionTracker.LockedSession`1.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: SessionTracker.LockedSession<TSession>.Equals(System.Nullable<System.Object>)
  fullName.vb: SessionTracker.LockedSession(Of TSession).Equals(System.Nullable(Of System.Object))
  nameWithType: LockedSession<TSession>.Equals(Nullable<Object>)
  nameWithType.vb: LockedSession(Of TSession).Equals(Nullable(Of Object))
- uid: SessionTracker.LockedSession`1.Equals*
  name: Equals
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Equals_
  commentId: Overload:SessionTracker.LockedSession`1.Equals
  isSpec: "True"
  fullName: SessionTracker.LockedSession<TSession>.Equals
  fullName.vb: SessionTracker.LockedSession(Of TSession).Equals
  nameWithType: LockedSession<TSession>.Equals
  nameWithType.vb: LockedSession(Of TSession).Equals
- uid: SessionTracker.LockedSession`1.GetHashCode
  name: GetHashCode()
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_GetHashCode
  commentId: M:SessionTracker.LockedSession`1.GetHashCode
  fullName: SessionTracker.LockedSession<TSession>.GetHashCode()
  fullName.vb: SessionTracker.LockedSession(Of TSession).GetHashCode()
  nameWithType: LockedSession<TSession>.GetHashCode()
  nameWithType.vb: LockedSession(Of TSession).GetHashCode()
- uid: SessionTracker.LockedSession`1.GetHashCode*
  name: GetHashCode
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_GetHashCode_
  commentId: Overload:SessionTracker.LockedSession`1.GetHashCode
  isSpec: "True"
  fullName: SessionTracker.LockedSession<TSession>.GetHashCode
  fullName.vb: SessionTracker.LockedSession(Of TSession).GetHashCode
  nameWithType: LockedSession<TSession>.GetHashCode
  nameWithType.vb: LockedSession(Of TSession).GetHashCode
- uid: SessionTracker.LockedSession`1.Lock
  name: Lock
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Lock
  commentId: P:SessionTracker.LockedSession`1.Lock
  fullName: SessionTracker.LockedSession<TSession>.Lock
  fullName.vb: SessionTracker.LockedSession(Of TSession).Lock
  nameWithType: LockedSession<TSession>.Lock
  nameWithType.vb: LockedSession(Of TSession).Lock
- uid: SessionTracker.LockedSession`1.Lock*
  name: Lock
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Lock_
  commentId: Overload:SessionTracker.LockedSession`1.Lock
  isSpec: "True"
  fullName: SessionTracker.LockedSession<TSession>.Lock
  fullName.vb: SessionTracker.LockedSession(Of TSession).Lock
  nameWithType: LockedSession<TSession>.Lock
  nameWithType.vb: LockedSession(Of TSession).Lock
- uid: SessionTracker.LockedSession`1.op_Equality(SessionTracker.LockedSession{`0},SessionTracker.LockedSession{`0})
  name: Equality(LockedSession<TSession>, LockedSession<TSession>)
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_op_Equality_SessionTracker_LockedSession__0__SessionTracker_LockedSession__0__
  commentId: M:SessionTracker.LockedSession`1.op_Equality(SessionTracker.LockedSession{`0},SessionTracker.LockedSession{`0})
  name.vb: Equality(LockedSession(Of TSession), LockedSession(Of TSession))
  fullName: SessionTracker.LockedSession<TSession>.Equality(SessionTracker.LockedSession<TSession>, SessionTracker.LockedSession<TSession>)
  fullName.vb: SessionTracker.LockedSession(Of TSession).Equality(SessionTracker.LockedSession(Of TSession), SessionTracker.LockedSession(Of TSession))
  nameWithType: LockedSession<TSession>.Equality(LockedSession<TSession>, LockedSession<TSession>)
  nameWithType.vb: LockedSession(Of TSession).Equality(LockedSession(Of TSession), LockedSession(Of TSession))
- uid: SessionTracker.LockedSession`1.op_Equality*
  name: Equality
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_op_Equality_
  commentId: Overload:SessionTracker.LockedSession`1.op_Equality
  isSpec: "True"
  fullName: SessionTracker.LockedSession<TSession>.Equality
  fullName.vb: SessionTracker.LockedSession(Of TSession).Equality
  nameWithType: LockedSession<TSession>.Equality
  nameWithType.vb: LockedSession(Of TSession).Equality
- uid: SessionTracker.LockedSession`1.op_Inequality(SessionTracker.LockedSession{`0},SessionTracker.LockedSession{`0})
  name: Inequality(LockedSession<TSession>, LockedSession<TSession>)
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_op_Inequality_SessionTracker_LockedSession__0__SessionTracker_LockedSession__0__
  commentId: M:SessionTracker.LockedSession`1.op_Inequality(SessionTracker.LockedSession{`0},SessionTracker.LockedSession{`0})
  name.vb: Inequality(LockedSession(Of TSession), LockedSession(Of TSession))
  fullName: SessionTracker.LockedSession<TSession>.Inequality(SessionTracker.LockedSession<TSession>, SessionTracker.LockedSession<TSession>)
  fullName.vb: SessionTracker.LockedSession(Of TSession).Inequality(SessionTracker.LockedSession(Of TSession), SessionTracker.LockedSession(Of TSession))
  nameWithType: LockedSession<TSession>.Inequality(LockedSession<TSession>, LockedSession<TSession>)
  nameWithType.vb: LockedSession(Of TSession).Inequality(LockedSession(Of TSession), LockedSession(Of TSession))
- uid: SessionTracker.LockedSession`1.op_Inequality*
  name: Inequality
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_op_Inequality_
  commentId: Overload:SessionTracker.LockedSession`1.op_Inequality
  isSpec: "True"
  fullName: SessionTracker.LockedSession<TSession>.Inequality
  fullName.vb: SessionTracker.LockedSession(Of TSession).Inequality
  nameWithType: LockedSession<TSession>.Inequality
  nameWithType.vb: LockedSession(Of TSession).Inequality
- uid: SessionTracker.LockedSession`1.Session
  name: Session
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Session
  commentId: P:SessionTracker.LockedSession`1.Session
  fullName: SessionTracker.LockedSession<TSession>.Session
  fullName.vb: SessionTracker.LockedSession(Of TSession).Session
  nameWithType: LockedSession<TSession>.Session
  nameWithType.vb: LockedSession(Of TSession).Session
- uid: SessionTracker.LockedSession`1.Session*
  name: Session
  href: api/SessionTracker.LockedSession-1.html#SessionTracker_LockedSession_1_Session_
  commentId: Overload:SessionTracker.LockedSession`1.Session
  isSpec: "True"
  fullName: SessionTracker.LockedSession<TSession>.Session
  fullName.vb: SessionTracker.LockedSession(Of TSession).Session
  nameWithType: LockedSession<TSession>.Session
  nameWithType.vb: LockedSession(Of TSession).Session
- uid: SessionTracker.Redis
  name: SessionTracker.Redis
  href: api/SessionTracker.Redis.html
  commentId: N:SessionTracker.Redis
  fullName: SessionTracker.Redis
  nameWithType: SessionTracker.Redis
- uid: SessionTracker.Redis.Abstractions
  name: SessionTracker.Redis.Abstractions
  href: api/SessionTracker.Redis.Abstractions.html
  commentId: N:SessionTracker.Redis.Abstractions
  fullName: SessionTracker.Redis.Abstractions
  nameWithType: SessionTracker.Redis.Abstractions
- uid: SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider
  name: IDistributedLockFactoryProvider
  href: api/SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.html
  commentId: T:SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider
  fullName: SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider
  nameWithType: IDistributedLockFactoryProvider
- uid: SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.GetDistributedLockFactoryAsync(CancellationToken)
  name: GetDistributedLockFactoryAsync(CancellationToken)
  href: api/SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.html#SessionTracker_Redis_Abstractions_IDistributedLockFactoryProvider_GetDistributedLockFactoryAsync_CancellationToken_
  commentId: M:SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.GetDistributedLockFactoryAsync(CancellationToken)
  fullName: SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.GetDistributedLockFactoryAsync(CancellationToken)
  nameWithType: IDistributedLockFactoryProvider.GetDistributedLockFactoryAsync(CancellationToken)
- uid: SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.GetDistributedLockFactoryAsync*
  name: GetDistributedLockFactoryAsync
  href: api/SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.html#SessionTracker_Redis_Abstractions_IDistributedLockFactoryProvider_GetDistributedLockFactoryAsync_
  commentId: Overload:SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.GetDistributedLockFactoryAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider.GetDistributedLockFactoryAsync
  nameWithType: IDistributedLockFactoryProvider.GetDistributedLockFactoryAsync
- uid: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider
  name: IRedisConnectionMultiplexerProvider
  href: api/SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.html
  commentId: T:SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider
  fullName: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider
  nameWithType: IRedisConnectionMultiplexerProvider
- uid: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync(CancellationToken)
  name: GetConfigurationOptionsAsync(CancellationToken)
  href: api/SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.html#SessionTracker_Redis_Abstractions_IRedisConnectionMultiplexerProvider_GetConfigurationOptionsAsync_CancellationToken_
  commentId: M:SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync(CancellationToken)
  fullName: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync(CancellationToken)
  nameWithType: IRedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync(CancellationToken)
- uid: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync*
  name: GetConfigurationOptionsAsync
  href: api/SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.html#SessionTracker_Redis_Abstractions_IRedisConnectionMultiplexerProvider_GetConfigurationOptionsAsync_
  commentId: Overload:SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync
  nameWithType: IRedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync
- uid: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync(CancellationToken)
  name: GetConnectionMultiplexerAsync(CancellationToken)
  href: api/SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.html#SessionTracker_Redis_Abstractions_IRedisConnectionMultiplexerProvider_GetConnectionMultiplexerAsync_CancellationToken_
  commentId: M:SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync(CancellationToken)
  fullName: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync(CancellationToken)
  nameWithType: IRedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync(CancellationToken)
- uid: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync*
  name: GetConnectionMultiplexerAsync
  href: api/SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.html#SessionTracker_Redis_Abstractions_IRedisConnectionMultiplexerProvider_GetConnectionMultiplexerAsync_
  commentId: Overload:SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync
  nameWithType: IRedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync
- uid: SessionTracker.Redis.DistributedLockFactoryProvider
  name: DistributedLockFactoryProvider
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html
  commentId: T:SessionTracker.Redis.DistributedLockFactoryProvider
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider
  nameWithType: DistributedLockFactoryProvider
- uid: SessionTracker.Redis.DistributedLockFactoryProvider.#ctor(IOptions{SessionTracker.Redis.RedisSessionTrackerSettings},SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider,System.Nullable{IDistributedLockFactory})
  name: DistributedLockFactoryProvider(IOptions<RedisSessionTrackerSettings>, IRedisConnectionMultiplexerProvider, Nullable<IDistributedLockFactory>)
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html#SessionTracker_Redis_DistributedLockFactoryProvider__ctor_IOptions_SessionTracker_Redis_RedisSessionTrackerSettings__SessionTracker_Redis_Abstractions_IRedisConnectionMultiplexerProvider_System_Nullable_IDistributedLockFactory__
  commentId: M:SessionTracker.Redis.DistributedLockFactoryProvider.#ctor(IOptions{SessionTracker.Redis.RedisSessionTrackerSettings},SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider,System.Nullable{IDistributedLockFactory})
  name.vb: DistributedLockFactoryProvider(IOptions(Of RedisSessionTrackerSettings), IRedisConnectionMultiplexerProvider, Nullable(Of IDistributedLockFactory))
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider.DistributedLockFactoryProvider(IOptions<SessionTracker.Redis.RedisSessionTrackerSettings>, SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider, System.Nullable<IDistributedLockFactory>)
  fullName.vb: SessionTracker.Redis.DistributedLockFactoryProvider.DistributedLockFactoryProvider(IOptions(Of SessionTracker.Redis.RedisSessionTrackerSettings), SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider, System.Nullable(Of IDistributedLockFactory))
  nameWithType: DistributedLockFactoryProvider.DistributedLockFactoryProvider(IOptions<RedisSessionTrackerSettings>, IRedisConnectionMultiplexerProvider, Nullable<IDistributedLockFactory>)
  nameWithType.vb: DistributedLockFactoryProvider.DistributedLockFactoryProvider(IOptions(Of RedisSessionTrackerSettings), IRedisConnectionMultiplexerProvider, Nullable(Of IDistributedLockFactory))
- uid: SessionTracker.Redis.DistributedLockFactoryProvider.#ctor*
  name: DistributedLockFactoryProvider
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html#SessionTracker_Redis_DistributedLockFactoryProvider__ctor_
  commentId: Overload:SessionTracker.Redis.DistributedLockFactoryProvider.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider.DistributedLockFactoryProvider
  nameWithType: DistributedLockFactoryProvider.DistributedLockFactoryProvider
- uid: SessionTracker.Redis.DistributedLockFactoryProvider.Dispose
  name: Dispose()
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html#SessionTracker_Redis_DistributedLockFactoryProvider_Dispose
  commentId: M:SessionTracker.Redis.DistributedLockFactoryProvider.Dispose
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider.Dispose()
  nameWithType: DistributedLockFactoryProvider.Dispose()
- uid: SessionTracker.Redis.DistributedLockFactoryProvider.Dispose*
  name: Dispose
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html#SessionTracker_Redis_DistributedLockFactoryProvider_Dispose_
  commentId: Overload:SessionTracker.Redis.DistributedLockFactoryProvider.Dispose
  isSpec: "True"
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider.Dispose
  nameWithType: DistributedLockFactoryProvider.Dispose
- uid: SessionTracker.Redis.DistributedLockFactoryProvider.DisposeAsync
  name: DisposeAsync()
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html#SessionTracker_Redis_DistributedLockFactoryProvider_DisposeAsync
  commentId: M:SessionTracker.Redis.DistributedLockFactoryProvider.DisposeAsync
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider.DisposeAsync()
  nameWithType: DistributedLockFactoryProvider.DisposeAsync()
- uid: SessionTracker.Redis.DistributedLockFactoryProvider.DisposeAsync*
  name: DisposeAsync
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html#SessionTracker_Redis_DistributedLockFactoryProvider_DisposeAsync_
  commentId: Overload:SessionTracker.Redis.DistributedLockFactoryProvider.DisposeAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider.DisposeAsync
  nameWithType: DistributedLockFactoryProvider.DisposeAsync
- uid: SessionTracker.Redis.DistributedLockFactoryProvider.GetDistributedLockFactoryAsync(CancellationToken)
  name: GetDistributedLockFactoryAsync(CancellationToken)
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html#SessionTracker_Redis_DistributedLockFactoryProvider_GetDistributedLockFactoryAsync_CancellationToken_
  commentId: M:SessionTracker.Redis.DistributedLockFactoryProvider.GetDistributedLockFactoryAsync(CancellationToken)
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider.GetDistributedLockFactoryAsync(CancellationToken)
  nameWithType: DistributedLockFactoryProvider.GetDistributedLockFactoryAsync(CancellationToken)
- uid: SessionTracker.Redis.DistributedLockFactoryProvider.GetDistributedLockFactoryAsync*
  name: GetDistributedLockFactoryAsync
  href: api/SessionTracker.Redis.DistributedLockFactoryProvider.html#SessionTracker_Redis_DistributedLockFactoryProvider_GetDistributedLockFactoryAsync_
  commentId: Overload:SessionTracker.Redis.DistributedLockFactoryProvider.GetDistributedLockFactoryAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.DistributedLockFactoryProvider.GetDistributedLockFactoryAsync
  nameWithType: DistributedLockFactoryProvider.GetDistributedLockFactoryAsync
- uid: SessionTracker.Redis.Extensions
  name: SessionTracker.Redis.Extensions
  href: api/SessionTracker.Redis.Extensions.html
  commentId: N:SessionTracker.Redis.Extensions
  fullName: SessionTracker.Redis.Extensions
  nameWithType: SessionTracker.Redis.Extensions
- uid: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions
  name: SessionProviderKeyExtensions
  href: api/SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.html
  commentId: T:SessionTracker.Redis.Extensions.SessionProviderKeyExtensions
  fullName: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions
  nameWithType: SessionProviderKeyExtensions
- uid: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisKey(SessionTracker.Abstractions.ISessionProviderKey)
  name: ToRedisKey(ISessionProviderKey)
  href: api/SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.html#SessionTracker_Redis_Extensions_SessionProviderKeyExtensions_ToRedisKey_SessionTracker_Abstractions_ISessionProviderKey_
  commentId: M:SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisKey(SessionTracker.Abstractions.ISessionProviderKey)
  fullName: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisKey(SessionTracker.Abstractions.ISessionProviderKey)
  nameWithType: SessionProviderKeyExtensions.ToRedisKey(ISessionProviderKey)
- uid: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisKey*
  name: ToRedisKey
  href: api/SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.html#SessionTracker_Redis_Extensions_SessionProviderKeyExtensions_ToRedisKey_
  commentId: Overload:SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisKey
  isSpec: "True"
  fullName: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisKey
  nameWithType: SessionProviderKeyExtensions.ToRedisKey
- uid: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisValue(SessionTracker.Abstractions.ISessionProviderKey)
  name: ToRedisValue(ISessionProviderKey)
  href: api/SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.html#SessionTracker_Redis_Extensions_SessionProviderKeyExtensions_ToRedisValue_SessionTracker_Abstractions_ISessionProviderKey_
  commentId: M:SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisValue(SessionTracker.Abstractions.ISessionProviderKey)
  fullName: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisValue(SessionTracker.Abstractions.ISessionProviderKey)
  nameWithType: SessionProviderKeyExtensions.ToRedisValue(ISessionProviderKey)
- uid: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisValue*
  name: ToRedisValue
  href: api/SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.html#SessionTracker_Redis_Extensions_SessionProviderKeyExtensions_ToRedisValue_
  commentId: Overload:SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisValue
  isSpec: "True"
  fullName: SessionTracker.Redis.Extensions.SessionProviderKeyExtensions.ToRedisValue
  nameWithType: SessionProviderKeyExtensions.ToRedisValue
- uid: SessionTracker.Redis.RedisBandwidthScriptOptimizationError
  name: RedisBandwidthScriptOptimizationError
  href: api/SessionTracker.Redis.RedisBandwidthScriptOptimizationError.html
  commentId: T:SessionTracker.Redis.RedisBandwidthScriptOptimizationError
  fullName: SessionTracker.Redis.RedisBandwidthScriptOptimizationError
  nameWithType: RedisBandwidthScriptOptimizationError
- uid: SessionTracker.Redis.RedisBandwidthScriptOptimizationError.#ctor
  name: RedisBandwidthScriptOptimizationError()
  href: api/SessionTracker.Redis.RedisBandwidthScriptOptimizationError.html#SessionTracker_Redis_RedisBandwidthScriptOptimizationError__ctor
  commentId: M:SessionTracker.Redis.RedisBandwidthScriptOptimizationError.#ctor
  fullName: SessionTracker.Redis.RedisBandwidthScriptOptimizationError.RedisBandwidthScriptOptimizationError()
  nameWithType: RedisBandwidthScriptOptimizationError.RedisBandwidthScriptOptimizationError()
- uid: SessionTracker.Redis.RedisBandwidthScriptOptimizationError.#ctor*
  name: RedisBandwidthScriptOptimizationError
  href: api/SessionTracker.Redis.RedisBandwidthScriptOptimizationError.html#SessionTracker_Redis_RedisBandwidthScriptOptimizationError__ctor_
  commentId: Overload:SessionTracker.Redis.RedisBandwidthScriptOptimizationError.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisBandwidthScriptOptimizationError.RedisBandwidthScriptOptimizationError
  nameWithType: RedisBandwidthScriptOptimizationError.RedisBandwidthScriptOptimizationError
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider
  name: RedisConnectionMultiplexerProvider
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html
  commentId: T:SessionTracker.Redis.RedisConnectionMultiplexerProvider
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider
  nameWithType: RedisConnectionMultiplexerProvider
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.#ctor(IOptions{SessionTracker.Redis.RedisSessionTrackerSettings},ILogger{SessionTracker.Redis.RedisConnectionMultiplexerProvider},System.Nullable{IConnectionMultiplexer})
  name: RedisConnectionMultiplexerProvider(IOptions<RedisSessionTrackerSettings>, ILogger<RedisConnectionMultiplexerProvider>, Nullable<IConnectionMultiplexer>)
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider__ctor_IOptions_SessionTracker_Redis_RedisSessionTrackerSettings__ILogger_SessionTracker_Redis_RedisConnectionMultiplexerProvider__System_Nullable_IConnectionMultiplexer__
  commentId: M:SessionTracker.Redis.RedisConnectionMultiplexerProvider.#ctor(IOptions{SessionTracker.Redis.RedisSessionTrackerSettings},ILogger{SessionTracker.Redis.RedisConnectionMultiplexerProvider},System.Nullable{IConnectionMultiplexer})
  name.vb: RedisConnectionMultiplexerProvider(IOptions(Of RedisSessionTrackerSettings), ILogger(Of RedisConnectionMultiplexerProvider), Nullable(Of IConnectionMultiplexer))
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.RedisConnectionMultiplexerProvider(IOptions<SessionTracker.Redis.RedisSessionTrackerSettings>, ILogger<SessionTracker.Redis.RedisConnectionMultiplexerProvider>, System.Nullable<IConnectionMultiplexer>)
  fullName.vb: SessionTracker.Redis.RedisConnectionMultiplexerProvider.RedisConnectionMultiplexerProvider(IOptions(Of SessionTracker.Redis.RedisSessionTrackerSettings), ILogger(Of SessionTracker.Redis.RedisConnectionMultiplexerProvider), System.Nullable(Of IConnectionMultiplexer))
  nameWithType: RedisConnectionMultiplexerProvider.RedisConnectionMultiplexerProvider(IOptions<RedisSessionTrackerSettings>, ILogger<RedisConnectionMultiplexerProvider>, Nullable<IConnectionMultiplexer>)
  nameWithType.vb: RedisConnectionMultiplexerProvider.RedisConnectionMultiplexerProvider(IOptions(Of RedisSessionTrackerSettings), ILogger(Of RedisConnectionMultiplexerProvider), Nullable(Of IConnectionMultiplexer))
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.#ctor*
  name: RedisConnectionMultiplexerProvider
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider__ctor_
  commentId: Overload:SessionTracker.Redis.RedisConnectionMultiplexerProvider.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.RedisConnectionMultiplexerProvider
  nameWithType: RedisConnectionMultiplexerProvider.RedisConnectionMultiplexerProvider
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.Dispose
  name: Dispose()
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider_Dispose
  commentId: M:SessionTracker.Redis.RedisConnectionMultiplexerProvider.Dispose
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.Dispose()
  nameWithType: RedisConnectionMultiplexerProvider.Dispose()
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.Dispose*
  name: Dispose
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider_Dispose_
  commentId: Overload:SessionTracker.Redis.RedisConnectionMultiplexerProvider.Dispose
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.Dispose
  nameWithType: RedisConnectionMultiplexerProvider.Dispose
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.DisposeAsync
  name: DisposeAsync()
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider_DisposeAsync
  commentId: M:SessionTracker.Redis.RedisConnectionMultiplexerProvider.DisposeAsync
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.DisposeAsync()
  nameWithType: RedisConnectionMultiplexerProvider.DisposeAsync()
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.DisposeAsync*
  name: DisposeAsync
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider_DisposeAsync_
  commentId: Overload:SessionTracker.Redis.RedisConnectionMultiplexerProvider.DisposeAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.DisposeAsync
  nameWithType: RedisConnectionMultiplexerProvider.DisposeAsync
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync(CancellationToken)
  name: GetConfigurationOptionsAsync(CancellationToken)
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider_GetConfigurationOptionsAsync_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync(CancellationToken)
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync(CancellationToken)
  nameWithType: RedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync(CancellationToken)
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync*
  name: GetConfigurationOptionsAsync
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider_GetConfigurationOptionsAsync_
  commentId: Overload:SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync
  nameWithType: RedisConnectionMultiplexerProvider.GetConfigurationOptionsAsync
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync(CancellationToken)
  name: GetConnectionMultiplexerAsync(CancellationToken)
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider_GetConnectionMultiplexerAsync_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync(CancellationToken)
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync(CancellationToken)
  nameWithType: RedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync(CancellationToken)
- uid: SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync*
  name: GetConnectionMultiplexerAsync
  href: api/SessionTracker.Redis.RedisConnectionMultiplexerProvider.html#SessionTracker_Redis_RedisConnectionMultiplexerProvider_GetConnectionMultiplexerAsync_
  commentId: Overload:SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync
  nameWithType: RedisConnectionMultiplexerProvider.GetConnectionMultiplexerAsync
- uid: SessionTracker.Redis.RedisServerError
  name: RedisServerError
  href: api/SessionTracker.Redis.RedisServerError.html
  commentId: T:SessionTracker.Redis.RedisServerError
  fullName: SessionTracker.Redis.RedisServerError
  nameWithType: RedisServerError
- uid: SessionTracker.Redis.RedisServerError.#ctor(RedisServerException)
  name: RedisServerError(RedisServerException)
  href: api/SessionTracker.Redis.RedisServerError.html#SessionTracker_Redis_RedisServerError__ctor_RedisServerException_
  commentId: M:SessionTracker.Redis.RedisServerError.#ctor(RedisServerException)
  fullName: SessionTracker.Redis.RedisServerError.RedisServerError(RedisServerException)
  nameWithType: RedisServerError.RedisServerError(RedisServerException)
- uid: SessionTracker.Redis.RedisServerError.#ctor*
  name: RedisServerError
  href: api/SessionTracker.Redis.RedisServerError.html#SessionTracker_Redis_RedisServerError__ctor_
  commentId: Overload:SessionTracker.Redis.RedisServerError.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisServerError.RedisServerError
  nameWithType: RedisServerError.RedisServerError
- uid: SessionTracker.Redis.RedisServerError.RedisServerException
  name: RedisServerException
  href: api/SessionTracker.Redis.RedisServerError.html#SessionTracker_Redis_RedisServerError_RedisServerException
  commentId: P:SessionTracker.Redis.RedisServerError.RedisServerException
  fullName: SessionTracker.Redis.RedisServerError.RedisServerException
  nameWithType: RedisServerError.RedisServerException
- uid: SessionTracker.Redis.RedisServerError.RedisServerException*
  name: RedisServerException
  href: api/SessionTracker.Redis.RedisServerError.html#SessionTracker_Redis_RedisServerError_RedisServerException_
  commentId: Overload:SessionTracker.Redis.RedisServerError.RedisServerException
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisServerError.RedisServerException
  nameWithType: RedisServerError.RedisServerException
- uid: SessionTracker.Redis.RedisSessionDataProvider
  name: RedisSessionDataProvider
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html
  commentId: T:SessionTracker.Redis.RedisSessionDataProvider
  fullName: SessionTracker.Redis.RedisSessionDataProvider
  nameWithType: RedisSessionDataProvider
- uid: SessionTracker.Redis.RedisSessionDataProvider.#ctor(IOptions{SessionTracker.Redis.RedisSessionTrackerSettings},SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider,ILogger{SessionTracker.Redis.RedisSessionDataProvider},IOptionsMonitor{JsonSerializerOptions},SessionTracker.Redis.RedisSessionTrackerKeyCreator,TimeProvider)
  name: RedisSessionDataProvider(IOptions<RedisSessionTrackerSettings>, IRedisConnectionMultiplexerProvider, ILogger<RedisSessionDataProvider>, IOptionsMonitor<JsonSerializerOptions>, RedisSessionTrackerKeyCreator, TimeProvider)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider__ctor_IOptions_SessionTracker_Redis_RedisSessionTrackerSettings__SessionTracker_Redis_Abstractions_IRedisConnectionMultiplexerProvider_ILogger_SessionTracker_Redis_RedisSessionDataProvider__IOptionsMonitor_JsonSerializerOptions__SessionTracker_Redis_RedisSessionTrackerKeyCreator_TimeProvider_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.#ctor(IOptions{SessionTracker.Redis.RedisSessionTrackerSettings},SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider,ILogger{SessionTracker.Redis.RedisSessionDataProvider},IOptionsMonitor{JsonSerializerOptions},SessionTracker.Redis.RedisSessionTrackerKeyCreator,TimeProvider)
  name.vb: RedisSessionDataProvider(IOptions(Of RedisSessionTrackerSettings), IRedisConnectionMultiplexerProvider, ILogger(Of RedisSessionDataProvider), IOptionsMonitor(Of JsonSerializerOptions), RedisSessionTrackerKeyCreator, TimeProvider)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.RedisSessionDataProvider(IOptions<SessionTracker.Redis.RedisSessionTrackerSettings>, SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider, ILogger<SessionTracker.Redis.RedisSessionDataProvider>, IOptionsMonitor<JsonSerializerOptions>, SessionTracker.Redis.RedisSessionTrackerKeyCreator, TimeProvider)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.RedisSessionDataProvider(IOptions(Of SessionTracker.Redis.RedisSessionTrackerSettings), SessionTracker.Redis.Abstractions.IRedisConnectionMultiplexerProvider, ILogger(Of SessionTracker.Redis.RedisSessionDataProvider), IOptionsMonitor(Of JsonSerializerOptions), SessionTracker.Redis.RedisSessionTrackerKeyCreator, TimeProvider)
  nameWithType: RedisSessionDataProvider.RedisSessionDataProvider(IOptions<RedisSessionTrackerSettings>, IRedisConnectionMultiplexerProvider, ILogger<RedisSessionDataProvider>, IOptionsMonitor<JsonSerializerOptions>, RedisSessionTrackerKeyCreator, TimeProvider)
  nameWithType.vb: RedisSessionDataProvider.RedisSessionDataProvider(IOptions(Of RedisSessionTrackerSettings), IRedisConnectionMultiplexerProvider, ILogger(Of RedisSessionDataProvider), IOptionsMonitor(Of JsonSerializerOptions), RedisSessionTrackerKeyCreator, TimeProvider)
- uid: SessionTracker.Redis.RedisSessionDataProvider.#ctor*
  name: RedisSessionDataProvider
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider__ctor_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.RedisSessionDataProvider
  nameWithType: RedisSessionDataProvider.RedisSessionDataProvider
- uid: SessionTracker.Redis.RedisSessionDataProvider.AddAsync*
  name: AddAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_AddAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.AddAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.AddAsync
  nameWithType: RedisSessionDataProvider.AddAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.AddAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name: AddAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_AddAsync__1___0_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.AddAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: AddAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.AddAsync<TSession>(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.AddAsync(Of TSession)(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: RedisSessionDataProvider.AddAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.AddAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.EvictAndGetAsync*
  name: EvictAndGetAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_EvictAndGetAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.EvictAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.EvictAndGetAsync
  nameWithType: RedisSessionDataProvider.EvictAndGetAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.EvictAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: EvictAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_EvictAndGetAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.EvictAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: EvictAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.EvictAndGetAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.EvictAndGetAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: RedisSessionDataProvider.EvictAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.EvictAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.EvictAsync*
  name: EvictAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_EvictAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.EvictAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.EvictAsync
  nameWithType: RedisSessionDataProvider.EvictAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.EvictAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: EvictAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_EvictAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.EvictAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: EvictAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.EvictAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.EvictAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: RedisSessionDataProvider.EvictAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.EvictAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetAbsoluteExpiration(DateTimeOffset,SessionTracker.SessionEntryOptions)
  name: GetAbsoluteExpiration(DateTimeOffset, SessionEntryOptions)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetAbsoluteExpiration_DateTimeOffset_SessionTracker_SessionEntryOptions_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.GetAbsoluteExpiration(DateTimeOffset,SessionTracker.SessionEntryOptions)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetAbsoluteExpiration(DateTimeOffset, SessionTracker.SessionEntryOptions)
  nameWithType: RedisSessionDataProvider.GetAbsoluteExpiration(DateTimeOffset, SessionEntryOptions)
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetAbsoluteExpiration*
  name: GetAbsoluteExpiration
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetAbsoluteExpiration_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.GetAbsoluteExpiration
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetAbsoluteExpiration
  nameWithType: RedisSessionDataProvider.GetAbsoluteExpiration
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetAsync*
  name: GetAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.GetAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetAsync
  nameWithType: RedisSessionDataProvider.GetAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetAsync``1(System.String,CancellationToken)
  name: GetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.GetAsync``1(System.String,CancellationToken)
  name.vb: GetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.GetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: RedisSessionDataProvider.GetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.GetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedAsync*
  name: GetEvictedAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetEvictedAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.GetEvictedAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedAsync
  nameWithType: RedisSessionDataProvider.GetEvictedAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedAsync``1(System.String,CancellationToken)
  name: GetEvictedAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetEvictedAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.GetEvictedAsync``1(System.String,CancellationToken)
  name.vb: GetEvictedAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: RedisSessionDataProvider.GetEvictedAsync<TSession>(String, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.GetEvictedAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedExpirationInSeconds(TimeSpan)
  name: GetEvictedExpirationInSeconds(TimeSpan)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetEvictedExpirationInSeconds_TimeSpan_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.GetEvictedExpirationInSeconds(TimeSpan)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedExpirationInSeconds(TimeSpan)
  nameWithType: RedisSessionDataProvider.GetEvictedExpirationInSeconds(TimeSpan)
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedExpirationInSeconds*
  name: GetEvictedExpirationInSeconds
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetEvictedExpirationInSeconds_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.GetEvictedExpirationInSeconds
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetEvictedExpirationInSeconds
  nameWithType: RedisSessionDataProvider.GetEvictedExpirationInSeconds
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetExpirationInSeconds(DateTimeOffset,System.Nullable{DateTimeOffset},SessionTracker.SessionEntryOptions)
  name: GetExpirationInSeconds(DateTimeOffset, Nullable<DateTimeOffset>, SessionEntryOptions)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetExpirationInSeconds_DateTimeOffset_System_Nullable_DateTimeOffset__SessionTracker_SessionEntryOptions_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.GetExpirationInSeconds(DateTimeOffset,System.Nullable{DateTimeOffset},SessionTracker.SessionEntryOptions)
  name.vb: GetExpirationInSeconds(DateTimeOffset, Nullable(Of DateTimeOffset), SessionEntryOptions)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetExpirationInSeconds(DateTimeOffset, System.Nullable<DateTimeOffset>, SessionTracker.SessionEntryOptions)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.GetExpirationInSeconds(DateTimeOffset, System.Nullable(Of DateTimeOffset), SessionTracker.SessionEntryOptions)
  nameWithType: RedisSessionDataProvider.GetExpirationInSeconds(DateTimeOffset, Nullable<DateTimeOffset>, SessionEntryOptions)
  nameWithType.vb: RedisSessionDataProvider.GetExpirationInSeconds(DateTimeOffset, Nullable(Of DateTimeOffset), SessionEntryOptions)
- uid: SessionTracker.Redis.RedisSessionDataProvider.GetExpirationInSeconds*
  name: GetExpirationInSeconds
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_GetExpirationInSeconds_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.GetExpirationInSeconds
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.GetExpirationInSeconds
  nameWithType: RedisSessionDataProvider.GetExpirationInSeconds
- uid: SessionTracker.Redis.RedisSessionDataProvider.RefreshAsync*
  name: RefreshAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_RefreshAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.RefreshAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.RefreshAsync
  nameWithType: RedisSessionDataProvider.RefreshAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.RefreshAsync``1(System.String,CancellationToken)
  name: RefreshAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_RefreshAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.RefreshAsync``1(System.String,CancellationToken)
  name.vb: RefreshAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.RefreshAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.RefreshAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: RedisSessionDataProvider.RefreshAsync<TSession>(String, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.RefreshAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.RestoreAndGetAsync*
  name: RestoreAndGetAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_RestoreAndGetAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.RestoreAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.RestoreAndGetAsync
  nameWithType: RedisSessionDataProvider.RestoreAndGetAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.RestoreAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: RestoreAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_RestoreAndGetAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.RestoreAndGetAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: RestoreAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.RestoreAndGetAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.RestoreAndGetAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: RedisSessionDataProvider.RestoreAndGetAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.RestoreAndGetAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.RestoreAsync*
  name: RestoreAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_RestoreAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.RestoreAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.RestoreAsync
  nameWithType: RedisSessionDataProvider.RestoreAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.RestoreAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name: RestoreAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_RestoreAsync__1_System_String_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.RestoreAsync``1(System.String,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: RestoreAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.RestoreAsync<TSession>(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.RestoreAsync(Of TSession)(System.String, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: RedisSessionDataProvider.RestoreAsync<TSession>(String, SessionEntryOptions, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.RestoreAsync(Of TSession)(String, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.UpdateAndGetAsync*
  name: UpdateAndGetAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_UpdateAndGetAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.UpdateAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.UpdateAndGetAsync
  nameWithType: RedisSessionDataProvider.UpdateAndGetAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.UpdateAndGetAsync``1(``0,CancellationToken)
  name: UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_UpdateAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.UpdateAndGetAsync``1(``0,CancellationToken)
  name.vb: UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: RedisSessionDataProvider.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionDataProvider.UpdateAsync*
  name: UpdateAsync
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_UpdateAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionDataProvider.UpdateAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionDataProvider.UpdateAsync
  nameWithType: RedisSessionDataProvider.UpdateAsync
- uid: SessionTracker.Redis.RedisSessionDataProvider.UpdateAsync``1(``0,CancellationToken)
  name: UpdateAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionDataProvider.html#SessionTracker_Redis_RedisSessionDataProvider_UpdateAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionDataProvider.UpdateAsync``1(``0,CancellationToken)
  name.vb: UpdateAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionDataProvider.UpdateAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionDataProvider.UpdateAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: RedisSessionDataProvider.UpdateAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: RedisSessionDataProvider.UpdateAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionLock
  name: RedisSessionLock
  href: api/SessionTracker.Redis.RedisSessionLock.html
  commentId: T:SessionTracker.Redis.RedisSessionLock
  fullName: SessionTracker.Redis.RedisSessionLock
  nameWithType: RedisSessionLock
- uid: SessionTracker.Redis.RedisSessionLock.Dispose
  name: Dispose()
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Dispose
  commentId: M:SessionTracker.Redis.RedisSessionLock.Dispose
  fullName: SessionTracker.Redis.RedisSessionLock.Dispose()
  nameWithType: RedisSessionLock.Dispose()
- uid: SessionTracker.Redis.RedisSessionLock.Dispose*
  name: Dispose
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Dispose_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.Dispose
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.Dispose
  nameWithType: RedisSessionLock.Dispose
- uid: SessionTracker.Redis.RedisSessionLock.DisposeAsync
  name: DisposeAsync()
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_DisposeAsync
  commentId: M:SessionTracker.Redis.RedisSessionLock.DisposeAsync
  fullName: SessionTracker.Redis.RedisSessionLock.DisposeAsync()
  nameWithType: RedisSessionLock.DisposeAsync()
- uid: SessionTracker.Redis.RedisSessionLock.DisposeAsync*
  name: DisposeAsync
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_DisposeAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.DisposeAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.DisposeAsync
  nameWithType: RedisSessionLock.DisposeAsync
- uid: SessionTracker.Redis.RedisSessionLock.Equals(SessionTracker.Redis.RedisSessionLock)
  name: Equals(RedisSessionLock)
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Equals_SessionTracker_Redis_RedisSessionLock_
  commentId: M:SessionTracker.Redis.RedisSessionLock.Equals(SessionTracker.Redis.RedisSessionLock)
  fullName: SessionTracker.Redis.RedisSessionLock.Equals(SessionTracker.Redis.RedisSessionLock)
  nameWithType: RedisSessionLock.Equals(RedisSessionLock)
- uid: SessionTracker.Redis.RedisSessionLock.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Equals_System_Nullable_System_Object__
  commentId: M:SessionTracker.Redis.RedisSessionLock.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: SessionTracker.Redis.RedisSessionLock.Equals(System.Nullable<System.Object>)
  fullName.vb: SessionTracker.Redis.RedisSessionLock.Equals(System.Nullable(Of System.Object))
  nameWithType: RedisSessionLock.Equals(Nullable<Object>)
  nameWithType.vb: RedisSessionLock.Equals(Nullable(Of Object))
- uid: SessionTracker.Redis.RedisSessionLock.Equals*
  name: Equals
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Equals_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.Equals
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.Equals
  nameWithType: RedisSessionLock.Equals
- uid: SessionTracker.Redis.RedisSessionLock.ExpiresAt
  name: ExpiresAt
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_ExpiresAt
  commentId: P:SessionTracker.Redis.RedisSessionLock.ExpiresAt
  fullName: SessionTracker.Redis.RedisSessionLock.ExpiresAt
  nameWithType: RedisSessionLock.ExpiresAt
- uid: SessionTracker.Redis.RedisSessionLock.ExpiresAt*
  name: ExpiresAt
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_ExpiresAt_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.ExpiresAt
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.ExpiresAt
  nameWithType: RedisSessionLock.ExpiresAt
- uid: SessionTracker.Redis.RedisSessionLock.GetHashCode
  name: GetHashCode()
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_GetHashCode
  commentId: M:SessionTracker.Redis.RedisSessionLock.GetHashCode
  fullName: SessionTracker.Redis.RedisSessionLock.GetHashCode()
  nameWithType: RedisSessionLock.GetHashCode()
- uid: SessionTracker.Redis.RedisSessionLock.GetHashCode*
  name: GetHashCode
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_GetHashCode_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.GetHashCode
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.GetHashCode
  nameWithType: RedisSessionLock.GetHashCode
- uid: SessionTracker.Redis.RedisSessionLock.Id
  name: Id
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Id
  commentId: P:SessionTracker.Redis.RedisSessionLock.Id
  fullName: SessionTracker.Redis.RedisSessionLock.Id
  nameWithType: RedisSessionLock.Id
- uid: SessionTracker.Redis.RedisSessionLock.Id*
  name: Id
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Id_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.Id
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.Id
  nameWithType: RedisSessionLock.Id
- uid: SessionTracker.Redis.RedisSessionLock.IsAcquired
  name: IsAcquired
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_IsAcquired
  commentId: P:SessionTracker.Redis.RedisSessionLock.IsAcquired
  fullName: SessionTracker.Redis.RedisSessionLock.IsAcquired
  nameWithType: RedisSessionLock.IsAcquired
- uid: SessionTracker.Redis.RedisSessionLock.IsAcquired*
  name: IsAcquired
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_IsAcquired_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.IsAcquired
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.IsAcquired
  nameWithType: RedisSessionLock.IsAcquired
- uid: SessionTracker.Redis.RedisSessionLock.op_Equality(SessionTracker.Redis.RedisSessionLock,SessionTracker.Redis.RedisSessionLock)
  name: Equality(RedisSessionLock, RedisSessionLock)
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_op_Equality_SessionTracker_Redis_RedisSessionLock_SessionTracker_Redis_RedisSessionLock_
  commentId: M:SessionTracker.Redis.RedisSessionLock.op_Equality(SessionTracker.Redis.RedisSessionLock,SessionTracker.Redis.RedisSessionLock)
  fullName: SessionTracker.Redis.RedisSessionLock.Equality(SessionTracker.Redis.RedisSessionLock, SessionTracker.Redis.RedisSessionLock)
  nameWithType: RedisSessionLock.Equality(RedisSessionLock, RedisSessionLock)
- uid: SessionTracker.Redis.RedisSessionLock.op_Equality*
  name: Equality
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_op_Equality_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.op_Equality
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.Equality
  nameWithType: RedisSessionLock.Equality
- uid: SessionTracker.Redis.RedisSessionLock.op_Inequality(SessionTracker.Redis.RedisSessionLock,SessionTracker.Redis.RedisSessionLock)
  name: Inequality(RedisSessionLock, RedisSessionLock)
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_op_Inequality_SessionTracker_Redis_RedisSessionLock_SessionTracker_Redis_RedisSessionLock_
  commentId: M:SessionTracker.Redis.RedisSessionLock.op_Inequality(SessionTracker.Redis.RedisSessionLock,SessionTracker.Redis.RedisSessionLock)
  fullName: SessionTracker.Redis.RedisSessionLock.Inequality(SessionTracker.Redis.RedisSessionLock, SessionTracker.Redis.RedisSessionLock)
  nameWithType: RedisSessionLock.Inequality(RedisSessionLock, RedisSessionLock)
- uid: SessionTracker.Redis.RedisSessionLock.op_Inequality*
  name: Inequality
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_op_Inequality_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.op_Inequality
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.Inequality
  nameWithType: RedisSessionLock.Inequality
- uid: SessionTracker.Redis.RedisSessionLock.Resource
  name: Resource
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Resource
  commentId: P:SessionTracker.Redis.RedisSessionLock.Resource
  fullName: SessionTracker.Redis.RedisSessionLock.Resource
  nameWithType: RedisSessionLock.Resource
- uid: SessionTracker.Redis.RedisSessionLock.Resource*
  name: Resource
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Resource_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.Resource
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.Resource
  nameWithType: RedisSessionLock.Resource
- uid: SessionTracker.Redis.RedisSessionLock.Status
  name: Status
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Status
  commentId: P:SessionTracker.Redis.RedisSessionLock.Status
  fullName: SessionTracker.Redis.RedisSessionLock.Status
  nameWithType: RedisSessionLock.Status
- uid: SessionTracker.Redis.RedisSessionLock.Status*
  name: Status
  href: api/SessionTracker.Redis.RedisSessionLock.html#SessionTracker_Redis_RedisSessionLock_Status_
  commentId: Overload:SessionTracker.Redis.RedisSessionLock.Status
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLock.Status
  nameWithType: RedisSessionLock.Status
- uid: SessionTracker.Redis.RedisSessionLockProvider
  name: RedisSessionLockProvider
  href: api/SessionTracker.Redis.RedisSessionLockProvider.html
  commentId: T:SessionTracker.Redis.RedisSessionLockProvider
  fullName: SessionTracker.Redis.RedisSessionLockProvider
  nameWithType: RedisSessionLockProvider
- uid: SessionTracker.Redis.RedisSessionLockProvider.#ctor(SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider,SessionTracker.Redis.RedisSessionTrackerKeyCreator,TimeProvider)
  name: RedisSessionLockProvider(IDistributedLockFactoryProvider, RedisSessionTrackerKeyCreator, TimeProvider)
  href: api/SessionTracker.Redis.RedisSessionLockProvider.html#SessionTracker_Redis_RedisSessionLockProvider__ctor_SessionTracker_Redis_Abstractions_IDistributedLockFactoryProvider_SessionTracker_Redis_RedisSessionTrackerKeyCreator_TimeProvider_
  commentId: M:SessionTracker.Redis.RedisSessionLockProvider.#ctor(SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider,SessionTracker.Redis.RedisSessionTrackerKeyCreator,TimeProvider)
  fullName: SessionTracker.Redis.RedisSessionLockProvider.RedisSessionLockProvider(SessionTracker.Redis.Abstractions.IDistributedLockFactoryProvider, SessionTracker.Redis.RedisSessionTrackerKeyCreator, TimeProvider)
  nameWithType: RedisSessionLockProvider.RedisSessionLockProvider(IDistributedLockFactoryProvider, RedisSessionTrackerKeyCreator, TimeProvider)
- uid: SessionTracker.Redis.RedisSessionLockProvider.#ctor*
  name: RedisSessionLockProvider
  href: api/SessionTracker.Redis.RedisSessionLockProvider.html#SessionTracker_Redis_RedisSessionLockProvider__ctor_
  commentId: Overload:SessionTracker.Redis.RedisSessionLockProvider.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLockProvider.RedisSessionLockProvider
  nameWithType: RedisSessionLockProvider.RedisSessionLockProvider
- uid: SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync*
  name: AcquireAsync
  href: api/SessionTracker.Redis.RedisSessionLockProvider.html#SessionTracker_Redis_RedisSessionLockProvider_AcquireAsync_
  commentId: Overload:SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync
  nameWithType: RedisSessionLockProvider.AcquireAsync
- uid: SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync``1(System.String,TimeSpan,CancellationToken)
  name: AcquireAsync<TSession>(String, TimeSpan, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionLockProvider.html#SessionTracker_Redis_RedisSessionLockProvider_AcquireAsync__1_System_String_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync``1(System.String,TimeSpan,CancellationToken)
  name.vb: AcquireAsync(Of TSession)(String, TimeSpan, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync<TSession>(System.String, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync(Of TSession)(System.String, TimeSpan, CancellationToken)
  nameWithType: RedisSessionLockProvider.AcquireAsync<TSession>(String, TimeSpan, CancellationToken)
  nameWithType.vb: RedisSessionLockProvider.AcquireAsync(Of TSession)(String, TimeSpan, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: AcquireAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.Redis.RedisSessionLockProvider.html#SessionTracker_Redis_RedisSessionLockProvider_AcquireAsync__1_System_String_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: AcquireAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync<TSession>(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.Redis.RedisSessionLockProvider.AcquireAsync(Of TSession)(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: RedisSessionLockProvider.AcquireAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: RedisSessionLockProvider.AcquireAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.Redis.RedisSessionTrackerBuilder
  name: RedisSessionTrackerBuilder
  href: api/SessionTracker.Redis.RedisSessionTrackerBuilder.html
  commentId: T:SessionTracker.Redis.RedisSessionTrackerBuilder
  fullName: SessionTracker.Redis.RedisSessionTrackerBuilder
  nameWithType: RedisSessionTrackerBuilder
- uid: SessionTracker.Redis.RedisSessionTrackerBuilder.#ctor(SessionTracker.SessionTrackerBuilder)
  name: RedisSessionTrackerBuilder(SessionTrackerBuilder)
  href: api/SessionTracker.Redis.RedisSessionTrackerBuilder.html#SessionTracker_Redis_RedisSessionTrackerBuilder__ctor_SessionTracker_SessionTrackerBuilder_
  commentId: M:SessionTracker.Redis.RedisSessionTrackerBuilder.#ctor(SessionTracker.SessionTrackerBuilder)
  fullName: SessionTracker.Redis.RedisSessionTrackerBuilder.RedisSessionTrackerBuilder(SessionTracker.SessionTrackerBuilder)
  nameWithType: RedisSessionTrackerBuilder.RedisSessionTrackerBuilder(SessionTrackerBuilder)
- uid: SessionTracker.Redis.RedisSessionTrackerBuilder.#ctor*
  name: RedisSessionTrackerBuilder
  href: api/SessionTracker.Redis.RedisSessionTrackerBuilder.html#SessionTracker_Redis_RedisSessionTrackerBuilder__ctor_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerBuilder.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerBuilder.RedisSessionTrackerBuilder
  nameWithType: RedisSessionTrackerBuilder.RedisSessionTrackerBuilder
- uid: SessionTracker.Redis.RedisSessionTrackerBuilder.Complete
  name: Complete()
  href: api/SessionTracker.Redis.RedisSessionTrackerBuilder.html#SessionTracker_Redis_RedisSessionTrackerBuilder_Complete
  commentId: M:SessionTracker.Redis.RedisSessionTrackerBuilder.Complete
  fullName: SessionTracker.Redis.RedisSessionTrackerBuilder.Complete()
  nameWithType: RedisSessionTrackerBuilder.Complete()
- uid: SessionTracker.Redis.RedisSessionTrackerBuilder.Complete*
  name: Complete
  href: api/SessionTracker.Redis.RedisSessionTrackerBuilder.html#SessionTracker_Redis_RedisSessionTrackerBuilder_Complete_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerBuilder.Complete
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerBuilder.Complete
  nameWithType: RedisSessionTrackerBuilder.Complete
- uid: SessionTracker.Redis.RedisSessionTrackerBuilder.SessionTrackerBuilder
  name: SessionTrackerBuilder
  href: api/SessionTracker.Redis.RedisSessionTrackerBuilder.html#SessionTracker_Redis_RedisSessionTrackerBuilder_SessionTrackerBuilder
  commentId: P:SessionTracker.Redis.RedisSessionTrackerBuilder.SessionTrackerBuilder
  fullName: SessionTracker.Redis.RedisSessionTrackerBuilder.SessionTrackerBuilder
  nameWithType: RedisSessionTrackerBuilder.SessionTrackerBuilder
- uid: SessionTracker.Redis.RedisSessionTrackerBuilder.SessionTrackerBuilder*
  name: SessionTrackerBuilder
  href: api/SessionTracker.Redis.RedisSessionTrackerBuilder.html#SessionTracker_Redis_RedisSessionTrackerBuilder_SessionTrackerBuilder_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerBuilder.SessionTrackerBuilder
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerBuilder.SessionTrackerBuilder
  nameWithType: RedisSessionTrackerBuilder.SessionTrackerBuilder
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator
  name: RedisSessionTrackerKeyCreator
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html
  commentId: T:SessionTracker.Redis.RedisSessionTrackerKeyCreator
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator
  nameWithType: RedisSessionTrackerKeyCreator
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.#ctor(IOptions{SessionTracker.Redis.RedisSessionTrackerSettings})
  name: RedisSessionTrackerKeyCreator(IOptions<RedisSessionTrackerSettings>)
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator__ctor_IOptions_SessionTracker_Redis_RedisSessionTrackerSettings__
  commentId: M:SessionTracker.Redis.RedisSessionTrackerKeyCreator.#ctor(IOptions{SessionTracker.Redis.RedisSessionTrackerSettings})
  name.vb: RedisSessionTrackerKeyCreator(IOptions(Of RedisSessionTrackerSettings))
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.RedisSessionTrackerKeyCreator(IOptions<SessionTracker.Redis.RedisSessionTrackerSettings>)
  fullName.vb: SessionTracker.Redis.RedisSessionTrackerKeyCreator.RedisSessionTrackerKeyCreator(IOptions(Of SessionTracker.Redis.RedisSessionTrackerSettings))
  nameWithType: RedisSessionTrackerKeyCreator.RedisSessionTrackerKeyCreator(IOptions<RedisSessionTrackerSettings>)
  nameWithType.vb: RedisSessionTrackerKeyCreator.RedisSessionTrackerKeyCreator(IOptions(Of RedisSessionTrackerSettings))
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.#ctor*
  name: RedisSessionTrackerKeyCreator
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator__ctor_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerKeyCreator.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.RedisSessionTrackerKeyCreator
  nameWithType: RedisSessionTrackerKeyCreator.RedisSessionTrackerKeyCreator
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateEvictedKey*
  name: CreateEvictedKey
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator_CreateEvictedKey_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateEvictedKey
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateEvictedKey
  nameWithType: RedisSessionTrackerKeyCreator.CreateEvictedKey
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateEvictedKey``1(System.String)
  name: CreateEvictedKey<TSession>(String)
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator_CreateEvictedKey__1_System_String_
  commentId: M:SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateEvictedKey``1(System.String)
  name.vb: CreateEvictedKey(Of TSession)(String)
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateEvictedKey<TSession>(System.String)
  fullName.vb: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateEvictedKey(Of TSession)(System.String)
  nameWithType: RedisSessionTrackerKeyCreator.CreateEvictedKey<TSession>(String)
  nameWithType.vb: RedisSessionTrackerKeyCreator.CreateEvictedKey(Of TSession)(String)
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKey*
  name: CreateKey
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator_CreateKey_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKey
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKey
  nameWithType: RedisSessionTrackerKeyCreator.CreateKey
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKey``1(System.String)
  name: CreateKey<TSession>(String)
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator_CreateKey__1_System_String_
  commentId: M:SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKey``1(System.String)
  name.vb: CreateKey(Of TSession)(String)
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKey<TSession>(System.String)
  fullName.vb: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKey(Of TSession)(System.String)
  nameWithType: RedisSessionTrackerKeyCreator.CreateKey<TSession>(String)
  nameWithType.vb: RedisSessionTrackerKeyCreator.CreateKey(Of TSession)(String)
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKeys*
  name: CreateKeys
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator_CreateKeys_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKeys
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKeys
  nameWithType: RedisSessionTrackerKeyCreator.CreateKeys
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKeys``1(System.String)
  name: CreateKeys<TSession>(String)
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator_CreateKeys__1_System_String_
  commentId: M:SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKeys``1(System.String)
  name.vb: CreateKeys(Of TSession)(String)
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKeys<TSession>(System.String)
  fullName.vb: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateKeys(Of TSession)(System.String)
  nameWithType: RedisSessionTrackerKeyCreator.CreateKeys<TSession>(String)
  nameWithType.vb: RedisSessionTrackerKeyCreator.CreateKeys(Of TSession)(String)
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateLockKey*
  name: CreateLockKey
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator_CreateLockKey_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateLockKey
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateLockKey
  nameWithType: RedisSessionTrackerKeyCreator.CreateLockKey
- uid: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateLockKey``1(System.String)
  name: CreateLockKey<TSession>(String)
  href: api/SessionTracker.Redis.RedisSessionTrackerKeyCreator.html#SessionTracker_Redis_RedisSessionTrackerKeyCreator_CreateLockKey__1_System_String_
  commentId: M:SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateLockKey``1(System.String)
  name.vb: CreateLockKey(Of TSession)(String)
  fullName: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateLockKey<TSession>(System.String)
  fullName.vb: SessionTracker.Redis.RedisSessionTrackerKeyCreator.CreateLockKey(Of TSession)(System.String)
  nameWithType: RedisSessionTrackerKeyCreator.CreateLockKey<TSession>(String)
  nameWithType.vb: RedisSessionTrackerKeyCreator.CreateLockKey(Of TSession)(String)
- uid: SessionTracker.Redis.RedisSessionTrackerSettings
  name: RedisSessionTrackerSettings
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html
  commentId: T:SessionTracker.Redis.RedisSessionTrackerSettings
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings
  nameWithType: RedisSessionTrackerSettings
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.BandwidthOptimizationNoScriptRetriesLimit
  name: BandwidthOptimizationNoScriptRetriesLimit
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_BandwidthOptimizationNoScriptRetriesLimit
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.BandwidthOptimizationNoScriptRetriesLimit
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.BandwidthOptimizationNoScriptRetriesLimit
  nameWithType: RedisSessionTrackerSettings.BandwidthOptimizationNoScriptRetriesLimit
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.BandwidthOptimizationNoScriptRetriesLimit*
  name: BandwidthOptimizationNoScriptRetriesLimit
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_BandwidthOptimizationNoScriptRetriesLimit_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.BandwidthOptimizationNoScriptRetriesLimit
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.BandwidthOptimizationNoScriptRetriesLimit
  nameWithType: RedisSessionTrackerSettings.BandwidthOptimizationNoScriptRetriesLimit
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.Database
  name: Database
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_Database
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.Database
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.Database
  nameWithType: RedisSessionTrackerSettings.Database
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.Database*
  name: Database
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_Database_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.Database
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.Database
  nameWithType: RedisSessionTrackerSettings.Database
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerConfiguration
  name: JsonSerializerConfiguration
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_JsonSerializerConfiguration
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerConfiguration
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerConfiguration
  nameWithType: RedisSessionTrackerSettings.JsonSerializerConfiguration
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerConfiguration*
  name: JsonSerializerConfiguration
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_JsonSerializerConfiguration_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerConfiguration
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerConfiguration
  nameWithType: RedisSessionTrackerSettings.JsonSerializerConfiguration
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerName
  name: JsonSerializerName
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_JsonSerializerName
  commentId: F:SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerName
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.JsonSerializerName
  nameWithType: RedisSessionTrackerSettings.JsonSerializerName
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.MultiplexerFactory
  name: MultiplexerFactory
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_MultiplexerFactory
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.MultiplexerFactory
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.MultiplexerFactory
  nameWithType: RedisSessionTrackerSettings.MultiplexerFactory
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.MultiplexerFactory*
  name: MultiplexerFactory
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_MultiplexerFactory_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.MultiplexerFactory
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.MultiplexerFactory
  nameWithType: RedisSessionTrackerSettings.MultiplexerFactory
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.ProfilingSession
  name: ProfilingSession
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_ProfilingSession
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.ProfilingSession
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.ProfilingSession
  nameWithType: RedisSessionTrackerSettings.ProfilingSession
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.ProfilingSession*
  name: ProfilingSession
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_ProfilingSession_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.ProfilingSession
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.ProfilingSession
  nameWithType: RedisSessionTrackerSettings.ProfilingSession
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.RedisConfigurationOptions
  name: RedisConfigurationOptions
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_RedisConfigurationOptions
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.RedisConfigurationOptions
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.RedisConfigurationOptions
  nameWithType: RedisSessionTrackerSettings.RedisConfigurationOptions
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.RedisConfigurationOptions*
  name: RedisConfigurationOptions
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_RedisConfigurationOptions_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.RedisConfigurationOptions
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.RedisConfigurationOptions
  nameWithType: RedisSessionTrackerSettings.RedisConfigurationOptions
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.SessionKeyPrefix
  name: SessionKeyPrefix
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_SessionKeyPrefix
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.SessionKeyPrefix
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.SessionKeyPrefix
  nameWithType: RedisSessionTrackerSettings.SessionKeyPrefix
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.SessionKeyPrefix*
  name: SessionKeyPrefix
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_SessionKeyPrefix_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.SessionKeyPrefix
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.SessionKeyPrefix
  nameWithType: RedisSessionTrackerSettings.SessionKeyPrefix
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.SessionLockPrefix
  name: SessionLockPrefix
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_SessionLockPrefix
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.SessionLockPrefix
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.SessionLockPrefix
  nameWithType: RedisSessionTrackerSettings.SessionLockPrefix
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.SessionLockPrefix*
  name: SessionLockPrefix
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_SessionLockPrefix_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.SessionLockPrefix
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.SessionLockPrefix
  nameWithType: RedisSessionTrackerSettings.SessionLockPrefix
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.UseBandwidthOptimizationForProxies
  name: UseBandwidthOptimizationForProxies
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_UseBandwidthOptimizationForProxies
  commentId: P:SessionTracker.Redis.RedisSessionTrackerSettings.UseBandwidthOptimizationForProxies
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.UseBandwidthOptimizationForProxies
  nameWithType: RedisSessionTrackerSettings.UseBandwidthOptimizationForProxies
- uid: SessionTracker.Redis.RedisSessionTrackerSettings.UseBandwidthOptimizationForProxies*
  name: UseBandwidthOptimizationForProxies
  href: api/SessionTracker.Redis.RedisSessionTrackerSettings.html#SessionTracker_Redis_RedisSessionTrackerSettings_UseBandwidthOptimizationForProxies_
  commentId: Overload:SessionTracker.Redis.RedisSessionTrackerSettings.UseBandwidthOptimizationForProxies
  isSpec: "True"
  fullName: SessionTracker.Redis.RedisSessionTrackerSettings.UseBandwidthOptimizationForProxies
  nameWithType: RedisSessionTrackerSettings.UseBandwidthOptimizationForProxies
- uid: SessionTracker.Redis.SessionTrackerBuilderExtensions
  name: SessionTrackerBuilderExtensions
  href: api/SessionTracker.Redis.SessionTrackerBuilderExtensions.html
  commentId: T:SessionTracker.Redis.SessionTrackerBuilderExtensions
  fullName: SessionTracker.Redis.SessionTrackerBuilderExtensions
  nameWithType: SessionTrackerBuilderExtensions
- uid: SessionTracker.Redis.SessionTrackerBuilderExtensions.AddRedisProviders(SessionTracker.SessionTrackerBuilder,Action{SessionTracker.Redis.RedisSessionTrackerSettings})
  name: AddRedisProviders(SessionTrackerBuilder, Action<RedisSessionTrackerSettings>)
  href: api/SessionTracker.Redis.SessionTrackerBuilderExtensions.html#SessionTracker_Redis_SessionTrackerBuilderExtensions_AddRedisProviders_SessionTracker_SessionTrackerBuilder_Action_SessionTracker_Redis_RedisSessionTrackerSettings__
  commentId: M:SessionTracker.Redis.SessionTrackerBuilderExtensions.AddRedisProviders(SessionTracker.SessionTrackerBuilder,Action{SessionTracker.Redis.RedisSessionTrackerSettings})
  name.vb: AddRedisProviders(SessionTrackerBuilder, Action(Of RedisSessionTrackerSettings))
  fullName: SessionTracker.Redis.SessionTrackerBuilderExtensions.AddRedisProviders(SessionTracker.SessionTrackerBuilder, Action<SessionTracker.Redis.RedisSessionTrackerSettings>)
  fullName.vb: SessionTracker.Redis.SessionTrackerBuilderExtensions.AddRedisProviders(SessionTracker.SessionTrackerBuilder, Action(Of SessionTracker.Redis.RedisSessionTrackerSettings))
  nameWithType: SessionTrackerBuilderExtensions.AddRedisProviders(SessionTrackerBuilder, Action<RedisSessionTrackerSettings>)
  nameWithType.vb: SessionTrackerBuilderExtensions.AddRedisProviders(SessionTrackerBuilder, Action(Of RedisSessionTrackerSettings))
- uid: SessionTracker.Redis.SessionTrackerBuilderExtensions.AddRedisProviders*
  name: AddRedisProviders
  href: api/SessionTracker.Redis.SessionTrackerBuilderExtensions.html#SessionTracker_Redis_SessionTrackerBuilderExtensions_AddRedisProviders_
  commentId: Overload:SessionTracker.Redis.SessionTrackerBuilderExtensions.AddRedisProviders
  isSpec: "True"
  fullName: SessionTracker.Redis.SessionTrackerBuilderExtensions.AddRedisProviders
  nameWithType: SessionTrackerBuilderExtensions.AddRedisProviders
- uid: SessionTracker.Redis.UnexpectedRedisResultError
  name: UnexpectedRedisResultError
  href: api/SessionTracker.Redis.UnexpectedRedisResultError.html
  commentId: T:SessionTracker.Redis.UnexpectedRedisResultError
  fullName: SessionTracker.Redis.UnexpectedRedisResultError
  nameWithType: UnexpectedRedisResultError
- uid: SessionTracker.Redis.UnexpectedRedisResultError.#ctor(RedisResult)
  name: UnexpectedRedisResultError(RedisResult)
  href: api/SessionTracker.Redis.UnexpectedRedisResultError.html#SessionTracker_Redis_UnexpectedRedisResultError__ctor_RedisResult_
  commentId: M:SessionTracker.Redis.UnexpectedRedisResultError.#ctor(RedisResult)
  fullName: SessionTracker.Redis.UnexpectedRedisResultError.UnexpectedRedisResultError(RedisResult)
  nameWithType: UnexpectedRedisResultError.UnexpectedRedisResultError(RedisResult)
- uid: SessionTracker.Redis.UnexpectedRedisResultError.#ctor*
  name: UnexpectedRedisResultError
  href: api/SessionTracker.Redis.UnexpectedRedisResultError.html#SessionTracker_Redis_UnexpectedRedisResultError__ctor_
  commentId: Overload:SessionTracker.Redis.UnexpectedRedisResultError.#ctor
  isSpec: "True"
  fullName: SessionTracker.Redis.UnexpectedRedisResultError.UnexpectedRedisResultError
  nameWithType: UnexpectedRedisResultError.UnexpectedRedisResultError
- uid: SessionTracker.Redis.UnexpectedRedisResultError.RedisResult
  name: RedisResult
  href: api/SessionTracker.Redis.UnexpectedRedisResultError.html#SessionTracker_Redis_UnexpectedRedisResultError_RedisResult
  commentId: P:SessionTracker.Redis.UnexpectedRedisResultError.RedisResult
  fullName: SessionTracker.Redis.UnexpectedRedisResultError.RedisResult
  nameWithType: UnexpectedRedisResultError.RedisResult
- uid: SessionTracker.Redis.UnexpectedRedisResultError.RedisResult*
  name: RedisResult
  href: api/SessionTracker.Redis.UnexpectedRedisResultError.html#SessionTracker_Redis_UnexpectedRedisResultError_RedisResult_
  commentId: Overload:SessionTracker.Redis.UnexpectedRedisResultError.RedisResult
  isSpec: "True"
  fullName: SessionTracker.Redis.UnexpectedRedisResultError.RedisResult
  nameWithType: UnexpectedRedisResultError.RedisResult
- uid: SessionTracker.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/SessionTracker.ServiceCollectionExtensions.html
  commentId: T:SessionTracker.ServiceCollectionExtensions
  fullName: SessionTracker.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: SessionTracker.ServiceCollectionExtensions.AddSessionTracker(IServiceCollection,System.Nullable{Action{SessionTracker.SessionTrackerSettings}})
  name: AddSessionTracker(IServiceCollection, Nullable<Action<SessionTrackerSettings>>)
  href: api/SessionTracker.ServiceCollectionExtensions.html#SessionTracker_ServiceCollectionExtensions_AddSessionTracker_IServiceCollection_System_Nullable_Action_SessionTracker_SessionTrackerSettings___
  commentId: M:SessionTracker.ServiceCollectionExtensions.AddSessionTracker(IServiceCollection,System.Nullable{Action{SessionTracker.SessionTrackerSettings}})
  name.vb: AddSessionTracker(IServiceCollection, Nullable(Of Action(Of SessionTrackerSettings)))
  fullName: SessionTracker.ServiceCollectionExtensions.AddSessionTracker(IServiceCollection, System.Nullable<Action<SessionTracker.SessionTrackerSettings>>)
  fullName.vb: SessionTracker.ServiceCollectionExtensions.AddSessionTracker(IServiceCollection, System.Nullable(Of Action(Of SessionTracker.SessionTrackerSettings)))
  nameWithType: ServiceCollectionExtensions.AddSessionTracker(IServiceCollection, Nullable<Action<SessionTrackerSettings>>)
  nameWithType.vb: ServiceCollectionExtensions.AddSessionTracker(IServiceCollection, Nullable(Of Action(Of SessionTrackerSettings)))
- uid: SessionTracker.ServiceCollectionExtensions.AddSessionTracker*
  name: AddSessionTracker
  href: api/SessionTracker.ServiceCollectionExtensions.html#SessionTracker_ServiceCollectionExtensions_AddSessionTracker_
  commentId: Overload:SessionTracker.ServiceCollectionExtensions.AddSessionTracker
  isSpec: "True"
  fullName: SessionTracker.ServiceCollectionExtensions.AddSessionTracker
  nameWithType: ServiceCollectionExtensions.AddSessionTracker
- uid: SessionTracker.Session
  name: Session
  href: api/SessionTracker.Session.html
  commentId: T:SessionTracker.Session
  fullName: SessionTracker.Session
  nameWithType: Session
- uid: SessionTracker.Session.#ctor(System.String)
  name: Session(String)
  href: api/SessionTracker.Session.html#SessionTracker_Session__ctor_System_String_
  commentId: M:SessionTracker.Session.#ctor(System.String)
  fullName: SessionTracker.Session.Session(System.String)
  nameWithType: Session.Session(String)
- uid: SessionTracker.Session.#ctor*
  name: Session
  href: api/SessionTracker.Session.html#SessionTracker_Session__ctor_
  commentId: Overload:SessionTracker.Session.#ctor
  isSpec: "True"
  fullName: SessionTracker.Session.Session
  nameWithType: Session.Session
- uid: SessionTracker.Session.Equals(SessionTracker.Abstractions.ISession)
  name: Equals(ISession)
  href: api/SessionTracker.Session.html#SessionTracker_Session_Equals_SessionTracker_Abstractions_ISession_
  commentId: M:SessionTracker.Session.Equals(SessionTracker.Abstractions.ISession)
  fullName: SessionTracker.Session.Equals(SessionTracker.Abstractions.ISession)
  nameWithType: Session.Equals(ISession)
- uid: SessionTracker.Session.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/SessionTracker.Session.html#SessionTracker_Session_Equals_System_Nullable_System_Object__
  commentId: M:SessionTracker.Session.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: SessionTracker.Session.Equals(System.Nullable<System.Object>)
  fullName.vb: SessionTracker.Session.Equals(System.Nullable(Of System.Object))
  nameWithType: Session.Equals(Nullable<Object>)
  nameWithType.vb: Session.Equals(Nullable(Of Object))
- uid: SessionTracker.Session.Equals*
  name: Equals
  href: api/SessionTracker.Session.html#SessionTracker_Session_Equals_
  commentId: Overload:SessionTracker.Session.Equals
  isSpec: "True"
  fullName: SessionTracker.Session.Equals
  nameWithType: Session.Equals
- uid: SessionTracker.Session.EvictedProviderKey
  name: EvictedProviderKey
  href: api/SessionTracker.Session.html#SessionTracker_Session_EvictedProviderKey
  commentId: P:SessionTracker.Session.EvictedProviderKey
  fullName: SessionTracker.Session.EvictedProviderKey
  nameWithType: Session.EvictedProviderKey
- uid: SessionTracker.Session.EvictedProviderKey*
  name: EvictedProviderKey
  href: api/SessionTracker.Session.html#SessionTracker_Session_EvictedProviderKey_
  commentId: Overload:SessionTracker.Session.EvictedProviderKey
  isSpec: "True"
  fullName: SessionTracker.Session.EvictedProviderKey
  nameWithType: Session.EvictedProviderKey
- uid: SessionTracker.Session.GetHashCode
  name: GetHashCode()
  href: api/SessionTracker.Session.html#SessionTracker_Session_GetHashCode
  commentId: M:SessionTracker.Session.GetHashCode
  fullName: SessionTracker.Session.GetHashCode()
  nameWithType: Session.GetHashCode()
- uid: SessionTracker.Session.GetHashCode*
  name: GetHashCode
  href: api/SessionTracker.Session.html#SessionTracker_Session_GetHashCode_
  commentId: Overload:SessionTracker.Session.GetHashCode
  isSpec: "True"
  fullName: SessionTracker.Session.GetHashCode
  nameWithType: Session.GetHashCode
- uid: SessionTracker.Session.Key
  name: Key
  href: api/SessionTracker.Session.html#SessionTracker_Session_Key
  commentId: P:SessionTracker.Session.Key
  fullName: SessionTracker.Session.Key
  nameWithType: Session.Key
- uid: SessionTracker.Session.Key*
  name: Key
  href: api/SessionTracker.Session.html#SessionTracker_Session_Key_
  commentId: Overload:SessionTracker.Session.Key
  isSpec: "True"
  fullName: SessionTracker.Session.Key
  nameWithType: Session.Key
- uid: SessionTracker.Session.op_Equality(SessionTracker.Session,SessionTracker.Session)
  name: Equality(Session, Session)
  href: api/SessionTracker.Session.html#SessionTracker_Session_op_Equality_SessionTracker_Session_SessionTracker_Session_
  commentId: M:SessionTracker.Session.op_Equality(SessionTracker.Session,SessionTracker.Session)
  fullName: SessionTracker.Session.Equality(SessionTracker.Session, SessionTracker.Session)
  nameWithType: Session.Equality(Session, Session)
- uid: SessionTracker.Session.op_Equality*
  name: Equality
  href: api/SessionTracker.Session.html#SessionTracker_Session_op_Equality_
  commentId: Overload:SessionTracker.Session.op_Equality
  isSpec: "True"
  fullName: SessionTracker.Session.Equality
  nameWithType: Session.Equality
- uid: SessionTracker.Session.op_Inequality(SessionTracker.Session,SessionTracker.Session)
  name: Inequality(Session, Session)
  href: api/SessionTracker.Session.html#SessionTracker_Session_op_Inequality_SessionTracker_Session_SessionTracker_Session_
  commentId: M:SessionTracker.Session.op_Inequality(SessionTracker.Session,SessionTracker.Session)
  fullName: SessionTracker.Session.Inequality(SessionTracker.Session, SessionTracker.Session)
  nameWithType: Session.Inequality(Session, Session)
- uid: SessionTracker.Session.op_Inequality*
  name: Inequality
  href: api/SessionTracker.Session.html#SessionTracker_Session_op_Inequality_
  commentId: Overload:SessionTracker.Session.op_Inequality
  isSpec: "True"
  fullName: SessionTracker.Session.Inequality
  nameWithType: Session.Inequality
- uid: SessionTracker.Session.ProviderKey
  name: ProviderKey
  href: api/SessionTracker.Session.html#SessionTracker_Session_ProviderKey
  commentId: P:SessionTracker.Session.ProviderKey
  fullName: SessionTracker.Session.ProviderKey
  nameWithType: Session.ProviderKey
- uid: SessionTracker.Session.ProviderKey*
  name: ProviderKey
  href: api/SessionTracker.Session.html#SessionTracker_Session_ProviderKey_
  commentId: Overload:SessionTracker.Session.ProviderKey
  isSpec: "True"
  fullName: SessionTracker.Session.ProviderKey
  nameWithType: Session.ProviderKey
- uid: SessionTracker.Session.SetProviderKeys(System.String,System.String)
  name: SetProviderKeys(String, String)
  href: api/SessionTracker.Session.html#SessionTracker_Session_SetProviderKeys_System_String_System_String_
  commentId: M:SessionTracker.Session.SetProviderKeys(System.String,System.String)
  fullName: SessionTracker.Session.SetProviderKeys(System.String, System.String)
  nameWithType: Session.SetProviderKeys(String, String)
- uid: SessionTracker.Session.SetProviderKeys*
  name: SetProviderKeys
  href: api/SessionTracker.Session.html#SessionTracker_Session_SetProviderKeys_
  commentId: Overload:SessionTracker.Session.SetProviderKeys
  isSpec: "True"
  fullName: SessionTracker.Session.SetProviderKeys
  nameWithType: Session.SetProviderKeys
- uid: SessionTracker.Session.StartedAt
  name: StartedAt
  href: api/SessionTracker.Session.html#SessionTracker_Session_StartedAt
  commentId: P:SessionTracker.Session.StartedAt
  fullName: SessionTracker.Session.StartedAt
  nameWithType: Session.StartedAt
- uid: SessionTracker.Session.StartedAt*
  name: StartedAt
  href: api/SessionTracker.Session.html#SessionTracker_Session_StartedAt_
  commentId: Overload:SessionTracker.Session.StartedAt
  isSpec: "True"
  fullName: SessionTracker.Session.StartedAt
  nameWithType: Session.StartedAt
- uid: SessionTracker.Session.ToString
  name: ToString()
  href: api/SessionTracker.Session.html#SessionTracker_Session_ToString
  commentId: M:SessionTracker.Session.ToString
  fullName: SessionTracker.Session.ToString()
  nameWithType: Session.ToString()
- uid: SessionTracker.Session.ToString*
  name: ToString
  href: api/SessionTracker.Session.html#SessionTracker_Session_ToString_
  commentId: Overload:SessionTracker.Session.ToString
  isSpec: "True"
  fullName: SessionTracker.Session.ToString
  nameWithType: Session.ToString
- uid: SessionTracker.Session.Version
  name: Version
  href: api/SessionTracker.Session.html#SessionTracker_Session_Version
  commentId: P:SessionTracker.Session.Version
  fullName: SessionTracker.Session.Version
  nameWithType: Session.Version
- uid: SessionTracker.Session.Version*
  name: Version
  href: api/SessionTracker.Session.html#SessionTracker_Session_Version_
  commentId: Overload:SessionTracker.Session.Version
  isSpec: "True"
  fullName: SessionTracker.Session.Version
  nameWithType: Session.Version
- uid: SessionTracker.SessionAlreadyEvictedError
  name: SessionAlreadyEvictedError
  href: api/SessionTracker.SessionAlreadyEvictedError.html
  commentId: T:SessionTracker.SessionAlreadyEvictedError
  fullName: SessionTracker.SessionAlreadyEvictedError
  nameWithType: SessionAlreadyEvictedError
- uid: SessionTracker.SessionAlreadyEvictedError.#ctor
  name: SessionAlreadyEvictedError()
  href: api/SessionTracker.SessionAlreadyEvictedError.html#SessionTracker_SessionAlreadyEvictedError__ctor
  commentId: M:SessionTracker.SessionAlreadyEvictedError.#ctor
  fullName: SessionTracker.SessionAlreadyEvictedError.SessionAlreadyEvictedError()
  nameWithType: SessionAlreadyEvictedError.SessionAlreadyEvictedError()
- uid: SessionTracker.SessionAlreadyEvictedError.#ctor*
  name: SessionAlreadyEvictedError
  href: api/SessionTracker.SessionAlreadyEvictedError.html#SessionTracker_SessionAlreadyEvictedError__ctor_
  commentId: Overload:SessionTracker.SessionAlreadyEvictedError.#ctor
  isSpec: "True"
  fullName: SessionTracker.SessionAlreadyEvictedError.SessionAlreadyEvictedError
  nameWithType: SessionAlreadyEvictedError.SessionAlreadyEvictedError
- uid: SessionTracker.SessionAlreadyRestoredError
  name: SessionAlreadyRestoredError
  href: api/SessionTracker.SessionAlreadyRestoredError.html
  commentId: T:SessionTracker.SessionAlreadyRestoredError
  fullName: SessionTracker.SessionAlreadyRestoredError
  nameWithType: SessionAlreadyRestoredError
- uid: SessionTracker.SessionAlreadyRestoredError.#ctor
  name: SessionAlreadyRestoredError()
  href: api/SessionTracker.SessionAlreadyRestoredError.html#SessionTracker_SessionAlreadyRestoredError__ctor
  commentId: M:SessionTracker.SessionAlreadyRestoredError.#ctor
  fullName: SessionTracker.SessionAlreadyRestoredError.SessionAlreadyRestoredError()
  nameWithType: SessionAlreadyRestoredError.SessionAlreadyRestoredError()
- uid: SessionTracker.SessionAlreadyRestoredError.#ctor*
  name: SessionAlreadyRestoredError
  href: api/SessionTracker.SessionAlreadyRestoredError.html#SessionTracker_SessionAlreadyRestoredError__ctor_
  commentId: Overload:SessionTracker.SessionAlreadyRestoredError.#ctor
  isSpec: "True"
  fullName: SessionTracker.SessionAlreadyRestoredError.SessionAlreadyRestoredError
  nameWithType: SessionAlreadyRestoredError.SessionAlreadyRestoredError
- uid: SessionTracker.SessionEntryOptions
  name: SessionEntryOptions
  href: api/SessionTracker.SessionEntryOptions.html
  commentId: T:SessionTracker.SessionEntryOptions
  fullName: SessionTracker.SessionEntryOptions
  nameWithType: SessionEntryOptions
- uid: SessionTracker.SessionEntryOptions.AbsoluteExpiration
  name: AbsoluteExpiration
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_AbsoluteExpiration
  commentId: P:SessionTracker.SessionEntryOptions.AbsoluteExpiration
  fullName: SessionTracker.SessionEntryOptions.AbsoluteExpiration
  nameWithType: SessionEntryOptions.AbsoluteExpiration
- uid: SessionTracker.SessionEntryOptions.AbsoluteExpiration*
  name: AbsoluteExpiration
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_AbsoluteExpiration_
  commentId: Overload:SessionTracker.SessionEntryOptions.AbsoluteExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.AbsoluteExpiration
  nameWithType: SessionEntryOptions.AbsoluteExpiration
- uid: SessionTracker.SessionEntryOptions.AbsoluteExpirationRelativeToNow
  name: AbsoluteExpirationRelativeToNow
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_AbsoluteExpirationRelativeToNow
  commentId: P:SessionTracker.SessionEntryOptions.AbsoluteExpirationRelativeToNow
  fullName: SessionTracker.SessionEntryOptions.AbsoluteExpirationRelativeToNow
  nameWithType: SessionEntryOptions.AbsoluteExpirationRelativeToNow
- uid: SessionTracker.SessionEntryOptions.AbsoluteExpirationRelativeToNow*
  name: AbsoluteExpirationRelativeToNow
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_AbsoluteExpirationRelativeToNow_
  commentId: Overload:SessionTracker.SessionEntryOptions.AbsoluteExpirationRelativeToNow
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.AbsoluteExpirationRelativeToNow
  nameWithType: SessionEntryOptions.AbsoluteExpirationRelativeToNow
- uid: SessionTracker.SessionEntryOptions.Equals(SessionTracker.SessionEntryOptions)
  name: Equals(SessionEntryOptions)
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_Equals_SessionTracker_SessionEntryOptions_
  commentId: M:SessionTracker.SessionEntryOptions.Equals(SessionTracker.SessionEntryOptions)
  fullName: SessionTracker.SessionEntryOptions.Equals(SessionTracker.SessionEntryOptions)
  nameWithType: SessionEntryOptions.Equals(SessionEntryOptions)
- uid: SessionTracker.SessionEntryOptions.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_Equals_System_Nullable_System_Object__
  commentId: M:SessionTracker.SessionEntryOptions.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: SessionTracker.SessionEntryOptions.Equals(System.Nullable<System.Object>)
  fullName.vb: SessionTracker.SessionEntryOptions.Equals(System.Nullable(Of System.Object))
  nameWithType: SessionEntryOptions.Equals(Nullable<Object>)
  nameWithType.vb: SessionEntryOptions.Equals(Nullable(Of Object))
- uid: SessionTracker.SessionEntryOptions.Equals*
  name: Equals
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_Equals_
  commentId: Overload:SessionTracker.SessionEntryOptions.Equals
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.Equals
  nameWithType: SessionEntryOptions.Equals
- uid: SessionTracker.SessionEntryOptions.GetHashCode
  name: GetHashCode()
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_GetHashCode
  commentId: M:SessionTracker.SessionEntryOptions.GetHashCode
  fullName: SessionTracker.SessionEntryOptions.GetHashCode()
  nameWithType: SessionEntryOptions.GetHashCode()
- uid: SessionTracker.SessionEntryOptions.GetHashCode*
  name: GetHashCode
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_GetHashCode_
  commentId: Overload:SessionTracker.SessionEntryOptions.GetHashCode
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.GetHashCode
  nameWithType: SessionEntryOptions.GetHashCode
- uid: SessionTracker.SessionEntryOptions.op_Equality(SessionTracker.SessionEntryOptions,SessionTracker.SessionEntryOptions)
  name: Equality(SessionEntryOptions, SessionEntryOptions)
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_op_Equality_SessionTracker_SessionEntryOptions_SessionTracker_SessionEntryOptions_
  commentId: M:SessionTracker.SessionEntryOptions.op_Equality(SessionTracker.SessionEntryOptions,SessionTracker.SessionEntryOptions)
  fullName: SessionTracker.SessionEntryOptions.Equality(SessionTracker.SessionEntryOptions, SessionTracker.SessionEntryOptions)
  nameWithType: SessionEntryOptions.Equality(SessionEntryOptions, SessionEntryOptions)
- uid: SessionTracker.SessionEntryOptions.op_Equality*
  name: Equality
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_op_Equality_
  commentId: Overload:SessionTracker.SessionEntryOptions.op_Equality
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.Equality
  nameWithType: SessionEntryOptions.Equality
- uid: SessionTracker.SessionEntryOptions.op_Inequality(SessionTracker.SessionEntryOptions,SessionTracker.SessionEntryOptions)
  name: Inequality(SessionEntryOptions, SessionEntryOptions)
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_op_Inequality_SessionTracker_SessionEntryOptions_SessionTracker_SessionEntryOptions_
  commentId: M:SessionTracker.SessionEntryOptions.op_Inequality(SessionTracker.SessionEntryOptions,SessionTracker.SessionEntryOptions)
  fullName: SessionTracker.SessionEntryOptions.Inequality(SessionTracker.SessionEntryOptions, SessionTracker.SessionEntryOptions)
  nameWithType: SessionEntryOptions.Inequality(SessionEntryOptions, SessionEntryOptions)
- uid: SessionTracker.SessionEntryOptions.op_Inequality*
  name: Inequality
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_op_Inequality_
  commentId: Overload:SessionTracker.SessionEntryOptions.op_Inequality
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.Inequality
  nameWithType: SessionEntryOptions.Inequality
- uid: SessionTracker.SessionEntryOptions.SetAbsoluteExpiration(DateTimeOffset)
  name: SetAbsoluteExpiration(DateTimeOffset)
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_SetAbsoluteExpiration_DateTimeOffset_
  commentId: M:SessionTracker.SessionEntryOptions.SetAbsoluteExpiration(DateTimeOffset)
  fullName: SessionTracker.SessionEntryOptions.SetAbsoluteExpiration(DateTimeOffset)
  nameWithType: SessionEntryOptions.SetAbsoluteExpiration(DateTimeOffset)
- uid: SessionTracker.SessionEntryOptions.SetAbsoluteExpiration(TimeSpan)
  name: SetAbsoluteExpiration(TimeSpan)
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_SetAbsoluteExpiration_TimeSpan_
  commentId: M:SessionTracker.SessionEntryOptions.SetAbsoluteExpiration(TimeSpan)
  fullName: SessionTracker.SessionEntryOptions.SetAbsoluteExpiration(TimeSpan)
  nameWithType: SessionEntryOptions.SetAbsoluteExpiration(TimeSpan)
- uid: SessionTracker.SessionEntryOptions.SetAbsoluteExpiration*
  name: SetAbsoluteExpiration
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_SetAbsoluteExpiration_
  commentId: Overload:SessionTracker.SessionEntryOptions.SetAbsoluteExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.SetAbsoluteExpiration
  nameWithType: SessionEntryOptions.SetAbsoluteExpiration
- uid: SessionTracker.SessionEntryOptions.SetSlidingExpiration(TimeSpan)
  name: SetSlidingExpiration(TimeSpan)
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_SetSlidingExpiration_TimeSpan_
  commentId: M:SessionTracker.SessionEntryOptions.SetSlidingExpiration(TimeSpan)
  fullName: SessionTracker.SessionEntryOptions.SetSlidingExpiration(TimeSpan)
  nameWithType: SessionEntryOptions.SetSlidingExpiration(TimeSpan)
- uid: SessionTracker.SessionEntryOptions.SetSlidingExpiration*
  name: SetSlidingExpiration
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_SetSlidingExpiration_
  commentId: Overload:SessionTracker.SessionEntryOptions.SetSlidingExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.SetSlidingExpiration
  nameWithType: SessionEntryOptions.SetSlidingExpiration
- uid: SessionTracker.SessionEntryOptions.SlidingExpiration
  name: SlidingExpiration
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_SlidingExpiration
  commentId: P:SessionTracker.SessionEntryOptions.SlidingExpiration
  fullName: SessionTracker.SessionEntryOptions.SlidingExpiration
  nameWithType: SessionEntryOptions.SlidingExpiration
- uid: SessionTracker.SessionEntryOptions.SlidingExpiration*
  name: SlidingExpiration
  href: api/SessionTracker.SessionEntryOptions.html#SessionTracker_SessionEntryOptions_SlidingExpiration_
  commentId: Overload:SessionTracker.SessionEntryOptions.SlidingExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionEntryOptions.SlidingExpiration
  nameWithType: SessionEntryOptions.SlidingExpiration
- uid: SessionTracker.SessionInProgressError
  name: SessionInProgressError
  href: api/SessionTracker.SessionInProgressError.html
  commentId: T:SessionTracker.SessionInProgressError
  fullName: SessionTracker.SessionInProgressError
  nameWithType: SessionInProgressError
- uid: SessionTracker.SessionInProgressError.#ctor(SessionTracker.Abstractions.ISession)
  name: SessionInProgressError(ISession)
  href: api/SessionTracker.SessionInProgressError.html#SessionTracker_SessionInProgressError__ctor_SessionTracker_Abstractions_ISession_
  commentId: M:SessionTracker.SessionInProgressError.#ctor(SessionTracker.Abstractions.ISession)
  fullName: SessionTracker.SessionInProgressError.SessionInProgressError(SessionTracker.Abstractions.ISession)
  nameWithType: SessionInProgressError.SessionInProgressError(ISession)
- uid: SessionTracker.SessionInProgressError.#ctor*
  name: SessionInProgressError
  href: api/SessionTracker.SessionInProgressError.html#SessionTracker_SessionInProgressError__ctor_
  commentId: Overload:SessionTracker.SessionInProgressError.#ctor
  isSpec: "True"
  fullName: SessionTracker.SessionInProgressError.SessionInProgressError
  nameWithType: SessionInProgressError.SessionInProgressError
- uid: SessionTracker.SessionInProgressError.Session
  name: Session
  href: api/SessionTracker.SessionInProgressError.html#SessionTracker_SessionInProgressError_Session
  commentId: P:SessionTracker.SessionInProgressError.Session
  fullName: SessionTracker.SessionInProgressError.Session
  nameWithType: SessionInProgressError.Session
- uid: SessionTracker.SessionInProgressError.Session*
  name: Session
  href: api/SessionTracker.SessionInProgressError.html#SessionTracker_SessionInProgressError_Session_
  commentId: Overload:SessionTracker.SessionInProgressError.Session
  isSpec: "True"
  fullName: SessionTracker.SessionInProgressError.Session
  nameWithType: SessionInProgressError.Session
- uid: SessionTracker.SessionLockNotAcquiredError
  name: SessionLockNotAcquiredError
  href: api/SessionTracker.SessionLockNotAcquiredError.html
  commentId: T:SessionTracker.SessionLockNotAcquiredError
  fullName: SessionTracker.SessionLockNotAcquiredError
  nameWithType: SessionLockNotAcquiredError
- uid: SessionTracker.SessionLockNotAcquiredError.#ctor(SessionTracker.SessionLockStatus)
  name: SessionLockNotAcquiredError(SessionLockStatus)
  href: api/SessionTracker.SessionLockNotAcquiredError.html#SessionTracker_SessionLockNotAcquiredError__ctor_SessionTracker_SessionLockStatus_
  commentId: M:SessionTracker.SessionLockNotAcquiredError.#ctor(SessionTracker.SessionLockStatus)
  fullName: SessionTracker.SessionLockNotAcquiredError.SessionLockNotAcquiredError(SessionTracker.SessionLockStatus)
  nameWithType: SessionLockNotAcquiredError.SessionLockNotAcquiredError(SessionLockStatus)
- uid: SessionTracker.SessionLockNotAcquiredError.#ctor*
  name: SessionLockNotAcquiredError
  href: api/SessionTracker.SessionLockNotAcquiredError.html#SessionTracker_SessionLockNotAcquiredError__ctor_
  commentId: Overload:SessionTracker.SessionLockNotAcquiredError.#ctor
  isSpec: "True"
  fullName: SessionTracker.SessionLockNotAcquiredError.SessionLockNotAcquiredError
  nameWithType: SessionLockNotAcquiredError.SessionLockNotAcquiredError
- uid: SessionTracker.SessionLockNotAcquiredError.Status
  name: Status
  href: api/SessionTracker.SessionLockNotAcquiredError.html#SessionTracker_SessionLockNotAcquiredError_Status
  commentId: P:SessionTracker.SessionLockNotAcquiredError.Status
  fullName: SessionTracker.SessionLockNotAcquiredError.Status
  nameWithType: SessionLockNotAcquiredError.Status
- uid: SessionTracker.SessionLockNotAcquiredError.Status*
  name: Status
  href: api/SessionTracker.SessionLockNotAcquiredError.html#SessionTracker_SessionLockNotAcquiredError_Status_
  commentId: Overload:SessionTracker.SessionLockNotAcquiredError.Status
  isSpec: "True"
  fullName: SessionTracker.SessionLockNotAcquiredError.Status
  nameWithType: SessionLockNotAcquiredError.Status
- uid: SessionTracker.SessionLockStatus
  name: SessionLockStatus
  href: api/SessionTracker.SessionLockStatus.html
  commentId: T:SessionTracker.SessionLockStatus
  fullName: SessionTracker.SessionLockStatus
  nameWithType: SessionLockStatus
- uid: SessionTracker.SessionLockStatus.Acquired
  name: Acquired
  href: api/SessionTracker.SessionLockStatus.html#SessionTracker_SessionLockStatus_Acquired
  commentId: F:SessionTracker.SessionLockStatus.Acquired
  fullName: SessionTracker.SessionLockStatus.Acquired
  nameWithType: SessionLockStatus.Acquired
- uid: SessionTracker.SessionLockStatus.Conflicted
  name: Conflicted
  href: api/SessionTracker.SessionLockStatus.html#SessionTracker_SessionLockStatus_Conflicted
  commentId: F:SessionTracker.SessionLockStatus.Conflicted
  fullName: SessionTracker.SessionLockStatus.Conflicted
  nameWithType: SessionLockStatus.Conflicted
- uid: SessionTracker.SessionLockStatus.Expired
  name: Expired
  href: api/SessionTracker.SessionLockStatus.html#SessionTracker_SessionLockStatus_Expired
  commentId: F:SessionTracker.SessionLockStatus.Expired
  fullName: SessionTracker.SessionLockStatus.Expired
  nameWithType: SessionLockStatus.Expired
- uid: SessionTracker.SessionLockStatus.NoQuorum
  name: NoQuorum
  href: api/SessionTracker.SessionLockStatus.html#SessionTracker_SessionLockStatus_NoQuorum
  commentId: F:SessionTracker.SessionLockStatus.NoQuorum
  fullName: SessionTracker.SessionLockStatus.NoQuorum
  nameWithType: SessionLockStatus.NoQuorum
- uid: SessionTracker.SessionLockStatus.Unlocked
  name: Unlocked
  href: api/SessionTracker.SessionLockStatus.html#SessionTracker_SessionLockStatus_Unlocked
  commentId: F:SessionTracker.SessionLockStatus.Unlocked
  fullName: SessionTracker.SessionLockStatus.Unlocked
  nameWithType: SessionLockStatus.Unlocked
- uid: SessionTracker.SessionTracker
  name: SessionTracker
  href: api/SessionTracker.SessionTracker.html
  commentId: T:SessionTracker.SessionTracker
  fullName: SessionTracker.SessionTracker
  nameWithType: SessionTracker
- uid: SessionTracker.SessionTracker.#ctor(SessionTracker.Abstractions.ISessionDataProvider,SessionTracker.Abstractions.ISessionLockProvider,IOptions{SessionTracker.SessionTrackerSettings})
  name: SessionTracker(ISessionDataProvider, ISessionLockProvider, IOptions<SessionTrackerSettings>)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker__ctor_SessionTracker_Abstractions_ISessionDataProvider_SessionTracker_Abstractions_ISessionLockProvider_IOptions_SessionTracker_SessionTrackerSettings__
  commentId: M:SessionTracker.SessionTracker.#ctor(SessionTracker.Abstractions.ISessionDataProvider,SessionTracker.Abstractions.ISessionLockProvider,IOptions{SessionTracker.SessionTrackerSettings})
  name.vb: SessionTracker(ISessionDataProvider, ISessionLockProvider, IOptions(Of SessionTrackerSettings))
  fullName: SessionTracker.SessionTracker.SessionTracker(SessionTracker.Abstractions.ISessionDataProvider, SessionTracker.Abstractions.ISessionLockProvider, IOptions<SessionTracker.SessionTrackerSettings>)
  fullName.vb: SessionTracker.SessionTracker.SessionTracker(SessionTracker.Abstractions.ISessionDataProvider, SessionTracker.Abstractions.ISessionLockProvider, IOptions(Of SessionTracker.SessionTrackerSettings))
  nameWithType: SessionTracker.SessionTracker(ISessionDataProvider, ISessionLockProvider, IOptions<SessionTrackerSettings>)
  nameWithType.vb: SessionTracker.SessionTracker(ISessionDataProvider, ISessionLockProvider, IOptions(Of SessionTrackerSettings))
- uid: SessionTracker.SessionTracker.#ctor*
  name: SessionTracker
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker__ctor_
  commentId: Overload:SessionTracker.SessionTracker.#ctor
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.SessionTracker
  nameWithType: SessionTracker.SessionTracker
- uid: SessionTracker.SessionTracker.FinishAndGetAsync*
  name: FinishAndGetAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_FinishAndGetAsync_
  commentId: Overload:SessionTracker.SessionTracker.FinishAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.FinishAndGetAsync
  nameWithType: SessionTracker.FinishAndGetAsync
- uid: SessionTracker.SessionTracker.FinishAndGetAsync``1(``0,CancellationToken)
  name: FinishAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_FinishAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.FinishAndGetAsync``1(``0,CancellationToken)
  name.vb: FinishAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.SessionTracker.FinishAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.FinishAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: SessionTracker.FinishAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: SessionTracker.FinishAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.SessionTracker.FinishAndGetAsync``1(System.String,CancellationToken)
  name: FinishAndGetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_FinishAndGetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.FinishAndGetAsync``1(System.String,CancellationToken)
  name.vb: FinishAndGetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.SessionTracker.FinishAndGetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.FinishAndGetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: SessionTracker.FinishAndGetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: SessionTracker.FinishAndGetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.SessionTracker.FinishAsync*
  name: FinishAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_FinishAsync_
  commentId: Overload:SessionTracker.SessionTracker.FinishAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.FinishAsync
  nameWithType: SessionTracker.FinishAsync
- uid: SessionTracker.SessionTracker.FinishAsync``1(``0,CancellationToken)
  name: FinishAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_FinishAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.FinishAsync``1(``0,CancellationToken)
  name.vb: FinishAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.SessionTracker.FinishAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.FinishAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: SessionTracker.FinishAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: SessionTracker.FinishAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.SessionTracker.FinishAsync``1(System.String,CancellationToken)
  name: FinishAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_FinishAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.FinishAsync``1(System.String,CancellationToken)
  name.vb: FinishAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.SessionTracker.FinishAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.FinishAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: SessionTracker.FinishAsync<TSession>(String, CancellationToken)
  nameWithType.vb: SessionTracker.FinishAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.SessionTracker.GetAsync*
  name: GetAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_GetAsync_
  commentId: Overload:SessionTracker.SessionTracker.GetAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.GetAsync
  nameWithType: SessionTracker.GetAsync
- uid: SessionTracker.SessionTracker.GetAsync``1(System.String,CancellationToken)
  name: GetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_GetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.GetAsync``1(System.String,CancellationToken)
  name.vb: GetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.SessionTracker.GetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.GetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: SessionTracker.GetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: SessionTracker.GetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.SessionTracker.GetFinishedAsync*
  name: GetFinishedAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_GetFinishedAsync_
  commentId: Overload:SessionTracker.SessionTracker.GetFinishedAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.GetFinishedAsync
  nameWithType: SessionTracker.GetFinishedAsync
- uid: SessionTracker.SessionTracker.GetFinishedAsync``1(System.String,CancellationToken)
  name: GetFinishedAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_GetFinishedAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.GetFinishedAsync``1(System.String,CancellationToken)
  name.vb: GetFinishedAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.SessionTracker.GetFinishedAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.GetFinishedAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: SessionTracker.GetFinishedAsync<TSession>(String, CancellationToken)
  nameWithType.vb: SessionTracker.GetFinishedAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.SessionTracker.GetLockedAsync*
  name: GetLockedAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_GetLockedAsync_
  commentId: Overload:SessionTracker.SessionTracker.GetLockedAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.GetLockedAsync
  nameWithType: SessionTracker.GetLockedAsync
- uid: SessionTracker.SessionTracker.GetLockedAsync``1(System.String,System.Nullable{TimeSpan},CancellationToken)
  name: GetLockedAsync<TSession>(String, Nullable<TimeSpan>, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_GetLockedAsync__1_System_String_System_Nullable_TimeSpan__CancellationToken_
  commentId: M:SessionTracker.SessionTracker.GetLockedAsync``1(System.String,System.Nullable{TimeSpan},CancellationToken)
  name.vb: GetLockedAsync(Of TSession)(String, Nullable(Of TimeSpan), CancellationToken)
  fullName: SessionTracker.SessionTracker.GetLockedAsync<TSession>(System.String, System.Nullable<TimeSpan>, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.GetLockedAsync(Of TSession)(System.String, System.Nullable(Of TimeSpan), CancellationToken)
  nameWithType: SessionTracker.GetLockedAsync<TSession>(String, Nullable<TimeSpan>, CancellationToken)
  nameWithType.vb: SessionTracker.GetLockedAsync(Of TSession)(String, Nullable(Of TimeSpan), CancellationToken)
- uid: SessionTracker.SessionTracker.GetLockedAsync``1(System.String,TimeSpan,TimeSpan,CancellationToken)
  name: GetLockedAsync<TSession>(String, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_GetLockedAsync__1_System_String_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.GetLockedAsync``1(System.String,TimeSpan,TimeSpan,CancellationToken)
  name.vb: GetLockedAsync(Of TSession)(String, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.SessionTracker.GetLockedAsync<TSession>(System.String, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.GetLockedAsync(Of TSession)(System.String, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: SessionTracker.GetLockedAsync<TSession>(String, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: SessionTracker.GetLockedAsync(Of TSession)(String, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.SessionTracker.GetLockedAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: GetLockedAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_GetLockedAsync__1_System_String_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.GetLockedAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: GetLockedAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.SessionTracker.GetLockedAsync<TSession>(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.GetLockedAsync(Of TSession)(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: SessionTracker.GetLockedAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: SessionTracker.GetLockedAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.SessionTracker.LockAsync*
  name: LockAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_LockAsync_
  commentId: Overload:SessionTracker.SessionTracker.LockAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.LockAsync
  nameWithType: SessionTracker.LockAsync
- uid: SessionTracker.SessionTracker.LockAsync``1(``0,System.Nullable{TimeSpan},CancellationToken)
  name: LockAsync<TSession>(TSession, Nullable<TimeSpan>, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_LockAsync__1___0_System_Nullable_TimeSpan__CancellationToken_
  commentId: M:SessionTracker.SessionTracker.LockAsync``1(``0,System.Nullable{TimeSpan},CancellationToken)
  name.vb: LockAsync(Of TSession)(TSession, Nullable(Of TimeSpan), CancellationToken)
  fullName: SessionTracker.SessionTracker.LockAsync<TSession>(TSession, System.Nullable<TimeSpan>, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.LockAsync(Of TSession)(TSession, System.Nullable(Of TimeSpan), CancellationToken)
  nameWithType: SessionTracker.LockAsync<TSession>(TSession, Nullable<TimeSpan>, CancellationToken)
  nameWithType.vb: SessionTracker.LockAsync(Of TSession)(TSession, Nullable(Of TimeSpan), CancellationToken)
- uid: SessionTracker.SessionTracker.LockAsync``1(``0,TimeSpan,TimeSpan,CancellationToken)
  name: LockAsync<TSession>(TSession, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_LockAsync__1___0_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.LockAsync``1(``0,TimeSpan,TimeSpan,CancellationToken)
  name.vb: LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.SessionTracker.LockAsync<TSession>(TSession, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: SessionTracker.LockAsync<TSession>(TSession, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: SessionTracker.LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.SessionTracker.LockAsync``1(``0,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: LockAsync<TSession>(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_LockAsync__1___0_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.LockAsync``1(``0,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.SessionTracker.LockAsync<TSession>(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: SessionTracker.LockAsync<TSession>(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: SessionTracker.LockAsync(Of TSession)(TSession, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.SessionTracker.LockAsync``1(System.String,System.Nullable{TimeSpan},CancellationToken)
  name: LockAsync<TSession>(String, Nullable<TimeSpan>, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_LockAsync__1_System_String_System_Nullable_TimeSpan__CancellationToken_
  commentId: M:SessionTracker.SessionTracker.LockAsync``1(System.String,System.Nullable{TimeSpan},CancellationToken)
  name.vb: LockAsync(Of TSession)(String, Nullable(Of TimeSpan), CancellationToken)
  fullName: SessionTracker.SessionTracker.LockAsync<TSession>(System.String, System.Nullable<TimeSpan>, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.LockAsync(Of TSession)(System.String, System.Nullable(Of TimeSpan), CancellationToken)
  nameWithType: SessionTracker.LockAsync<TSession>(String, Nullable<TimeSpan>, CancellationToken)
  nameWithType.vb: SessionTracker.LockAsync(Of TSession)(String, Nullable(Of TimeSpan), CancellationToken)
- uid: SessionTracker.SessionTracker.LockAsync``1(System.String,TimeSpan,TimeSpan,CancellationToken)
  name: LockAsync<TSession>(String, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_LockAsync__1_System_String_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.LockAsync``1(System.String,TimeSpan,TimeSpan,CancellationToken)
  name.vb: LockAsync(Of TSession)(String, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.SessionTracker.LockAsync<TSession>(System.String, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.LockAsync(Of TSession)(System.String, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: SessionTracker.LockAsync<TSession>(String, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: SessionTracker.LockAsync(Of TSession)(String, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.SessionTracker.LockAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name: LockAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_LockAsync__1_System_String_TimeSpan_TimeSpan_TimeSpan_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.LockAsync``1(System.String,TimeSpan,TimeSpan,TimeSpan,CancellationToken)
  name.vb: LockAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName: SessionTracker.SessionTracker.LockAsync<TSession>(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.LockAsync(Of TSession)(System.String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType: SessionTracker.LockAsync<TSession>(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
  nameWithType.vb: SessionTracker.LockAsync(Of TSession)(String, TimeSpan, TimeSpan, TimeSpan, CancellationToken)
- uid: SessionTracker.SessionTracker.RefreshAsync*
  name: RefreshAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_RefreshAsync_
  commentId: Overload:SessionTracker.SessionTracker.RefreshAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.RefreshAsync
  nameWithType: SessionTracker.RefreshAsync
- uid: SessionTracker.SessionTracker.RefreshAsync``1(``0,CancellationToken)
  name: RefreshAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_RefreshAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.RefreshAsync``1(``0,CancellationToken)
  name.vb: RefreshAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.SessionTracker.RefreshAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.RefreshAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: SessionTracker.RefreshAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: SessionTracker.RefreshAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.SessionTracker.RefreshAsync``1(System.String,CancellationToken)
  name: RefreshAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_RefreshAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.RefreshAsync``1(System.String,CancellationToken)
  name.vb: RefreshAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.SessionTracker.RefreshAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.RefreshAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: SessionTracker.RefreshAsync<TSession>(String, CancellationToken)
  nameWithType.vb: SessionTracker.RefreshAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.SessionTracker.ResumeAndGetAsync*
  name: ResumeAndGetAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_ResumeAndGetAsync_
  commentId: Overload:SessionTracker.SessionTracker.ResumeAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.ResumeAndGetAsync
  nameWithType: SessionTracker.ResumeAndGetAsync
- uid: SessionTracker.SessionTracker.ResumeAndGetAsync``1(``0,CancellationToken)
  name: ResumeAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_ResumeAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.ResumeAndGetAsync``1(``0,CancellationToken)
  name.vb: ResumeAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.SessionTracker.ResumeAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.ResumeAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: SessionTracker.ResumeAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: SessionTracker.ResumeAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.SessionTracker.ResumeAndGetAsync``1(System.String,CancellationToken)
  name: ResumeAndGetAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_ResumeAndGetAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.ResumeAndGetAsync``1(System.String,CancellationToken)
  name.vb: ResumeAndGetAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.SessionTracker.ResumeAndGetAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.ResumeAndGetAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: SessionTracker.ResumeAndGetAsync<TSession>(String, CancellationToken)
  nameWithType.vb: SessionTracker.ResumeAndGetAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.SessionTracker.ResumeAsync*
  name: ResumeAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_ResumeAsync_
  commentId: Overload:SessionTracker.SessionTracker.ResumeAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.ResumeAsync
  nameWithType: SessionTracker.ResumeAsync
- uid: SessionTracker.SessionTracker.ResumeAsync``1(``0,CancellationToken)
  name: ResumeAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_ResumeAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.ResumeAsync``1(``0,CancellationToken)
  name.vb: ResumeAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.SessionTracker.ResumeAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.ResumeAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: SessionTracker.ResumeAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: SessionTracker.ResumeAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.SessionTracker.ResumeAsync``1(System.String,CancellationToken)
  name: ResumeAsync<TSession>(String, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_ResumeAsync__1_System_String_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.ResumeAsync``1(System.String,CancellationToken)
  name.vb: ResumeAsync(Of TSession)(String, CancellationToken)
  fullName: SessionTracker.SessionTracker.ResumeAsync<TSession>(System.String, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.ResumeAsync(Of TSession)(System.String, CancellationToken)
  nameWithType: SessionTracker.ResumeAsync<TSession>(String, CancellationToken)
  nameWithType.vb: SessionTracker.ResumeAsync(Of TSession)(String, CancellationToken)
- uid: SessionTracker.SessionTracker.StartAsync*
  name: StartAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_StartAsync_
  commentId: Overload:SessionTracker.SessionTracker.StartAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.StartAsync
  nameWithType: SessionTracker.StartAsync
- uid: SessionTracker.SessionTracker.StartAsync``1(``0,CancellationToken)
  name: StartAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_StartAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.StartAsync``1(``0,CancellationToken)
  name.vb: StartAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.SessionTracker.StartAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.StartAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: SessionTracker.StartAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: SessionTracker.StartAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.SessionTracker.StartAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name: StartAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_StartAsync__1___0_SessionTracker_SessionEntryOptions_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.StartAsync``1(``0,SessionTracker.SessionEntryOptions,CancellationToken)
  name.vb: StartAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
  fullName: SessionTracker.SessionTracker.StartAsync<TSession>(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.StartAsync(Of TSession)(TSession, SessionTracker.SessionEntryOptions, CancellationToken)
  nameWithType: SessionTracker.StartAsync<TSession>(TSession, SessionEntryOptions, CancellationToken)
  nameWithType.vb: SessionTracker.StartAsync(Of TSession)(TSession, SessionEntryOptions, CancellationToken)
- uid: SessionTracker.SessionTracker.UpdateAndGetAsync*
  name: UpdateAndGetAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_UpdateAndGetAsync_
  commentId: Overload:SessionTracker.SessionTracker.UpdateAndGetAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.UpdateAndGetAsync
  nameWithType: SessionTracker.UpdateAndGetAsync
- uid: SessionTracker.SessionTracker.UpdateAndGetAsync``1(``0,CancellationToken)
  name: UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_UpdateAndGetAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.UpdateAndGetAsync``1(``0,CancellationToken)
  name.vb: UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.SessionTracker.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: SessionTracker.UpdateAndGetAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: SessionTracker.UpdateAndGetAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.SessionTracker.UpdateAsync*
  name: UpdateAsync
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_UpdateAsync_
  commentId: Overload:SessionTracker.SessionTracker.UpdateAsync
  isSpec: "True"
  fullName: SessionTracker.SessionTracker.UpdateAsync
  nameWithType: SessionTracker.UpdateAsync
- uid: SessionTracker.SessionTracker.UpdateAsync``1(``0,CancellationToken)
  name: UpdateAsync<TSession>(TSession, CancellationToken)
  href: api/SessionTracker.SessionTracker.html#SessionTracker_SessionTracker_UpdateAsync__1___0_CancellationToken_
  commentId: M:SessionTracker.SessionTracker.UpdateAsync``1(``0,CancellationToken)
  name.vb: UpdateAsync(Of TSession)(TSession, CancellationToken)
  fullName: SessionTracker.SessionTracker.UpdateAsync<TSession>(TSession, CancellationToken)
  fullName.vb: SessionTracker.SessionTracker.UpdateAsync(Of TSession)(TSession, CancellationToken)
  nameWithType: SessionTracker.UpdateAsync<TSession>(TSession, CancellationToken)
  nameWithType.vb: SessionTracker.UpdateAsync(Of TSession)(TSession, CancellationToken)
- uid: SessionTracker.SessionTrackerBuilder
  name: SessionTrackerBuilder
  href: api/SessionTracker.SessionTrackerBuilder.html
  commentId: T:SessionTracker.SessionTrackerBuilder
  fullName: SessionTracker.SessionTrackerBuilder
  nameWithType: SessionTrackerBuilder
- uid: SessionTracker.SessionTrackerBuilder.AddDataProvider*
  name: AddDataProvider
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_AddDataProvider_
  commentId: Overload:SessionTracker.SessionTrackerBuilder.AddDataProvider
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerBuilder.AddDataProvider
  nameWithType: SessionTrackerBuilder.AddDataProvider
- uid: SessionTracker.SessionTrackerBuilder.AddDataProvider``1(``0)
  name: AddDataProvider<TDataProvider>(TDataProvider)
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_AddDataProvider__1___0_
  commentId: M:SessionTracker.SessionTrackerBuilder.AddDataProvider``1(``0)
  name.vb: AddDataProvider(Of TDataProvider)(TDataProvider)
  fullName: SessionTracker.SessionTrackerBuilder.AddDataProvider<TDataProvider>(TDataProvider)
  fullName.vb: SessionTracker.SessionTrackerBuilder.AddDataProvider(Of TDataProvider)(TDataProvider)
  nameWithType: SessionTrackerBuilder.AddDataProvider<TDataProvider>(TDataProvider)
  nameWithType.vb: SessionTrackerBuilder.AddDataProvider(Of TDataProvider)(TDataProvider)
- uid: SessionTracker.SessionTrackerBuilder.AddDataProvider``1(Func{IServiceProvider,``0},ServiceLifetime)
  name: AddDataProvider<TDataProvider>(Func<IServiceProvider, TDataProvider>, ServiceLifetime)
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_AddDataProvider__1_Func_IServiceProvider___0__ServiceLifetime_
  commentId: M:SessionTracker.SessionTrackerBuilder.AddDataProvider``1(Func{IServiceProvider,``0},ServiceLifetime)
  name.vb: AddDataProvider(Of TDataProvider)(Func(Of IServiceProvider, TDataProvider), ServiceLifetime)
  fullName: SessionTracker.SessionTrackerBuilder.AddDataProvider<TDataProvider>(Func<IServiceProvider, TDataProvider>, ServiceLifetime)
  fullName.vb: SessionTracker.SessionTrackerBuilder.AddDataProvider(Of TDataProvider)(Func(Of IServiceProvider, TDataProvider), ServiceLifetime)
  nameWithType: SessionTrackerBuilder.AddDataProvider<TDataProvider>(Func<IServiceProvider, TDataProvider>, ServiceLifetime)
  nameWithType.vb: SessionTrackerBuilder.AddDataProvider(Of TDataProvider)(Func(Of IServiceProvider, TDataProvider), ServiceLifetime)
- uid: SessionTracker.SessionTrackerBuilder.AddDataProvider``1(ServiceLifetime)
  name: AddDataProvider<TDataProvider>(ServiceLifetime)
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_AddDataProvider__1_ServiceLifetime_
  commentId: M:SessionTracker.SessionTrackerBuilder.AddDataProvider``1(ServiceLifetime)
  name.vb: AddDataProvider(Of TDataProvider)(ServiceLifetime)
  fullName: SessionTracker.SessionTrackerBuilder.AddDataProvider<TDataProvider>(ServiceLifetime)
  fullName.vb: SessionTracker.SessionTrackerBuilder.AddDataProvider(Of TDataProvider)(ServiceLifetime)
  nameWithType: SessionTrackerBuilder.AddDataProvider<TDataProvider>(ServiceLifetime)
  nameWithType.vb: SessionTrackerBuilder.AddDataProvider(Of TDataProvider)(ServiceLifetime)
- uid: SessionTracker.SessionTrackerBuilder.AddLockProvider*
  name: AddLockProvider
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_AddLockProvider_
  commentId: Overload:SessionTracker.SessionTrackerBuilder.AddLockProvider
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerBuilder.AddLockProvider
  nameWithType: SessionTrackerBuilder.AddLockProvider
- uid: SessionTracker.SessionTrackerBuilder.AddLockProvider``1(``0)
  name: AddLockProvider<TLockProvider>(TLockProvider)
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_AddLockProvider__1___0_
  commentId: M:SessionTracker.SessionTrackerBuilder.AddLockProvider``1(``0)
  name.vb: AddLockProvider(Of TLockProvider)(TLockProvider)
  fullName: SessionTracker.SessionTrackerBuilder.AddLockProvider<TLockProvider>(TLockProvider)
  fullName.vb: SessionTracker.SessionTrackerBuilder.AddLockProvider(Of TLockProvider)(TLockProvider)
  nameWithType: SessionTrackerBuilder.AddLockProvider<TLockProvider>(TLockProvider)
  nameWithType.vb: SessionTrackerBuilder.AddLockProvider(Of TLockProvider)(TLockProvider)
- uid: SessionTracker.SessionTrackerBuilder.AddLockProvider``1(Func{IServiceProvider,``0},ServiceLifetime)
  name: AddLockProvider<TLockProvider>(Func<IServiceProvider, TLockProvider>, ServiceLifetime)
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_AddLockProvider__1_Func_IServiceProvider___0__ServiceLifetime_
  commentId: M:SessionTracker.SessionTrackerBuilder.AddLockProvider``1(Func{IServiceProvider,``0},ServiceLifetime)
  name.vb: AddLockProvider(Of TLockProvider)(Func(Of IServiceProvider, TLockProvider), ServiceLifetime)
  fullName: SessionTracker.SessionTrackerBuilder.AddLockProvider<TLockProvider>(Func<IServiceProvider, TLockProvider>, ServiceLifetime)
  fullName.vb: SessionTracker.SessionTrackerBuilder.AddLockProvider(Of TLockProvider)(Func(Of IServiceProvider, TLockProvider), ServiceLifetime)
  nameWithType: SessionTrackerBuilder.AddLockProvider<TLockProvider>(Func<IServiceProvider, TLockProvider>, ServiceLifetime)
  nameWithType.vb: SessionTrackerBuilder.AddLockProvider(Of TLockProvider)(Func(Of IServiceProvider, TLockProvider), ServiceLifetime)
- uid: SessionTracker.SessionTrackerBuilder.AddLockProvider``1(ServiceLifetime)
  name: AddLockProvider<TLockProvider>(ServiceLifetime)
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_AddLockProvider__1_ServiceLifetime_
  commentId: M:SessionTracker.SessionTrackerBuilder.AddLockProvider``1(ServiceLifetime)
  name.vb: AddLockProvider(Of TLockProvider)(ServiceLifetime)
  fullName: SessionTracker.SessionTrackerBuilder.AddLockProvider<TLockProvider>(ServiceLifetime)
  fullName.vb: SessionTracker.SessionTrackerBuilder.AddLockProvider(Of TLockProvider)(ServiceLifetime)
  nameWithType: SessionTrackerBuilder.AddLockProvider<TLockProvider>(ServiceLifetime)
  nameWithType.vb: SessionTrackerBuilder.AddLockProvider(Of TLockProvider)(ServiceLifetime)
- uid: SessionTracker.SessionTrackerBuilder.Complete
  name: Complete()
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_Complete
  commentId: M:SessionTracker.SessionTrackerBuilder.Complete
  fullName: SessionTracker.SessionTrackerBuilder.Complete()
  nameWithType: SessionTrackerBuilder.Complete()
- uid: SessionTracker.SessionTrackerBuilder.Complete*
  name: Complete
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_Complete_
  commentId: Overload:SessionTracker.SessionTrackerBuilder.Complete
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerBuilder.Complete
  nameWithType: SessionTrackerBuilder.Complete
- uid: SessionTracker.SessionTrackerBuilder.Services
  name: Services
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_Services
  commentId: P:SessionTracker.SessionTrackerBuilder.Services
  fullName: SessionTracker.SessionTrackerBuilder.Services
  nameWithType: SessionTrackerBuilder.Services
- uid: SessionTracker.SessionTrackerBuilder.Services*
  name: Services
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_Services_
  commentId: Overload:SessionTracker.SessionTrackerBuilder.Services
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerBuilder.Services
  nameWithType: SessionTrackerBuilder.Services
- uid: SessionTracker.SessionTrackerBuilder.Settings
  name: Settings
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_Settings
  commentId: P:SessionTracker.SessionTrackerBuilder.Settings
  fullName: SessionTracker.SessionTrackerBuilder.Settings
  nameWithType: SessionTrackerBuilder.Settings
- uid: SessionTracker.SessionTrackerBuilder.Settings*
  name: Settings
  href: api/SessionTracker.SessionTrackerBuilder.html#SessionTracker_SessionTrackerBuilder_Settings_
  commentId: Overload:SessionTracker.SessionTrackerBuilder.Settings
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerBuilder.Settings
  nameWithType: SessionTrackerBuilder.Settings
- uid: SessionTracker.SessionTrackerSettings
  name: SessionTrackerSettings
  href: api/SessionTracker.SessionTrackerSettings.html
  commentId: T:SessionTracker.SessionTrackerSettings
  fullName: SessionTracker.SessionTrackerSettings
  nameWithType: SessionTrackerSettings
- uid: SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault(Type,System.Nullable{TimeSpan})
  name: GetAbsoluteExpirationOrDefault(Type, Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetAbsoluteExpirationOrDefault_Type_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault(Type,System.Nullable{TimeSpan})
  name.vb: GetAbsoluteExpirationOrDefault(Type, Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault(Type, System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault(Type, System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.GetAbsoluteExpirationOrDefault(Type, Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.GetAbsoluteExpirationOrDefault(Type, Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault*
  name: GetAbsoluteExpirationOrDefault
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetAbsoluteExpirationOrDefault_
  commentId: Overload:SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault
  nameWithType: SessionTrackerSettings.GetAbsoluteExpirationOrDefault
- uid: SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault``1(System.Nullable{TimeSpan})
  name: GetAbsoluteExpirationOrDefault<TSession>(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetAbsoluteExpirationOrDefault__1_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault``1(System.Nullable{TimeSpan})
  name.vb: GetAbsoluteExpirationOrDefault(Of TSession)(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault<TSession>(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.GetAbsoluteExpirationOrDefault(Of TSession)(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.GetAbsoluteExpirationOrDefault<TSession>(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.GetAbsoluteExpirationOrDefault(Of TSession)(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault(Type,System.Nullable{TimeSpan})
  name: GetEvictionAbsoluteExpirationOrDefault(Type, Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetEvictionAbsoluteExpirationOrDefault_Type_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault(Type,System.Nullable{TimeSpan})
  name.vb: GetEvictionAbsoluteExpirationOrDefault(Type, Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault(Type, System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault(Type, System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault(Type, Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault(Type, Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault*
  name: GetEvictionAbsoluteExpirationOrDefault
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetEvictionAbsoluteExpirationOrDefault_
  commentId: Overload:SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault
  nameWithType: SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault
- uid: SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault``1(System.Nullable{TimeSpan})
  name: GetEvictionAbsoluteExpirationOrDefault<TSession>(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetEvictionAbsoluteExpirationOrDefault__1_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault``1(System.Nullable{TimeSpan})
  name.vb: GetEvictionAbsoluteExpirationOrDefault(Of TSession)(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault<TSession>(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault(Of TSession)(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault<TSession>(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.GetEvictionAbsoluteExpirationOrDefault(Of TSession)(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.GetEvictionSessionEntryOptions*
  name: GetEvictionSessionEntryOptions
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetEvictionSessionEntryOptions_
  commentId: Overload:SessionTracker.SessionTrackerSettings.GetEvictionSessionEntryOptions
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.GetEvictionSessionEntryOptions
  nameWithType: SessionTrackerSettings.GetEvictionSessionEntryOptions
- uid: SessionTracker.SessionTrackerSettings.GetEvictionSessionEntryOptions``1
  name: GetEvictionSessionEntryOptions<TSession>()
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetEvictionSessionEntryOptions__1
  commentId: M:SessionTracker.SessionTrackerSettings.GetEvictionSessionEntryOptions``1
  name.vb: GetEvictionSessionEntryOptions(Of TSession)()
  fullName: SessionTracker.SessionTrackerSettings.GetEvictionSessionEntryOptions<TSession>()
  fullName.vb: SessionTracker.SessionTrackerSettings.GetEvictionSessionEntryOptions(Of TSession)()
  nameWithType: SessionTrackerSettings.GetEvictionSessionEntryOptions<TSession>()
  nameWithType.vb: SessionTrackerSettings.GetEvictionSessionEntryOptions(Of TSession)()
- uid: SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault(Type,System.Nullable{TimeSpan})
  name: GetEvictionSlidingExpirationOrDefault(Type, Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetEvictionSlidingExpirationOrDefault_Type_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault(Type,System.Nullable{TimeSpan})
  name.vb: GetEvictionSlidingExpirationOrDefault(Type, Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault(Type, System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault(Type, System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault(Type, Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault(Type, Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault*
  name: GetEvictionSlidingExpirationOrDefault
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetEvictionSlidingExpirationOrDefault_
  commentId: Overload:SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault
  nameWithType: SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault
- uid: SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault``1(System.Nullable{TimeSpan})
  name: GetEvictionSlidingExpirationOrDefault<TSession>(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetEvictionSlidingExpirationOrDefault__1_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault``1(System.Nullable{TimeSpan})
  name.vb: GetEvictionSlidingExpirationOrDefault(Of TSession)(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault<TSession>(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault(Of TSession)(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault<TSession>(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.GetEvictionSlidingExpirationOrDefault(Of TSession)(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault(Type)
  name: GetLockExpirationOrDefault(Type)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetLockExpirationOrDefault_Type_
  commentId: M:SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault(Type)
  fullName: SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault(Type)
  nameWithType: SessionTrackerSettings.GetLockExpirationOrDefault(Type)
- uid: SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault*
  name: GetLockExpirationOrDefault
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetLockExpirationOrDefault_
  commentId: Overload:SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault
  nameWithType: SessionTrackerSettings.GetLockExpirationOrDefault
- uid: SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault``1
  name: GetLockExpirationOrDefault<TSession>()
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetLockExpirationOrDefault__1
  commentId: M:SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault``1
  name.vb: GetLockExpirationOrDefault(Of TSession)()
  fullName: SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault<TSession>()
  fullName.vb: SessionTracker.SessionTrackerSettings.GetLockExpirationOrDefault(Of TSession)()
  nameWithType: SessionTrackerSettings.GetLockExpirationOrDefault<TSession>()
  nameWithType.vb: SessionTrackerSettings.GetLockExpirationOrDefault(Of TSession)()
- uid: SessionTracker.SessionTrackerSettings.GetSessionEntryOptions*
  name: GetSessionEntryOptions
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetSessionEntryOptions_
  commentId: Overload:SessionTracker.SessionTrackerSettings.GetSessionEntryOptions
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.GetSessionEntryOptions
  nameWithType: SessionTrackerSettings.GetSessionEntryOptions
- uid: SessionTracker.SessionTrackerSettings.GetSessionEntryOptions``1
  name: GetSessionEntryOptions<TSession>()
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetSessionEntryOptions__1
  commentId: M:SessionTracker.SessionTrackerSettings.GetSessionEntryOptions``1
  name.vb: GetSessionEntryOptions(Of TSession)()
  fullName: SessionTracker.SessionTrackerSettings.GetSessionEntryOptions<TSession>()
  fullName.vb: SessionTracker.SessionTrackerSettings.GetSessionEntryOptions(Of TSession)()
  nameWithType: SessionTrackerSettings.GetSessionEntryOptions<TSession>()
  nameWithType.vb: SessionTrackerSettings.GetSessionEntryOptions(Of TSession)()
- uid: SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault(Type,System.Nullable{TimeSpan})
  name: GetSlidingExpirationOrDefault(Type, Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetSlidingExpirationOrDefault_Type_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault(Type,System.Nullable{TimeSpan})
  name.vb: GetSlidingExpirationOrDefault(Type, Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault(Type, System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault(Type, System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.GetSlidingExpirationOrDefault(Type, Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.GetSlidingExpirationOrDefault(Type, Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault*
  name: GetSlidingExpirationOrDefault
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetSlidingExpirationOrDefault_
  commentId: Overload:SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault
  nameWithType: SessionTrackerSettings.GetSlidingExpirationOrDefault
- uid: SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault``1(System.Nullable{TimeSpan})
  name: GetSlidingExpirationOrDefault<TSession>(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_GetSlidingExpirationOrDefault__1_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault``1(System.Nullable{TimeSpan})
  name.vb: GetSlidingExpirationOrDefault(Of TSession)(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault<TSession>(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.GetSlidingExpirationOrDefault(Of TSession)(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.GetSlidingExpirationOrDefault<TSession>(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.GetSlidingExpirationOrDefault(Of TSession)(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.SetAbsoluteExpiration*
  name: SetAbsoluteExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetAbsoluteExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetAbsoluteExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetAbsoluteExpiration
  nameWithType: SessionTrackerSettings.SetAbsoluteExpiration
- uid: SessionTracker.SessionTrackerSettings.SetAbsoluteExpiration``1(System.Nullable{TimeSpan})
  name: SetAbsoluteExpiration<TSession>(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetAbsoluteExpiration__1_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.SetAbsoluteExpiration``1(System.Nullable{TimeSpan})
  name.vb: SetAbsoluteExpiration(Of TSession)(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.SetAbsoluteExpiration<TSession>(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetAbsoluteExpiration(Of TSession)(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.SetAbsoluteExpiration<TSession>(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.SetAbsoluteExpiration(Of TSession)(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.SetDefaultAbsoluteExpiration(System.Nullable{TimeSpan})
  name: SetDefaultAbsoluteExpiration(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultAbsoluteExpiration_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.SetDefaultAbsoluteExpiration(System.Nullable{TimeSpan})
  name.vb: SetDefaultAbsoluteExpiration(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultAbsoluteExpiration(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetDefaultAbsoluteExpiration(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.SetDefaultAbsoluteExpiration(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.SetDefaultAbsoluteExpiration(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.SetDefaultAbsoluteExpiration*
  name: SetDefaultAbsoluteExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultAbsoluteExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetDefaultAbsoluteExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultAbsoluteExpiration
  nameWithType: SessionTrackerSettings.SetDefaultAbsoluteExpiration
- uid: SessionTracker.SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration(System.Nullable{TimeSpan})
  name: SetDefaultEvictionAbsoluteExpiration(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultEvictionAbsoluteExpiration_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration(System.Nullable{TimeSpan})
  name.vb: SetDefaultEvictionAbsoluteExpiration(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration*
  name: SetDefaultEvictionAbsoluteExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultEvictionAbsoluteExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration
  nameWithType: SessionTrackerSettings.SetDefaultEvictionAbsoluteExpiration
- uid: SessionTracker.SessionTrackerSettings.SetDefaultEvictionSlidingExpiration(System.Nullable{TimeSpan})
  name: SetDefaultEvictionSlidingExpiration(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultEvictionSlidingExpiration_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.SetDefaultEvictionSlidingExpiration(System.Nullable{TimeSpan})
  name.vb: SetDefaultEvictionSlidingExpiration(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultEvictionSlidingExpiration(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetDefaultEvictionSlidingExpiration(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.SetDefaultEvictionSlidingExpiration(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.SetDefaultEvictionSlidingExpiration(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.SetDefaultEvictionSlidingExpiration*
  name: SetDefaultEvictionSlidingExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultEvictionSlidingExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetDefaultEvictionSlidingExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultEvictionSlidingExpiration
  nameWithType: SessionTrackerSettings.SetDefaultEvictionSlidingExpiration
- uid: SessionTracker.SessionTrackerSettings.SetDefaultLockExpiration(TimeSpan)
  name: SetDefaultLockExpiration(TimeSpan)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultLockExpiration_TimeSpan_
  commentId: M:SessionTracker.SessionTrackerSettings.SetDefaultLockExpiration(TimeSpan)
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultLockExpiration(TimeSpan)
  nameWithType: SessionTrackerSettings.SetDefaultLockExpiration(TimeSpan)
- uid: SessionTracker.SessionTrackerSettings.SetDefaultLockExpiration*
  name: SetDefaultLockExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultLockExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetDefaultLockExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultLockExpiration
  nameWithType: SessionTrackerSettings.SetDefaultLockExpiration
- uid: SessionTracker.SessionTrackerSettings.SetDefaultLockRetry(TimeSpan)
  name: SetDefaultLockRetry(TimeSpan)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultLockRetry_TimeSpan_
  commentId: M:SessionTracker.SessionTrackerSettings.SetDefaultLockRetry(TimeSpan)
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultLockRetry(TimeSpan)
  nameWithType: SessionTrackerSettings.SetDefaultLockRetry(TimeSpan)
- uid: SessionTracker.SessionTrackerSettings.SetDefaultLockRetry*
  name: SetDefaultLockRetry
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultLockRetry_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetDefaultLockRetry
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultLockRetry
  nameWithType: SessionTrackerSettings.SetDefaultLockRetry
- uid: SessionTracker.SessionTrackerSettings.SetDefaultLockWait(TimeSpan)
  name: SetDefaultLockWait(TimeSpan)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultLockWait_TimeSpan_
  commentId: M:SessionTracker.SessionTrackerSettings.SetDefaultLockWait(TimeSpan)
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultLockWait(TimeSpan)
  nameWithType: SessionTrackerSettings.SetDefaultLockWait(TimeSpan)
- uid: SessionTracker.SessionTrackerSettings.SetDefaultLockWait*
  name: SetDefaultLockWait
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultLockWait_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetDefaultLockWait
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultLockWait
  nameWithType: SessionTrackerSettings.SetDefaultLockWait
- uid: SessionTracker.SessionTrackerSettings.SetDefaultSlidingExpiration(System.Nullable{TimeSpan})
  name: SetDefaultSlidingExpiration(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultSlidingExpiration_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.SetDefaultSlidingExpiration(System.Nullable{TimeSpan})
  name.vb: SetDefaultSlidingExpiration(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultSlidingExpiration(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetDefaultSlidingExpiration(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.SetDefaultSlidingExpiration(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.SetDefaultSlidingExpiration(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.SetDefaultSlidingExpiration*
  name: SetDefaultSlidingExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetDefaultSlidingExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetDefaultSlidingExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetDefaultSlidingExpiration
  nameWithType: SessionTrackerSettings.SetDefaultSlidingExpiration
- uid: SessionTracker.SessionTrackerSettings.SetEvictionAbsoluteExpiration*
  name: SetEvictionAbsoluteExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetEvictionAbsoluteExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetEvictionAbsoluteExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetEvictionAbsoluteExpiration
  nameWithType: SessionTrackerSettings.SetEvictionAbsoluteExpiration
- uid: SessionTracker.SessionTrackerSettings.SetEvictionAbsoluteExpiration``1(System.Nullable{TimeSpan})
  name: SetEvictionAbsoluteExpiration<TSession>(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetEvictionAbsoluteExpiration__1_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.SetEvictionAbsoluteExpiration``1(System.Nullable{TimeSpan})
  name.vb: SetEvictionAbsoluteExpiration(Of TSession)(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.SetEvictionAbsoluteExpiration<TSession>(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetEvictionAbsoluteExpiration(Of TSession)(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.SetEvictionAbsoluteExpiration<TSession>(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.SetEvictionAbsoluteExpiration(Of TSession)(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.SetEvictionSlidingExpiration*
  name: SetEvictionSlidingExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetEvictionSlidingExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetEvictionSlidingExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetEvictionSlidingExpiration
  nameWithType: SessionTrackerSettings.SetEvictionSlidingExpiration
- uid: SessionTracker.SessionTrackerSettings.SetEvictionSlidingExpiration``1(System.Nullable{TimeSpan})
  name: SetEvictionSlidingExpiration<TSession>(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetEvictionSlidingExpiration__1_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.SetEvictionSlidingExpiration``1(System.Nullable{TimeSpan})
  name.vb: SetEvictionSlidingExpiration(Of TSession)(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.SetEvictionSlidingExpiration<TSession>(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetEvictionSlidingExpiration(Of TSession)(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.SetEvictionSlidingExpiration<TSession>(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.SetEvictionSlidingExpiration(Of TSession)(Nullable(Of TimeSpan))
- uid: SessionTracker.SessionTrackerSettings.SetLockExpiration*
  name: SetLockExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetLockExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetLockExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetLockExpiration
  nameWithType: SessionTrackerSettings.SetLockExpiration
- uid: SessionTracker.SessionTrackerSettings.SetLockExpiration``1(TimeSpan)
  name: SetLockExpiration<TSession>(TimeSpan)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetLockExpiration__1_TimeSpan_
  commentId: M:SessionTracker.SessionTrackerSettings.SetLockExpiration``1(TimeSpan)
  name.vb: SetLockExpiration(Of TSession)(TimeSpan)
  fullName: SessionTracker.SessionTrackerSettings.SetLockExpiration<TSession>(TimeSpan)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetLockExpiration(Of TSession)(TimeSpan)
  nameWithType: SessionTrackerSettings.SetLockExpiration<TSession>(TimeSpan)
  nameWithType.vb: SessionTrackerSettings.SetLockExpiration(Of TSession)(TimeSpan)
- uid: SessionTracker.SessionTrackerSettings.SetSlidingExpiration*
  name: SetSlidingExpiration
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetSlidingExpiration_
  commentId: Overload:SessionTracker.SessionTrackerSettings.SetSlidingExpiration
  isSpec: "True"
  fullName: SessionTracker.SessionTrackerSettings.SetSlidingExpiration
  nameWithType: SessionTrackerSettings.SetSlidingExpiration
- uid: SessionTracker.SessionTrackerSettings.SetSlidingExpiration``1(System.Nullable{TimeSpan})
  name: SetSlidingExpiration<TSession>(Nullable<TimeSpan>)
  href: api/SessionTracker.SessionTrackerSettings.html#SessionTracker_SessionTrackerSettings_SetSlidingExpiration__1_System_Nullable_TimeSpan__
  commentId: M:SessionTracker.SessionTrackerSettings.SetSlidingExpiration``1(System.Nullable{TimeSpan})
  name.vb: SetSlidingExpiration(Of TSession)(Nullable(Of TimeSpan))
  fullName: SessionTracker.SessionTrackerSettings.SetSlidingExpiration<TSession>(System.Nullable<TimeSpan>)
  fullName.vb: SessionTracker.SessionTrackerSettings.SetSlidingExpiration(Of TSession)(System.Nullable(Of TimeSpan))
  nameWithType: SessionTrackerSettings.SetSlidingExpiration<TSession>(Nullable<TimeSpan>)
  nameWithType.vb: SessionTrackerSettings.SetSlidingExpiration(Of TSession)(Nullable(Of TimeSpan))
